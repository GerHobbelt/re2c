/* Generated by re2c */
// re2d $INPUT -o $OUTPUT -i --header lexer/state.d
module main;

import core.stdc.stddef;
import lexer.state; // the module is generated by re2c



private long lex(ref LexerState st) {
    const(char)* t;
    
{
	char yych;
	goto yy0;
yy1:
	++st.cur;
yy0:
	yych = *st.cur;
	switch (yych) {
		case 'a': goto yy1;
		case 'b':
			st.yyt1 = st.cur;
			goto yy3;
		default:
			st.yyt1 = st.cur;
			goto yy2;
	}
yy2:
	t = st.yyt1;
	{ return t - st.str; }
yy3:
	++st.cur;
	yych = *st.cur;
	switch (yych) {
		case 'b': goto yy3;
		default: goto yy2;
	}
}

}

void main() {
    const(char)* s = "ab";
    LexerState st = { s, s , null };
    assert(lex(st) == 1);

    const(char)* s2 = "aaabbbbbbbb";
    LexerState st2 = { s2, s2 , null };
    assert(lex(st2) == 3);
}
/* Generated by re2c */

module lexer.state;

struct LexerState {
    const(char)* str, cur;
    const(char)* yyt1;
};
d/headers/header.re:28:21: warning: rule matches empty string [-Wmatch-empty-string]
