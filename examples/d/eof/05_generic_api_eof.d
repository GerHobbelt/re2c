/* Generated by re2c */
#line 1 "d/eof/05_generic_api_eof.re"
// re2d $INPUT -o $OUTPUT
module main;

import core.stdc.stdlib;
import core.stdc.string;

private int lex(immutable char[] s) {
    // For the sake of example create a string without terminating null.
    char *buf = cast(char*) malloc(s.length);
    memcpy(buf, cast(const(void*)) s, s.length);

    const(char)* cur = buf, lim = buf + s.length, mar;
    int count = 0;

    for (;;) {
    
#line 20 "d/eof/05_generic_api_eof.d"
{
	char yych;
	yych = cur < lim ? *cur : 0;
	switch (yych) {
		case ' ': goto yy3;
		case '\'': goto yy5;
		default:
			if (cur >= lim) goto yy10;
			goto yy1;
	}
yy1:
	++cur;
yy2:
#line 30 "d/eof/05_generic_api_eof.re"
	{ count = -1; break; }
#line 36 "d/eof/05_generic_api_eof.d"
yy3:
	++cur;
	yych = cur < lim ? *cur : 0;
	switch (yych) {
		case ' ': goto yy3;
		default: goto yy4;
	}
yy4:
#line 33 "d/eof/05_generic_api_eof.re"
	{ continue; }
#line 47 "d/eof/05_generic_api_eof.d"
yy5:
	++cur;
	mar = cur;
	yych = cur < lim ? *cur : 0;
	if (yych >= 0x01) goto yy7;
	if (cur >= lim) goto yy2;
yy6:
	++cur;
	yych = cur < lim ? *cur : 0;
yy7:
	switch (yych) {
		case '\'': goto yy8;
		case '\\': goto yy9;
		default:
			if (cur >= lim) goto yy11;
			goto yy6;
	}
yy8:
	++cur;
#line 32 "d/eof/05_generic_api_eof.re"
	{ ++count; continue; }
#line 69 "d/eof/05_generic_api_eof.d"
yy9:
	++cur;
	yych = cur < lim ? *cur : 0;
	if (yych <= 0x00) {
		if (cur >= lim) goto yy11;
		goto yy6;
	}
	goto yy6;
yy10:
#line 31 "d/eof/05_generic_api_eof.re"
	{ break;{} }
#line 81 "d/eof/05_generic_api_eof.d"
yy11:
	cur = mar;
	goto yy2;
}
#line 34 "d/eof/05_generic_api_eof.re"

    }

    free(buf);
    return count;
}

void main() {
    assert(lex("") == 0);
    assert(lex("'qu\0tes' 'are' 'fine: \\'' ") == 3);
    assert(lex("'unterminated\\'") == -1);
}
