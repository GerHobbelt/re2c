/* Generated by re2c */
#line 1 "../../../benchmarks/c/src/re2c/submatch_05__datetime.re"
#include "re2c/base.h"

namespace re2c_submatch_05__datetime {

#line 27 "../../../benchmarks/c/src/re2c/submatch_05__datetime.re"


#line 1 "../../../benchmarks/c/src/re2c/base.re"
#line 11 "../../../benchmarks/c/src/re2c/base.re"


struct input_t {
    FILE* file;
    char *buf;
    char *lim;
    char *cur;
    char *mar;
    char *tok;
    
#line 23 "gen/re2c/submatch_05__datetime.cc"
char *yyt1;
char *yyt2;
#line 20 "../../../benchmarks/c/src/re2c/base.re"

    
#line 29 "gen/re2c/submatch_05__datetime.cc"
#line 21 "../../../benchmarks/c/src/re2c/base.re"

    taglistpool_t tlp;
    int eof;
};

static inline void taglistpool_clear(taglistpool_t *tlp, input_t *in) {
    tlp->next = tlp->head;
    
#line 39 "gen/re2c/submatch_05__datetime.cc"
#line 28 "../../../benchmarks/c/src/re2c/base.re"

}

static inline void taglistpool_init(taglistpool_t *tlp) {
    static const unsigned size = 1024 * 1024;
    tlp->head = (taglist_t*)malloc(size * sizeof(taglist_t));
    tlp->next = tlp->head;
    tlp->last = tlp->head + size;
}

static inline void taglistpool_free(taglistpool_t *tlp) {
    free(tlp->head);
    tlp->head = tlp->next = tlp->last = NULL;
}

static inline void taglist(taglist_t **ptl, const char *b, const char *t, taglistpool_t *tlp) {
#ifdef GROW_MTAG_LIST
    if (tlp->next >= tlp->last) {
        const unsigned size = tlp->last - tlp->head;
        taglist_t *head = (taglist_t*)malloc(2 * size * sizeof(taglist_t));
        memcpy(head, tlp->head, size * sizeof(taglist_t));
        free(tlp->head);
        tlp->head = head;
        tlp->next = head + size;
        tlp->last = head + size * 2;
    }
#else
    assert(tlp->next < tlp->last);
#endif
    taglist_t *tl = tlp->next++;
    tl->pred = *ptl;
    tl->dist = t - b;
    *ptl = tl;
}

static inline void free_input(input_t *in) {
    free(in->buf);
    taglistpool_free(&in->tlp);
    fclose(in->file);
}

#line 74 "../../../benchmarks/c/src/re2c/base.re"


#line 79 "../../../benchmarks/c/src/re2c/base.re"


#line 88 "gen/re2c/submatch_05__datetime.cc"
#define YYMAXFILL 26
#line 81 "../../../benchmarks/c/src/re2c/base.re"


static inline int fill_eofrule(input_t *in) {
    size_t free;
    if (in->eof) return 1;

    free = in->tok - in->buf;
    assert(free > 0);

    memmove(in->buf, in->tok, in->lim - in->tok);
    in->lim -= free;
    in->cur -= free;
    in->mar -= free;
    in->tok -= free;
    
#line 106 "gen/re2c/submatch_05__datetime.cc"
if (in->yyt1) in->yyt1 -= free;
if (in->yyt2) in->yyt2 -= free;
#line 95 "../../../benchmarks/c/src/re2c/base.re"


    in->lim += fread(in->lim, 1, free, in->file);
    in->lim[0] = 0;

    if (in->lim < in->buf + SIZE) {
        in->eof = 1;
    }

    return 0;
}

static inline int fill_padding(input_t *in, size_t need) {
    size_t free;
    if (in->eof) return 1;

    free = in->tok - in->buf;
    assert(free >= need);

    memmove(in->buf, in->tok, in->lim - in->tok);
    in->lim -= free;
    in->cur -= free;
    in->mar -= free;
    in->tok -= free;
    
#line 135 "gen/re2c/submatch_05__datetime.cc"
if (in->yyt1) in->yyt1 -= free;
if (in->yyt2) in->yyt2 -= free;
#line 119 "../../../benchmarks/c/src/re2c/base.re"


    in->lim += fread(in->lim, 1, free, in->file);

    if (in->lim < in->buf + SIZE) {
        in->eof = 1;
        memset(in->lim, 0, YYMAXFILL);
        in->lim += YYMAXFILL;
    }

    return 0;
}

static inline void init_input_eofrule(input_t *in, const char* fname) {
    in->file = fopen(fname, "rb");
    in->buf = (char*) malloc(SIZE + 1);
    in->lim = in->buf + SIZE;
    in->cur = in->lim;
    in->mar = in->lim;
    in->tok = in->lim;
    
#line 160 "gen/re2c/submatch_05__datetime.cc"
in->yyt1 = 0;
in->yyt2 = 0;
#line 139 "../../../benchmarks/c/src/re2c/base.re"

    
#line 166 "gen/re2c/submatch_05__datetime.cc"
#line 140 "../../../benchmarks/c/src/re2c/base.re"

    taglistpool_init(&in->tlp);
    in->eof = 0;
    fill_eofrule(in);
}

static inline void init_input_padding(input_t *in, const char* fname) {
    in->file = fopen(fname, "rb");
    in->buf = (char*) malloc(SIZE + YYMAXFILL);
    in->lim = in->buf + SIZE;
    in->cur = in->lim;
    in->mar = in->lim;
    in->tok = in->lim;
    
#line 182 "gen/re2c/submatch_05__datetime.cc"
in->yyt1 = 0;
in->yyt2 = 0;
#line 153 "../../../benchmarks/c/src/re2c/base.re"

    
#line 188 "gen/re2c/submatch_05__datetime.cc"
#line 154 "../../../benchmarks/c/src/re2c/base.re"

    taglistpool_init(&in->tlp);
    in->eof = 0;
}

int lex_yyfill_eofrule(input_t *in) {
    long count = 0;
    
#line 198 "gen/re2c/submatch_05__datetime.cc"
const char* M1;const char* M2;const char* d1;const char* d2;const char* h1;const char* h2;const char* m1;const char* m2;const char* s1;const char* s2;const char* y1;const char* y2;const char* z1;const char* z2;
#line 161 "../../../benchmarks/c/src/re2c/base.re"

    
#line 203 "gen/re2c/submatch_05__datetime.cc"
#line 162 "../../../benchmarks/c/src/re2c/base.re"

loop:
    in->tok = in->cur;
    
#line 209 "gen/re2c/submatch_05__datetime.cc"
{
	char yych;
yyFillLabel0:
	yych = *in->cur;
	switch (yych) {
		case '0':
			in->yyt1 = in->cur;
			goto yy3;
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
			in->yyt1 = in->cur;
			goto yy4;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel0;
				goto yy39;
			}
			goto yy1;
	}
yy1:
	++in->cur;
yy2:
#line 15 "../../../benchmarks/c/src/re2c/submatch_05__datetime.re"
	{ return -1; }
#line 241 "gen/re2c/submatch_05__datetime.cc"
yy3:
	in->mar = ++in->cur;
yyFillLabel1:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy5;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel1;
			}
			goto yy2;
	}
yy4:
	in->mar = ++in->cur;
yyFillLabel2:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy7;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel2;
			}
			goto yy2;
	}
yy5:
	++in->cur;
yyFillLabel3:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy8;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel3;
			}
			goto yy6;
	}
yy6:
	in->cur = in->mar;
	goto yy2;
yy7:
	++in->cur;
yyFillLabel4:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy9;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel4;
			}
			goto yy6;
	}
yy8:
	++in->cur;
yyFillLabel5:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy10;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel5;
			}
			goto yy6;
	}
yy9:
	++in->cur;
yyFillLabel6:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy11;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel6;
			}
			goto yy6;
	}
yy10:
	++in->cur;
yyFillLabel7:
	yych = *in->cur;
	switch (yych) {
		case '-': goto yy12;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel7;
			}
			goto yy6;
	}
yy11:
	++in->cur;
yyFillLabel8:
	yych = *in->cur;
	switch (yych) {
		case '-': goto yy12;
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy11;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel8;
			}
			goto yy6;
	}
yy12:
	++in->cur;
yyFillLabel9:
	yych = *in->cur;
	switch (yych) {
		case '0': goto yy13;
		case '1': goto yy14;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel9;
			}
			goto yy6;
	}
yy13:
	++in->cur;
yyFillLabel10:
	yych = *in->cur;
	switch (yych) {
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy15;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel10;
			}
			goto yy6;
	}
yy14:
	++in->cur;
yyFillLabel11:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2': goto yy15;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel11;
			}
			goto yy6;
	}
yy15:
	++in->cur;
yyFillLabel12:
	yych = *in->cur;
	switch (yych) {
		case '-': goto yy16;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel12;
			}
			goto yy6;
	}
yy16:
	++in->cur;
yyFillLabel13:
	yych = *in->cur;
	switch (yych) {
		case '0': goto yy17;
		case '1':
		case '2': goto yy18;
		case '3': goto yy19;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel13;
			}
			goto yy6;
	}
yy17:
	++in->cur;
yyFillLabel14:
	yych = *in->cur;
	switch (yych) {
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy20;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel14;
			}
			goto yy6;
	}
yy18:
	++in->cur;
yyFillLabel15:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy20;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel15;
			}
			goto yy6;
	}
yy19:
	++in->cur;
yyFillLabel16:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1': goto yy20;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel16;
			}
			goto yy6;
	}
yy20:
	++in->cur;
yyFillLabel17:
	yych = *in->cur;
	switch (yych) {
		case 'T': goto yy21;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel17;
			}
			goto yy6;
	}
yy21:
	++in->cur;
yyFillLabel18:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1': goto yy22;
		case '2': goto yy23;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel18;
			}
			goto yy6;
	}
yy22:
	++in->cur;
yyFillLabel19:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy24;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel19;
			}
			goto yy6;
	}
yy23:
	++in->cur;
yyFillLabel20:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3': goto yy24;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel20;
			}
			goto yy6;
	}
yy24:
	++in->cur;
yyFillLabel21:
	yych = *in->cur;
	switch (yych) {
		case ':': goto yy25;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel21;
			}
			goto yy6;
	}
yy25:
	++in->cur;
yyFillLabel22:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5': goto yy26;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel22;
			}
			goto yy6;
	}
yy26:
	++in->cur;
yyFillLabel23:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy27;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel23;
			}
			goto yy6;
	}
yy27:
	++in->cur;
yyFillLabel24:
	yych = *in->cur;
	switch (yych) {
		case ':': goto yy28;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel24;
			}
			goto yy6;
	}
yy28:
	++in->cur;
yyFillLabel25:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5': goto yy29;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel25;
			}
			goto yy6;
	}
yy29:
	++in->cur;
yyFillLabel26:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy30;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel26;
			}
			goto yy6;
	}
yy30:
	++in->cur;
yyFillLabel27:
	yych = *in->cur;
	switch (yych) {
		case '+':
		case '-':
			in->yyt2 = in->cur;
			goto yy31;
		case 'Z':
			in->yyt2 = in->cur;
			goto yy32;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel27;
			}
			goto yy6;
	}
yy31:
	++in->cur;
yyFillLabel28:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1': goto yy33;
		case '2': goto yy34;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel28;
			}
			goto yy6;
	}
yy32:
	++in->cur;
yyFillLabel29:
	yych = *in->cur;
	switch (yych) {
		case '\n': goto yy35;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel29;
			}
			goto yy6;
	}
yy33:
	++in->cur;
yyFillLabel30:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy36;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel30;
			}
			goto yy6;
	}
yy34:
	++in->cur;
yyFillLabel31:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3': goto yy36;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel31;
			}
			goto yy6;
	}
yy35:
	++in->cur;
	y1 = in->yyt1;
	z1 = in->yyt2;
	y2 = in->yyt2;
	y2 -= 15;
	m1 = in->yyt2;
	m1 -= 14;
	m2 = in->yyt2;
	m2 -= 12;
	d1 = in->yyt2;
	d1 -= 11;
	d2 = in->yyt2;
	d2 -= 9;
	h1 = in->yyt2;
	h1 -= 8;
	h2 = in->yyt2;
	h2 -= 6;
	M1 = in->yyt2;
	M1 -= 5;
	M2 = in->yyt2;
	M2 -= 3;
	s1 = in->yyt2;
	s1 -= 2;
	s2 = in->yyt2;
	z2 = in->cur;
	z2 -= 1;
#line 16 "../../../benchmarks/c/src/re2c/submatch_05__datetime.re"
	{
        OUT("year: ",    y1, y2);
        OUT("month: ",   m1, m2);
        OUT("day: ",     d1, d2);
        OUT("hours: ",   h1, h2);
        OUT("minutes: ", M1, M2);
        OUT("seconds: ", s1, s2);
        OUT("tz: ",      z1, z2);
        OUTC('\n');
        goto loop;
    }
#line 814 "gen/re2c/submatch_05__datetime.cc"
yy36:
	++in->cur;
yyFillLabel32:
	yych = *in->cur;
	switch (yych) {
		case ':': goto yy37;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel32;
			}
			goto yy6;
	}
yy37:
	++in->cur;
yyFillLabel33:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5': goto yy38;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel33;
			}
			goto yy6;
	}
yy38:
	++in->cur;
yyFillLabel34:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy32;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel34;
			}
			goto yy6;
	}
yy39:
#line 73 "../../../benchmarks/c/src/re2c/base.re"
	{ return count; }
#line 868 "gen/re2c/submatch_05__datetime.cc"
}
#line 169 "../../../benchmarks/c/src/re2c/base.re"

}

int lex_yyfill_padding(input_t *in) {
    long count = 0;
    
#line 877 "gen/re2c/submatch_05__datetime.cc"
const char* M1;const char* M2;const char* d1;const char* d2;const char* h1;const char* h2;const char* m1;const char* m2;const char* s1;const char* s2;const char* y1;const char* y2;const char* z1;const char* z2;
#line 174 "../../../benchmarks/c/src/re2c/base.re"

    
#line 882 "gen/re2c/submatch_05__datetime.cc"
#line 175 "../../../benchmarks/c/src/re2c/base.re"

loop:
    in->tok = in->cur;
    
#line 888 "gen/re2c/submatch_05__datetime.cc"
{
	char yych;
	static const unsigned char yybm[256] = {
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		128, 128, 128, 128, 128, 128, 128, 128,
		128, 128,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0
	};
	if ((in->lim - in->cur) < 26) if (fill_padding(in, 26) != 0) return -2;
	yych = *in->cur;
	if (yych <= 0x00) goto yy41;
	if (yych <= '/') goto yy42;
	if (yych <= '0') {
		in->yyt1 = in->cur;
		goto yy44;
	}
	if (yych <= '9') {
		in->yyt1 = in->cur;
		goto yy45;
	}
	goto yy42;
yy41:
	++in->cur;
#line 78 "../../../benchmarks/c/src/re2c/base.re"
	{ return count; }
#line 942 "gen/re2c/submatch_05__datetime.cc"
yy42:
	++in->cur;
yy43:
#line 15 "../../../benchmarks/c/src/re2c/submatch_05__datetime.re"
	{ return -1; }
#line 948 "gen/re2c/submatch_05__datetime.cc"
yy44:
	yych = *(in->mar = ++in->cur);
	if (yych <= '/') goto yy43;
	if (yych <= '9') goto yy46;
	goto yy43;
yy45:
	yych = *(in->mar = ++in->cur);
	if (yych <= '/') goto yy43;
	if (yych <= '9') goto yy48;
	goto yy43;
yy46:
	yych = *++in->cur;
	if (yych <= '/') goto yy47;
	if (yych <= '9') goto yy49;
yy47:
	in->cur = in->mar;
	goto yy43;
yy48:
	yych = *++in->cur;
	if (yych <= '/') goto yy47;
	if (yych <= '9') goto yy50;
	goto yy47;
yy49:
	yych = *++in->cur;
	if (yych <= '/') goto yy47;
	if (yych <= '9') goto yy51;
	goto yy47;
yy50:
	yych = *++in->cur;
	if (yybm[0+yych] & 128) goto yy52;
	goto yy47;
yy51:
	yych = *++in->cur;
	if (yych == '-') goto yy53;
	goto yy47;
yy52:
	++in->cur;
	if ((in->lim - in->cur) < 22) if (fill_padding(in, 22) != 0) return -2;
	yych = *in->cur;
	if (yybm[0+yych] & 128) goto yy52;
	if (yych != '-') goto yy47;
yy53:
	yych = *++in->cur;
	if (yych <= '/') goto yy47;
	if (yych <= '0') goto yy54;
	if (yych <= '1') goto yy55;
	goto yy47;
yy54:
	yych = *++in->cur;
	if (yych <= '0') goto yy47;
	if (yych <= '9') goto yy56;
	goto yy47;
yy55:
	yych = *++in->cur;
	if (yych <= '/') goto yy47;
	if (yych >= '3') goto yy47;
yy56:
	yych = *++in->cur;
	if (yych != '-') goto yy47;
	yych = *++in->cur;
	if (yych <= '/') goto yy47;
	if (yych <= '0') goto yy57;
	if (yych <= '2') goto yy58;
	if (yych <= '3') goto yy59;
	goto yy47;
yy57:
	yych = *++in->cur;
	if (yych <= '0') goto yy47;
	if (yych <= '9') goto yy60;
	goto yy47;
yy58:
	yych = *++in->cur;
	if (yych <= '/') goto yy47;
	if (yych <= '9') goto yy60;
	goto yy47;
yy59:
	yych = *++in->cur;
	if (yych <= '/') goto yy47;
	if (yych >= '2') goto yy47;
yy60:
	yych = *++in->cur;
	if (yych != 'T') goto yy47;
	yych = *++in->cur;
	if (yych <= '/') goto yy47;
	if (yych <= '1') goto yy61;
	if (yych <= '2') goto yy62;
	goto yy47;
yy61:
	yych = *++in->cur;
	if (yych <= '/') goto yy47;
	if (yych <= '9') goto yy63;
	goto yy47;
yy62:
	yych = *++in->cur;
	if (yych <= '/') goto yy47;
	if (yych >= '4') goto yy47;
yy63:
	yych = *++in->cur;
	if (yych != ':') goto yy47;
	yych = *++in->cur;
	if (yych <= '/') goto yy47;
	if (yych >= '6') goto yy47;
	yych = *++in->cur;
	if (yych <= '/') goto yy47;
	if (yych >= ':') goto yy47;
	yych = *++in->cur;
	if (yych != ':') goto yy47;
	yych = *++in->cur;
	if (yych <= '/') goto yy47;
	if (yych >= '6') goto yy47;
	yych = *++in->cur;
	if (yych <= '/') goto yy47;
	if (yych >= ':') goto yy47;
	yych = *++in->cur;
	if (yych <= ',') {
		if (yych != '+') goto yy47;
		in->yyt2 = in->cur;
	} else {
		if (yych <= '-') {
			in->yyt2 = in->cur;
			goto yy64;
		}
		if (yych == 'Z') {
			in->yyt2 = in->cur;
			goto yy65;
		}
		goto yy47;
	}
yy64:
	yych = *++in->cur;
	if (yych <= '/') goto yy47;
	if (yych <= '1') goto yy66;
	if (yych <= '2') goto yy67;
	goto yy47;
yy65:
	yych = *++in->cur;
	if (yych == '\n') goto yy68;
	goto yy47;
yy66:
	yych = *++in->cur;
	if (yych <= '/') goto yy47;
	if (yych <= '9') goto yy69;
	goto yy47;
yy67:
	yych = *++in->cur;
	if (yych <= '/') goto yy47;
	if (yych <= '3') goto yy69;
	goto yy47;
yy68:
	++in->cur;
	y1 = in->yyt1;
	z1 = in->yyt2;
	y2 = in->yyt2;
	y2 -= 15;
	m1 = in->yyt2;
	m1 -= 14;
	m2 = in->yyt2;
	m2 -= 12;
	d1 = in->yyt2;
	d1 -= 11;
	d2 = in->yyt2;
	d2 -= 9;
	h1 = in->yyt2;
	h1 -= 8;
	h2 = in->yyt2;
	h2 -= 6;
	M1 = in->yyt2;
	M1 -= 5;
	M2 = in->yyt2;
	M2 -= 3;
	s1 = in->yyt2;
	s1 -= 2;
	s2 = in->yyt2;
	z2 = in->cur;
	z2 -= 1;
#line 16 "../../../benchmarks/c/src/re2c/submatch_05__datetime.re"
	{
        OUT("year: ",    y1, y2);
        OUT("month: ",   m1, m2);
        OUT("day: ",     d1, d2);
        OUT("hours: ",   h1, h2);
        OUT("minutes: ", M1, M2);
        OUT("seconds: ", s1, s2);
        OUT("tz: ",      z1, z2);
        OUTC('\n');
        goto loop;
    }
#line 1136 "gen/re2c/submatch_05__datetime.cc"
yy69:
	yych = *++in->cur;
	if (yych != ':') goto yy47;
	yych = *++in->cur;
	if (yych <= '/') goto yy47;
	if (yych >= '6') goto yy47;
	yych = *++in->cur;
	if (yych <= '/') goto yy47;
	if (yych <= '9') goto yy65;
	goto yy47;
}
#line 183 "../../../benchmarks/c/src/re2c/base.re"

}

#define FN_BENCH(suffix) \
void bench_yyfill_##suffix::operator()( \
        benchmark::State &state, const char* input, long expected) const { \
    long count; \
    for (auto _ : state) { \
        input_t in; \
        init_input_##suffix(&in, input); \
        count = lex_yyfill_##suffix(&in); \
        free_input(&in); \
    } \
    if (count != expected) state.SkipWithError("error"); \
}
FN_BENCH(eofrule)
FN_BENCH(padding)
#undef FN_BENCH

#define FN_TEST(suffix) \
bool test_yyfill_##suffix(const char* input, long expected) { \
    input_t in; \
    init_input_##suffix(&in, input); \
    \
    long count = lex_yyfill_##suffix(&in); \
    switch (count) { \
    default: \
        if (count != expected) { \
            fprintf(stderr, "wrong count, expected %ld, got %ld\n", expected, count); \
        } \
        break; \
    case -1: \
        fprintf(stderr, "syntax error\n"); \
        break; \
    case -2: \
        fprintf(stderr, "yyfill error\n"); \
        break; \
    } \
    \
    free_input(&in); \
    return count == expected; \
}
FN_TEST(eofrule)
FN_TEST(padding)
#undef FN_TEST
#line 29 "../../../benchmarks/c/src/re2c/submatch_05__datetime.re"


} // namespace re2c_submatch_05__datetime
