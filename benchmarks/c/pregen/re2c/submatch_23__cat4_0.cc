/* Generated by re2c */
#line 1 "../../../benchmarks/c/src/re2c/submatch_23__cat4_0.re"
#include "re2c/base.h"

namespace re2c_submatch_23__cat4_0 {

#line 19 "../../../benchmarks/c/src/re2c/submatch_23__cat4_0.re"


#line 1 "../../../benchmarks/c/src/re2c/base.re"
#line 11 "../../../benchmarks/c/src/re2c/base.re"


struct input_t {
    FILE* file;
    char *buf;
    char *lim;
    char *cur;
    char *mar;
    char *tok;
    
#line 23 "gen/re2c/submatch_23__cat4_0.cc"
char *yyt1;
char *yyt2;
char *yyt3;
char *yyt4;
char *yyt5;
char *yyt6;
char *yyt7;
char *yyt8;
#line 20 "../../../benchmarks/c/src/re2c/base.re"

    
#line 35 "gen/re2c/submatch_23__cat4_0.cc"
#line 21 "../../../benchmarks/c/src/re2c/base.re"

    taglistpool_t tlp;
    int eof;
};

static inline void taglistpool_clear(taglistpool_t *tlp, input_t *in) {
    tlp->next = tlp->head;
    
#line 45 "gen/re2c/submatch_23__cat4_0.cc"
#line 28 "../../../benchmarks/c/src/re2c/base.re"

}

static inline void taglistpool_init(taglistpool_t *tlp) {
    static const unsigned size = 1024 * 1024;
    tlp->head = (taglist_t*)malloc(size * sizeof(taglist_t));
    tlp->next = tlp->head;
    tlp->last = tlp->head + size;
}

static inline void taglistpool_free(taglistpool_t *tlp) {
    free(tlp->head);
    tlp->head = tlp->next = tlp->last = NULL;
}

static inline void taglist(taglist_t **ptl, const char *b, const char *t, taglistpool_t *tlp) {
#ifdef GROW_MTAG_LIST
    if (tlp->next >= tlp->last) {
        const unsigned size = tlp->last - tlp->head;
        taglist_t *head = (taglist_t*)malloc(2 * size * sizeof(taglist_t));
        memcpy(head, tlp->head, size * sizeof(taglist_t));
        free(tlp->head);
        tlp->head = head;
        tlp->next = head + size;
        tlp->last = head + size * 2;
    }
#else
    assert(tlp->next < tlp->last);
#endif
    taglist_t *tl = tlp->next++;
    tl->pred = *ptl;
    tl->dist = t - b;
    *ptl = tl;
}

static inline void free_input(input_t *in) {
    free(in->buf);
    taglistpool_free(&in->tlp);
    fclose(in->file);
}

#line 74 "../../../benchmarks/c/src/re2c/base.re"


#line 79 "../../../benchmarks/c/src/re2c/base.re"


#line 94 "gen/re2c/submatch_23__cat4_0.cc"
#define YYMAXFILL 2
#line 81 "../../../benchmarks/c/src/re2c/base.re"


static inline int fill_eofrule(input_t *in) {
    size_t free;
    if (in->eof) return 1;

    free = in->tok - in->buf;
    assert(free > 0);

    memmove(in->buf, in->tok, in->lim - in->tok);
    in->lim -= free;
    in->cur -= free;
    in->mar -= free;
    in->tok -= free;
    
#line 112 "gen/re2c/submatch_23__cat4_0.cc"
if (in->yyt1) in->yyt1 -= free;
if (in->yyt2) in->yyt2 -= free;
if (in->yyt3) in->yyt3 -= free;
if (in->yyt4) in->yyt4 -= free;
if (in->yyt5) in->yyt5 -= free;
if (in->yyt6) in->yyt6 -= free;
if (in->yyt7) in->yyt7 -= free;
if (in->yyt8) in->yyt8 -= free;
#line 95 "../../../benchmarks/c/src/re2c/base.re"


    in->lim += fread(in->lim, 1, free, in->file);
    in->lim[0] = 0;

    if (in->lim < in->buf + SIZE) {
        in->eof = 1;
    }

    return 0;
}

static inline int fill_padding(input_t *in, size_t need) {
    size_t free;
    if (in->eof) return 1;

    free = in->tok - in->buf;
    assert(free >= need);

    memmove(in->buf, in->tok, in->lim - in->tok);
    in->lim -= free;
    in->cur -= free;
    in->mar -= free;
    in->tok -= free;
    
#line 147 "gen/re2c/submatch_23__cat4_0.cc"
if (in->yyt1) in->yyt1 -= free;
if (in->yyt2) in->yyt2 -= free;
if (in->yyt3) in->yyt3 -= free;
if (in->yyt4) in->yyt4 -= free;
if (in->yyt5) in->yyt5 -= free;
if (in->yyt6) in->yyt6 -= free;
if (in->yyt7) in->yyt7 -= free;
if (in->yyt8) in->yyt8 -= free;
#line 119 "../../../benchmarks/c/src/re2c/base.re"


    in->lim += fread(in->lim, 1, free, in->file);

    if (in->lim < in->buf + SIZE) {
        in->eof = 1;
        memset(in->lim, 0, YYMAXFILL);
        in->lim += YYMAXFILL;
    }

    return 0;
}

static inline void init_input_eofrule(input_t *in, const char* fname) {
    in->file = fopen(fname, "rb");
    in->buf = (char*) malloc(SIZE + 1);
    in->lim = in->buf + SIZE;
    in->cur = in->lim;
    in->mar = in->lim;
    in->tok = in->lim;
    
#line 178 "gen/re2c/submatch_23__cat4_0.cc"
in->yyt1 = 0;
in->yyt2 = 0;
in->yyt3 = 0;
in->yyt4 = 0;
in->yyt5 = 0;
in->yyt6 = 0;
in->yyt7 = 0;
in->yyt8 = 0;
#line 139 "../../../benchmarks/c/src/re2c/base.re"

    
#line 190 "gen/re2c/submatch_23__cat4_0.cc"
#line 140 "../../../benchmarks/c/src/re2c/base.re"

    taglistpool_init(&in->tlp);
    in->eof = 0;
    fill_eofrule(in);
}

static inline void init_input_padding(input_t *in, const char* fname) {
    in->file = fopen(fname, "rb");
    in->buf = (char*) malloc(SIZE + YYMAXFILL);
    in->lim = in->buf + SIZE;
    in->cur = in->lim;
    in->mar = in->lim;
    in->tok = in->lim;
    
#line 206 "gen/re2c/submatch_23__cat4_0.cc"
in->yyt1 = 0;
in->yyt2 = 0;
in->yyt3 = 0;
in->yyt4 = 0;
in->yyt5 = 0;
in->yyt6 = 0;
in->yyt7 = 0;
in->yyt8 = 0;
#line 153 "../../../benchmarks/c/src/re2c/base.re"

    
#line 218 "gen/re2c/submatch_23__cat4_0.cc"
#line 154 "../../../benchmarks/c/src/re2c/base.re"

    taglistpool_init(&in->tlp);
    in->eof = 0;
}

int lex_yyfill_eofrule(input_t *in) {
    long count = 0;
    
#line 228 "gen/re2c/submatch_23__cat4_0.cc"
const char* a0;const char* a1;const char* a2;const char* a3;const char* b0;const char* b1;const char* b2;const char* b3;
#line 161 "../../../benchmarks/c/src/re2c/base.re"

    
#line 233 "gen/re2c/submatch_23__cat4_0.cc"
#line 162 "../../../benchmarks/c/src/re2c/base.re"

loop:
    in->tok = in->cur;
    
#line 239 "gen/re2c/submatch_23__cat4_0.cc"
{
	char yych;
yyFillLabel0:
	yych = *in->cur;
	switch (yych) {
		case '\n':
			in->yyt1 = in->cur;
			in->yyt2 = in->cur;
			in->yyt3 = in->cur;
			in->yyt4 = in->cur;
			in->yyt5 = in->cur;
			in->yyt6 = in->cur;
			in->yyt7 = in->cur;
			in->yyt8 = in->cur;
			goto yy3;
		case 'a':
			in->yyt1 = in->cur;
			goto yy4;
		case 'b':
			in->yyt1 = in->cur;
			in->yyt8 = in->cur;
			goto yy5;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel0;
				goto yy17;
			}
			goto yy1;
	}
yy1:
	++in->cur;
yy2:
#line 6 "../../../benchmarks/c/src/re2c/submatch_23__cat4_0.re"
	{ return -1; }
#line 274 "gen/re2c/submatch_23__cat4_0.cc"
yy3:
	++in->cur;
	a0 = in->yyt1;
	b0 = in->yyt8;
	a1 = in->yyt2;
	b1 = in->yyt3;
	a2 = in->yyt4;
	b2 = in->yyt5;
	a3 = in->yyt6;
	b3 = in->yyt7;
#line 12 "../../../benchmarks/c/src/re2c/submatch_23__cat4_0.re"
	{
        OUTS(a0, b0); OUTC('.'); OUTS(b0, a1); OUTC('.');
        OUTS(a1, b1); OUTC('.'); OUTS(b1, a2); OUTC('.');
        OUTS(a2, b2); OUTC('.'); OUTS(b2, a3); OUTC('.');
        OUTS(a3, b3); OUTC('.'); OUTS(b3, in->cur);
        goto loop;
    }
#line 293 "gen/re2c/submatch_23__cat4_0.cc"
yy4:
	in->mar = ++in->cur;
yyFillLabel1:
	yych = *in->cur;
	switch (yych) {
		case '\n':
		case 'a':
		case 'b': goto yy7;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel1;
			}
			goto yy2;
	}
yy5:
	in->mar = ++in->cur;
yyFillLabel2:
	yych = *in->cur;
	switch (yych) {
		case '\n':
		case 'a':
		case 'b': goto yy10;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel2;
			}
			goto yy2;
	}
yy6:
	++in->cur;
yyFillLabel3:
	yych = *in->cur;
yy7:
	switch (yych) {
		case '\n':
			in->yyt2 = in->cur;
			in->yyt3 = in->cur;
			in->yyt4 = in->cur;
			in->yyt5 = in->cur;
			in->yyt6 = in->cur;
			in->yyt7 = in->cur;
			in->yyt8 = in->cur;
			goto yy3;
		case 'a': goto yy6;
		case 'b':
			in->yyt8 = in->cur;
			goto yy9;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel3;
			}
			goto yy8;
	}
yy8:
	in->cur = in->mar;
	goto yy2;
yy9:
	++in->cur;
yyFillLabel4:
	yych = *in->cur;
yy10:
	switch (yych) {
		case '\n':
			in->yyt2 = in->cur;
			in->yyt3 = in->cur;
			in->yyt4 = in->cur;
			in->yyt5 = in->cur;
			in->yyt6 = in->cur;
			in->yyt7 = in->cur;
			goto yy3;
		case 'a':
			in->yyt2 = in->cur;
			goto yy11;
		case 'b': goto yy9;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel4;
			}
			goto yy8;
	}
yy11:
	++in->cur;
yyFillLabel5:
	yych = *in->cur;
	switch (yych) {
		case '\n':
			in->yyt3 = in->cur;
			in->yyt4 = in->cur;
			in->yyt5 = in->cur;
			in->yyt6 = in->cur;
			in->yyt7 = in->cur;
			goto yy3;
		case 'a': goto yy11;
		case 'b':
			in->yyt3 = in->cur;
			goto yy12;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel5;
			}
			goto yy8;
	}
yy12:
	++in->cur;
yyFillLabel6:
	yych = *in->cur;
	switch (yych) {
		case '\n':
			in->yyt4 = in->cur;
			in->yyt5 = in->cur;
			in->yyt6 = in->cur;
			in->yyt7 = in->cur;
			goto yy3;
		case 'a':
			in->yyt4 = in->cur;
			goto yy13;
		case 'b': goto yy12;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel6;
			}
			goto yy8;
	}
yy13:
	++in->cur;
yyFillLabel7:
	yych = *in->cur;
	switch (yych) {
		case '\n':
			in->yyt5 = in->cur;
			in->yyt6 = in->cur;
			in->yyt7 = in->cur;
			goto yy3;
		case 'a': goto yy13;
		case 'b':
			in->yyt5 = in->cur;
			goto yy14;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel7;
			}
			goto yy8;
	}
yy14:
	++in->cur;
yyFillLabel8:
	yych = *in->cur;
	switch (yych) {
		case '\n':
			in->yyt6 = in->cur;
			in->yyt7 = in->cur;
			goto yy3;
		case 'a':
			in->yyt6 = in->cur;
			goto yy15;
		case 'b': goto yy14;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel8;
			}
			goto yy8;
	}
yy15:
	++in->cur;
yyFillLabel9:
	yych = *in->cur;
	switch (yych) {
		case '\n':
			in->yyt7 = in->cur;
			goto yy3;
		case 'a': goto yy15;
		case 'b':
			in->yyt7 = in->cur;
			goto yy16;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel9;
			}
			goto yy8;
	}
yy16:
	++in->cur;
yyFillLabel10:
	yych = *in->cur;
	switch (yych) {
		case '\n': goto yy3;
		case 'b': goto yy16;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel10;
			}
			goto yy8;
	}
yy17:
#line 73 "../../../benchmarks/c/src/re2c/base.re"
	{ return count; }
#line 490 "gen/re2c/submatch_23__cat4_0.cc"
}
#line 169 "../../../benchmarks/c/src/re2c/base.re"

}

int lex_yyfill_padding(input_t *in) {
    long count = 0;
    
#line 499 "gen/re2c/submatch_23__cat4_0.cc"
const char* a0;const char* a1;const char* a2;const char* a3;const char* b0;const char* b1;const char* b2;const char* b3;
#line 174 "../../../benchmarks/c/src/re2c/base.re"

    
#line 504 "gen/re2c/submatch_23__cat4_0.cc"
#line 175 "../../../benchmarks/c/src/re2c/base.re"

loop:
    in->tok = in->cur;
    
#line 510 "gen/re2c/submatch_23__cat4_0.cc"
{
	char yych;
	static const unsigned char yybm[256] = {
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,  64, 128,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0
	};
	if ((in->lim - in->cur) < 2) if (fill_padding(in, 2) != 0) return -2;
	yych = *in->cur;
	if (yych <= '\n') {
		if (yych <= 0x00) goto yy19;
		if (yych <= '\t') goto yy20;
		in->yyt1 = in->cur;
		in->yyt2 = in->cur;
		in->yyt3 = in->cur;
		in->yyt4 = in->cur;
		in->yyt5 = in->cur;
		in->yyt6 = in->cur;
		in->yyt7 = in->cur;
		in->yyt8 = in->cur;
		goto yy22;
	} else {
		if (yych <= '`') goto yy20;
		if (yych <= 'a') {
			in->yyt1 = in->cur;
			goto yy23;
		}
		if (yych <= 'b') {
			in->yyt1 = in->cur;
			in->yyt8 = in->cur;
			goto yy24;
		}
		goto yy20;
	}
yy19:
	++in->cur;
#line 78 "../../../benchmarks/c/src/re2c/base.re"
	{ return count; }
#line 578 "gen/re2c/submatch_23__cat4_0.cc"
yy20:
	++in->cur;
yy21:
#line 6 "../../../benchmarks/c/src/re2c/submatch_23__cat4_0.re"
	{ return -1; }
#line 584 "gen/re2c/submatch_23__cat4_0.cc"
yy22:
	++in->cur;
	a0 = in->yyt1;
	b0 = in->yyt8;
	a1 = in->yyt2;
	b1 = in->yyt3;
	a2 = in->yyt4;
	b2 = in->yyt5;
	a3 = in->yyt6;
	b3 = in->yyt7;
#line 12 "../../../benchmarks/c/src/re2c/submatch_23__cat4_0.re"
	{
        OUTS(a0, b0); OUTC('.'); OUTS(b0, a1); OUTC('.');
        OUTS(a1, b1); OUTC('.'); OUTS(b1, a2); OUTC('.');
        OUTS(a2, b2); OUTC('.'); OUTS(b2, a3); OUTC('.');
        OUTS(a3, b3); OUTC('.'); OUTS(b3, in->cur);
        goto loop;
    }
#line 603 "gen/re2c/submatch_23__cat4_0.cc"
yy23:
	yych = *(in->mar = ++in->cur);
	if (yych == '\n') goto yy26;
	if (yych <= '`') goto yy21;
	if (yych <= 'b') goto yy26;
	goto yy21;
yy24:
	yych = *(in->mar = ++in->cur);
	if (yych == '\n') goto yy29;
	if (yych <= '`') goto yy21;
	if (yych <= 'b') goto yy29;
	goto yy21;
yy25:
	++in->cur;
	if (in->lim <= in->cur) if (fill_padding(in, 1) != 0) return -2;
	yych = *in->cur;
yy26:
	if (yybm[0+yych] & 64) goto yy25;
	if (yych == '\n') {
		in->yyt2 = in->cur;
		in->yyt3 = in->cur;
		in->yyt4 = in->cur;
		in->yyt5 = in->cur;
		in->yyt6 = in->cur;
		in->yyt7 = in->cur;
		in->yyt8 = in->cur;
		goto yy22;
	}
	if (yych <= '`') goto yy27;
	if (yych <= 'b') {
		in->yyt8 = in->cur;
		goto yy28;
	}
yy27:
	in->cur = in->mar;
	goto yy21;
yy28:
	++in->cur;
	if (in->lim <= in->cur) if (fill_padding(in, 1) != 0) return -2;
	yych = *in->cur;
yy29:
	if (yybm[0+yych] & 128) goto yy28;
	if (yych == '\n') {
		in->yyt2 = in->cur;
		in->yyt3 = in->cur;
		in->yyt4 = in->cur;
		in->yyt5 = in->cur;
		in->yyt6 = in->cur;
		in->yyt7 = in->cur;
		goto yy22;
	}
	if (yych != 'a') goto yy27;
	in->yyt2 = in->cur;
yy30:
	++in->cur;
	if (in->lim <= in->cur) if (fill_padding(in, 1) != 0) return -2;
	yych = *in->cur;
	if (yych <= '`') {
		if (yych == '\n') {
			in->yyt3 = in->cur;
			in->yyt4 = in->cur;
			in->yyt5 = in->cur;
			in->yyt6 = in->cur;
			in->yyt7 = in->cur;
			goto yy22;
		}
		goto yy27;
	} else {
		if (yych <= 'a') goto yy30;
		if (yych >= 'c') goto yy27;
		in->yyt3 = in->cur;
	}
yy31:
	++in->cur;
	if (in->lim <= in->cur) if (fill_padding(in, 1) != 0) return -2;
	yych = *in->cur;
	if (yych <= '`') {
		if (yych == '\n') {
			in->yyt4 = in->cur;
			in->yyt5 = in->cur;
			in->yyt6 = in->cur;
			in->yyt7 = in->cur;
			goto yy22;
		}
		goto yy27;
	} else {
		if (yych <= 'a') {
			in->yyt4 = in->cur;
			goto yy32;
		}
		if (yych <= 'b') goto yy31;
		goto yy27;
	}
yy32:
	++in->cur;
	if (in->lim <= in->cur) if (fill_padding(in, 1) != 0) return -2;
	yych = *in->cur;
	if (yych <= '`') {
		if (yych == '\n') {
			in->yyt5 = in->cur;
			in->yyt6 = in->cur;
			in->yyt7 = in->cur;
			goto yy22;
		}
		goto yy27;
	} else {
		if (yych <= 'a') goto yy32;
		if (yych >= 'c') goto yy27;
		in->yyt5 = in->cur;
	}
yy33:
	++in->cur;
	if (in->lim <= in->cur) if (fill_padding(in, 1) != 0) return -2;
	yych = *in->cur;
	if (yych <= '`') {
		if (yych == '\n') {
			in->yyt6 = in->cur;
			in->yyt7 = in->cur;
			goto yy22;
		}
		goto yy27;
	} else {
		if (yych <= 'a') {
			in->yyt6 = in->cur;
			goto yy34;
		}
		if (yych <= 'b') goto yy33;
		goto yy27;
	}
yy34:
	++in->cur;
	if (in->lim <= in->cur) if (fill_padding(in, 1) != 0) return -2;
	yych = *in->cur;
	if (yych <= '`') {
		if (yych == '\n') {
			in->yyt7 = in->cur;
			goto yy22;
		}
		goto yy27;
	} else {
		if (yych <= 'a') goto yy34;
		if (yych >= 'c') goto yy27;
		in->yyt7 = in->cur;
	}
yy35:
	++in->cur;
	if (in->lim <= in->cur) if (fill_padding(in, 1) != 0) return -2;
	yych = *in->cur;
	if (yych == '\n') goto yy22;
	if (yych == 'b') goto yy35;
	goto yy27;
}
#line 183 "../../../benchmarks/c/src/re2c/base.re"

}

#define FN_BENCH(suffix) \
void bench_yyfill_##suffix::operator()( \
        benchmark::State &state, const char* input, long expected) const { \
    long count; \
    for (auto _ : state) { \
        input_t in; \
        init_input_##suffix(&in, input); \
        count = lex_yyfill_##suffix(&in); \
        free_input(&in); \
    } \
    if (count != expected) state.SkipWithError("error"); \
}
FN_BENCH(eofrule)
FN_BENCH(padding)
#undef FN_BENCH

#define FN_TEST(suffix) \
bool test_yyfill_##suffix(const char* input, long expected) { \
    input_t in; \
    init_input_##suffix(&in, input); \
    \
    long count = lex_yyfill_##suffix(&in); \
    switch (count) { \
    default: \
        if (count != expected) { \
            fprintf(stderr, "wrong count, expected %ld, got %ld\n", expected, count); \
        } \
        break; \
    case -1: \
        fprintf(stderr, "syntax error\n"); \
        break; \
    case -2: \
        fprintf(stderr, "yyfill error\n"); \
        break; \
    } \
    \
    free_input(&in); \
    return count == expected; \
}
FN_TEST(eofrule)
FN_TEST(padding)
#undef FN_TEST
#line 21 "../../../benchmarks/c/src/re2c/submatch_23__cat4_0.re"


} // namespace re2c_submatch_23__cat4_0
