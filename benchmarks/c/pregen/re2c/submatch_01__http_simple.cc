/* Generated by re2c */
#line 1 "../../../benchmarks/c/src/re2c/submatch_01__http_simple.re"
#include "re2c/base.h"

namespace re2c_submatch_01__http_simple {

#line 53 "../../../benchmarks/c/src/re2c/submatch_01__http_simple.re"


static long print_headers(const char *tok, const taglist_t *h1, const taglist_t *h2) {
    if (!h2) return 0;
    long count = print_headers(tok, h1->pred, h2->pred);
    OUT("header: ", tok + h1->dist, tok + h2->dist);
    return count;
}

#line 1 "../../../benchmarks/c/src/re2c/base.re"
#line 11 "../../../benchmarks/c/src/re2c/base.re"


struct input_t {
    FILE* file;
    char *buf;
    char *lim;
    char *cur;
    char *mar;
    char *tok;
    
#line 30 "gen/re2c/submatch_01__http_simple.cc"
char *yyt1;
char *yyt2;
char *yyt3;
char *yyt4;
char *yyt5;
#line 20 "../../../benchmarks/c/src/re2c/base.re"

    
#line 39 "gen/re2c/submatch_01__http_simple.cc"
taglist_t *yytm6;
taglist_t *yytm7;
taglist_t *yytm8;
#line 21 "../../../benchmarks/c/src/re2c/base.re"

    taglistpool_t tlp;
    int eof;
};

static inline void taglistpool_clear(taglistpool_t *tlp, input_t *in) {
    tlp->next = tlp->head;
    
#line 52 "gen/re2c/submatch_01__http_simple.cc"
in->yytm6 = 0;
in->yytm7 = 0;
in->yytm8 = 0;
#line 28 "../../../benchmarks/c/src/re2c/base.re"

}

static inline void taglistpool_init(taglistpool_t *tlp) {
    static const unsigned size = 1024 * 1024;
    tlp->head = (taglist_t*)malloc(size * sizeof(taglist_t));
    tlp->next = tlp->head;
    tlp->last = tlp->head + size;
}

static inline void taglistpool_free(taglistpool_t *tlp) {
    free(tlp->head);
    tlp->head = tlp->next = tlp->last = NULL;
}

static inline void taglist(taglist_t **ptl, const char *b, const char *t, taglistpool_t *tlp) {
#ifdef GROW_MTAG_LIST
    if (tlp->next >= tlp->last) {
        const unsigned size = tlp->last - tlp->head;
        taglist_t *head = (taglist_t*)malloc(2 * size * sizeof(taglist_t));
        memcpy(head, tlp->head, size * sizeof(taglist_t));
        free(tlp->head);
        tlp->head = head;
        tlp->next = head + size;
        tlp->last = head + size * 2;
    }
#else
    assert(tlp->next < tlp->last);
#endif
    taglist_t *tl = tlp->next++;
    tl->pred = *ptl;
    tl->dist = t - b;
    *ptl = tl;
}

static inline void free_input(input_t *in) {
    free(in->buf);
    taglistpool_free(&in->tlp);
    fclose(in->file);
}

#line 74 "../../../benchmarks/c/src/re2c/base.re"


#line 79 "../../../benchmarks/c/src/re2c/base.re"


#line 104 "gen/re2c/submatch_01__http_simple.cc"
#define YYMAXFILL 15
#line 81 "../../../benchmarks/c/src/re2c/base.re"


static inline int fill_eofrule(input_t *in) {
    size_t free;
    if (in->eof) return 1;

    free = in->tok - in->buf;
    assert(free > 0);

    memmove(in->buf, in->tok, in->lim - in->tok);
    in->lim -= free;
    in->cur -= free;
    in->mar -= free;
    in->tok -= free;
    
#line 122 "gen/re2c/submatch_01__http_simple.cc"
if (in->yyt1) in->yyt1 -= free;
if (in->yyt2) in->yyt2 -= free;
if (in->yyt3) in->yyt3 -= free;
if (in->yyt4) in->yyt4 -= free;
if (in->yyt5) in->yyt5 -= free;
#line 95 "../../../benchmarks/c/src/re2c/base.re"


    in->lim += fread(in->lim, 1, free, in->file);
    in->lim[0] = 0;

    if (in->lim < in->buf + SIZE) {
        in->eof = 1;
    }

    return 0;
}

static inline int fill_padding(input_t *in, size_t need) {
    size_t free;
    if (in->eof) return 1;

    free = in->tok - in->buf;
    assert(free >= need);

    memmove(in->buf, in->tok, in->lim - in->tok);
    in->lim -= free;
    in->cur -= free;
    in->mar -= free;
    in->tok -= free;
    
#line 154 "gen/re2c/submatch_01__http_simple.cc"
if (in->yyt1) in->yyt1 -= free;
if (in->yyt2) in->yyt2 -= free;
if (in->yyt3) in->yyt3 -= free;
if (in->yyt4) in->yyt4 -= free;
if (in->yyt5) in->yyt5 -= free;
#line 119 "../../../benchmarks/c/src/re2c/base.re"


    in->lim += fread(in->lim, 1, free, in->file);

    if (in->lim < in->buf + SIZE) {
        in->eof = 1;
        memset(in->lim, 0, YYMAXFILL);
        in->lim += YYMAXFILL;
    }

    return 0;
}

static inline void init_input_eofrule(input_t *in, const char* fname) {
    in->file = fopen(fname, "rb");
    in->buf = (char*) malloc(SIZE + 1);
    in->lim = in->buf + SIZE;
    in->cur = in->lim;
    in->mar = in->lim;
    in->tok = in->lim;
    
#line 182 "gen/re2c/submatch_01__http_simple.cc"
in->yyt1 = 0;
in->yyt2 = 0;
in->yyt3 = 0;
in->yyt4 = 0;
in->yyt5 = 0;
#line 139 "../../../benchmarks/c/src/re2c/base.re"

    
#line 191 "gen/re2c/submatch_01__http_simple.cc"
in->yytm6 = 0;
in->yytm7 = 0;
in->yytm8 = 0;
#line 140 "../../../benchmarks/c/src/re2c/base.re"

    taglistpool_init(&in->tlp);
    in->eof = 0;
    fill_eofrule(in);
}

static inline void init_input_padding(input_t *in, const char* fname) {
    in->file = fopen(fname, "rb");
    in->buf = (char*) malloc(SIZE + YYMAXFILL);
    in->lim = in->buf + SIZE;
    in->cur = in->lim;
    in->mar = in->lim;
    in->tok = in->lim;
    
#line 210 "gen/re2c/submatch_01__http_simple.cc"
in->yyt1 = 0;
in->yyt2 = 0;
in->yyt3 = 0;
in->yyt4 = 0;
in->yyt5 = 0;
#line 153 "../../../benchmarks/c/src/re2c/base.re"

    
#line 219 "gen/re2c/submatch_01__http_simple.cc"
in->yytm6 = 0;
in->yytm7 = 0;
in->yytm8 = 0;
#line 154 "../../../benchmarks/c/src/re2c/base.re"

    taglistpool_init(&in->tlp);
    in->eof = 0;
}

int lex_yyfill_eofrule(input_t *in) {
    long count = 0;
    
#line 232 "gen/re2c/submatch_01__http_simple.cc"
const char* m1;const char* m2;const char* rp1;const char* rp2;const char* rt1;const char* rt2;const char* s1;const char* s2;const char* v1;const char* v2;const char* v3;const char* v4;
#line 161 "../../../benchmarks/c/src/re2c/base.re"

    
#line 237 "gen/re2c/submatch_01__http_simple.cc"
taglist_t* h1;taglist_t* h2;
#line 162 "../../../benchmarks/c/src/re2c/base.re"

loop:
    in->tok = in->cur;
    
#line 244 "gen/re2c/submatch_01__http_simple.cc"
{
	char yych;
yyFillLabel0:
	yych = *in->cur;
	switch (yych) {
		case '!':
		case '#':
		case '$':
		case '%':
		case '&':
		case '\'':
		case '*':
		case '+':
		case '-':
		case '.':
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '^':
		case '_':
		case '`':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z':
		case '|':
		case '~':
			in->yyt1 = in->cur;
			goto yy3;
		case 'H':
			in->yyt1 = in->cur;
			goto yy4;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel0;
				goto yy62;
			}
			goto yy1;
	}
yy1:
	++in->cur;
yy2:
#line 35 "../../../benchmarks/c/src/re2c/submatch_01__http_simple.re"
	{ return -1; }
#line 343 "gen/re2c/submatch_01__http_simple.cc"
yy3:
	in->mar = ++in->cur;
yyFillLabel1:
	yych = *in->cur;
	switch (yych) {
		case ' ':
		case '!':
		case '#':
		case '$':
		case '%':
		case '&':
		case '\'':
		case '*':
		case '+':
		case '-':
		case '.':
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '^':
		case '_':
		case '`':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z':
		case '|':
		case '~': goto yy8;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel1;
			}
			goto yy2;
	}
yy4:
	in->mar = ++in->cur;
yyFillLabel2:
	yych = *in->cur;
	switch (yych) {
		case ' ':
		case '!':
		case '#':
		case '$':
		case '%':
		case '&':
		case '\'':
		case '*':
		case '+':
		case '-':
		case '.':
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '^':
		case '_':
		case '`':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z':
		case '|':
		case '~': goto yy8;
		case 'T': goto yy9;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel2;
			}
			goto yy2;
	}
yy5:
	++in->cur;
yyFillLabel3:
	yych = *in->cur;
	switch (yych) {
		case '!':
		case '$':
		case '%':
		case '&':
		case '\'':
		case '(':
		case ')':
		case '*':
		case ',':
		case ':':
		case ';':
		case '=':
		case '_':
		case '~':
			in->yyt2 = in->cur;
			goto yy10;
		case '+':
		case '-':
		case '.':
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z':
			in->yyt2 = in->cur;
			goto yy11;
		case '/':
			in->yyt2 = in->cur;
			goto yy12;
		case '[':
		case ']':
			in->yyt2 = in->cur;
			goto yy14;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel3;
			}
			goto yy6;
	}
yy6:
	in->cur = in->mar;
	goto yy2;
yy7:
	++in->cur;
yyFillLabel4:
	yych = *in->cur;
yy8:
	switch (yych) {
		case ' ': goto yy5;
		case '!':
		case '#':
		case '$':
		case '%':
		case '&':
		case '\'':
		case '*':
		case '+':
		case '-':
		case '.':
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '^':
		case '_':
		case '`':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z':
		case '|':
		case '~': goto yy7;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel4;
			}
			goto yy6;
	}
yy9:
	++in->cur;
yyFillLabel5:
	yych = *in->cur;
	switch (yych) {
		case 0x00:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel5;
			}
			goto yy6;
		case 'T': goto yy16;
		default: goto yy8;
	}
yy10:
	++in->cur;
yyFillLabel6:
	yych = *in->cur;
	switch (yych) {
		case ' ': goto yy17;
		case '!':
		case '$':
		case '%':
		case '&':
		case '\'':
		case '(':
		case ')':
		case '*':
		case '+':
		case ',':
		case '-':
		case '.':
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case ':':
		case ';':
		case '=':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z':
		case '~': goto yy10;
		case '@': goto yy18;
		case '[':
		case ']': goto yy14;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel6;
			}
			goto yy6;
	}
yy11:
	++in->cur;
yyFillLabel7:
	yych = *in->cur;
	switch (yych) {
		case ' ': goto yy17;
		case '!':
		case '$':
		case '%':
		case '&':
		case '\'':
		case '(':
		case ')':
		case '*':
		case ',':
		case ';':
		case '=':
		case '_':
		case '~': goto yy10;
		case '+':
		case '-':
		case '.':
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy11;
		case ':': goto yy19;
		case '@': goto yy18;
		case '[':
		case ']': goto yy14;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel7;
			}
			goto yy6;
	}
yy12:
	++in->cur;
yyFillLabel8:
	yych = *in->cur;
yy13:
	switch (yych) {
		case ' ': goto yy17;
		case '!':
		case '$':
		case '%':
		case '&':
		case '\'':
		case '(':
		case ')':
		case '*':
		case '+':
		case ',':
		case '-':
		case '.':
		case '/':
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case ':':
		case ';':
		case '=':
		case '?':
		case '@':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z':
		case '~': goto yy12;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel8;
			}
			goto yy6;
	}
yy14:
	++in->cur;
yyFillLabel9:
	yych = *in->cur;
yy15:
	switch (yych) {
		case ' ': goto yy17;
		case '!':
		case '$':
		case '%':
		case '&':
		case '\'':
		case '(':
		case ')':
		case '*':
		case '+':
		case ',':
		case '-':
		case '.':
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case ':':
		case ';':
		case '=':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '[':
		case ']':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z':
		case '~': goto yy14;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel9;
			}
			goto yy6;
	}
yy16:
	++in->cur;
yyFillLabel10:
	yych = *in->cur;
	switch (yych) {
		case 0x00:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel10;
			}
			goto yy6;
		case 'P': goto yy20;
		default: goto yy8;
	}
yy17:
	++in->cur;
yyFillLabel11:
	yych = *in->cur;
	switch (yych) {
		case 'H': goto yy21;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel11;
			}
			goto yy6;
	}
yy18:
	++in->cur;
yyFillLabel12:
	yych = *in->cur;
	switch (yych) {
		case 0x00:
		case ' ':
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel12;
			}
			goto yy6;
		default: goto yy15;
	}
yy19:
	++in->cur;
yyFillLabel13:
	yych = *in->cur;
	switch (yych) {
		case 0x00:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel13;
			}
			goto yy6;
		case '/': goto yy24;
		default: goto yy23;
	}
yy20:
	++in->cur;
yyFillLabel14:
	yych = *in->cur;
	switch (yych) {
		case 0x00:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel14;
			}
			goto yy6;
		case '/': goto yy26;
		default: goto yy8;
	}
yy21:
	++in->cur;
yyFillLabel15:
	yych = *in->cur;
	switch (yych) {
		case 'T': goto yy27;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel15;
			}
			goto yy6;
	}
yy22:
	++in->cur;
yyFillLabel16:
	yych = *in->cur;
yy23:
	switch (yych) {
		case ' ': goto yy17;
		case '!':
		case '$':
		case '%':
		case '&':
		case '\'':
		case '(':
		case ')':
		case '*':
		case '+':
		case ',':
		case '-':
		case '.':
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case ':':
		case ';':
		case '=':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z':
		case '~': goto yy22;
		case '/':
		case '?': goto yy12;
		case '@': goto yy25;
		case '[':
		case ']': goto yy14;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel16;
			}
			goto yy6;
	}
yy24:
	++in->cur;
yyFillLabel17:
	yych = *in->cur;
	switch (yych) {
		case 0x00:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel17;
			}
			goto yy6;
		case '/': goto yy28;
		default: goto yy13;
	}
yy25:
	++in->cur;
yyFillLabel18:
	yych = *in->cur;
	switch (yych) {
		case ' ': goto yy17;
		case '!':
		case '$':
		case '%':
		case '&':
		case '\'':
		case '(':
		case ')':
		case '*':
		case '+':
		case ',':
		case '-':
		case '.':
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case ':':
		case ';':
		case '=':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z':
		case '~': goto yy25;
		case '/':
		case '?':
		case '@': goto yy12;
		case '[':
		case ']': goto yy14;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel18;
			}
			goto yy6;
	}
yy26:
	++in->cur;
yyFillLabel19:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy29;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel19;
			}
			goto yy6;
	}
yy27:
	++in->cur;
yyFillLabel20:
	yych = *in->cur;
	switch (yych) {
		case 'T': goto yy30;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel20;
			}
			goto yy6;
	}
yy28:
	++in->cur;
yyFillLabel21:
	yych = *in->cur;
	switch (yych) {
		case 0x00:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel21;
			}
			goto yy6;
		case '@': goto yy12;
		default: goto yy32;
	}
yy29:
	++in->cur;
yyFillLabel22:
	yych = *in->cur;
	switch (yych) {
		case '.': goto yy34;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel22;
			}
			goto yy6;
	}
yy30:
	++in->cur;
yyFillLabel23:
	yych = *in->cur;
	switch (yych) {
		case 'P': goto yy35;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel23;
			}
			goto yy6;
	}
yy31:
	++in->cur;
yyFillLabel24:
	yych = *in->cur;
yy32:
	switch (yych) {
		case ' ': goto yy17;
		case '!':
		case '$':
		case '%':
		case '&':
		case '\'':
		case '(':
		case ')':
		case '*':
		case '+':
		case ',':
		case '-':
		case '.':
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case ':':
		case ';':
		case '=':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z':
		case '~': goto yy31;
		case '/':
		case '?': goto yy12;
		case '@':
		case '[':
		case ']': goto yy33;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel24;
			}
			goto yy6;
	}
yy33:
	++in->cur;
yyFillLabel25:
	yych = *in->cur;
	switch (yych) {
		case ' ': goto yy17;
		case '!':
		case '$':
		case '%':
		case '&':
		case '\'':
		case '(':
		case ')':
		case '*':
		case '+':
		case ',':
		case '-':
		case '.':
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case ':':
		case ';':
		case '=':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '[':
		case ']':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z':
		case '~': goto yy33;
		case '/':
		case '?':
		case '@': goto yy12;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel25;
			}
			goto yy6;
	}
yy34:
	++in->cur;
yyFillLabel26:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy36;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel26;
			}
			goto yy6;
	}
yy35:
	++in->cur;
yyFillLabel27:
	yych = *in->cur;
	switch (yych) {
		case '/': goto yy37;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel27;
			}
			goto yy6;
	}
yy36:
	++in->cur;
yyFillLabel28:
	yych = *in->cur;
	switch (yych) {
		case ' ': goto yy38;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel28;
			}
			goto yy6;
	}
yy37:
	++in->cur;
yyFillLabel29:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy39;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel29;
			}
			goto yy6;
	}
yy38:
	++in->cur;
yyFillLabel30:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy40;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel30;
			}
			goto yy6;
	}
yy39:
	++in->cur;
yyFillLabel31:
	yych = *in->cur;
	switch (yych) {
		case '.': goto yy41;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel31;
			}
			goto yy6;
	}
yy40:
	++in->cur;
yyFillLabel32:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy42;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel32;
			}
			goto yy6;
	}
yy41:
	++in->cur;
yyFillLabel33:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy43;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel33;
			}
			goto yy6;
	}
yy42:
	++in->cur;
yyFillLabel34:
	yych = *in->cur;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy44;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel34;
			}
			goto yy6;
	}
yy43:
	++in->cur;
yyFillLabel35:
	yych = *in->cur;
	switch (yych) {
		case '\n':
			in->yyt3 = in->cur;
			goto yy45;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel35;
			}
			goto yy6;
	}
yy44:
	++in->cur;
yyFillLabel36:
	yych = *in->cur;
	switch (yych) {
		case ' ': goto yy46;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel36;
			}
			goto yy6;
	}
yy45:
	++in->cur;
yyFillLabel37:
	yych = *in->cur;
	switch (yych) {
		case '\n':
			taglist(&in->yytm7, in->tok, in->tok - 1, &in->tlp);
			taglist(&in->yytm6, in->tok, in->tok - 1, &in->tlp);
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			goto yy47;
		case '!':
		case '#':
		case '$':
		case '%':
		case '&':
		case '\'':
		case '*':
		case '+':
		case '-':
		case '.':
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '^':
		case '_':
		case '`':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z':
		case '|':
		case '~':
			taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
			in->yyt4 = NULL;
			in->yyt5 = NULL;
			goto yy48;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel37;
			}
			goto yy6;
	}
yy46:
	++in->cur;
yyFillLabel38:
	yych = *in->cur;
	switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case '\r':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x7F:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel38;
			}
			goto yy6;
		case '\n':
			in->yyt4 = in->cur;
			in->yyt5 = in->cur;
			goto yy50;
		default:
			in->yyt4 = in->cur;
			goto yy49;
	}
yy47:
	++in->cur;
	m1 = in->yyt1;
	rt1 = in->yyt2;
	v4 = in->yyt3;
	rp1 = in->yyt4;
	rp2 = in->yyt5;
	h1 = in->yytm6;
	h2 = in->yytm7;
	m2 = in->yyt2;
	rt2 = in->yyt3;
	v3 = in->yyt3;
	v1 = in->yyt4;
	v2 = in->yyt4;
	s1 = in->yyt4;
	s2 = in->yyt4;
	if (m2 != NULL) m2 -= 1;
	if (rt2 != NULL) rt2 -= 9;
	if (v3 != NULL) v3 -= 8;
	if (v1 != NULL) v1 -= 13;
	if (v2 != NULL) v2 -= 5;
	if (s1 != NULL) s1 -= 4;
	if (s2 != NULL) s2 -= 1;
#line 36 "../../../benchmarks/c/src/re2c/submatch_01__http_simple.re"
	{
        if (s1) {
            OUT("version: ", v1, v2);
            OUT("status: ", s1, s2);
            OUT("reason: ", rp1, rp2);
        }
        if (m1) {
            OUT("method: ", m1, m2);
            OUT("request: ", rt1, rt2);
            OUT("version: ", v3, v4);
        }
        count += print_headers(in->tok, h1, h2);
        OUTC('\n');

        taglistpool_clear(&in->tlp, in);
        goto loop;
    }
#line 2025 "gen/re2c/submatch_01__http_simple.cc"
yy48:
	++in->cur;
yyFillLabel39:
	yych = *in->cur;
	switch (yych) {
		case '!':
		case '#':
		case '$':
		case '%':
		case '&':
		case '\'':
		case '*':
		case '+':
		case '-':
		case '.':
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '^':
		case '_':
		case '`':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z':
		case '|':
		case '~': goto yy48;
		case ':': goto yy51;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel39;
			}
			goto yy6;
	}
yy49:
	++in->cur;
yyFillLabel40:
	yych = *in->cur;
	switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case '\r':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x7F:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel40;
			}
			goto yy6;
		case '\n':
			in->yyt5 = in->cur;
			goto yy50;
		default: goto yy49;
	}
yy50:
	++in->cur;
yyFillLabel41:
	yych = *in->cur;
	switch (yych) {
		case '\n':
			taglist(&in->yytm7, in->tok, in->tok - 1, &in->tlp);
			taglist(&in->yytm6, in->tok, in->tok - 1, &in->tlp);
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			goto yy47;
		case '!':
		case '#':
		case '$':
		case '%':
		case '&':
		case '\'':
		case '*':
		case '+':
		case '-':
		case '.':
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '^':
		case '_':
		case '`':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z':
		case '|':
		case '~':
			taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
			in->yyt1 = NULL;
			in->yyt2 = NULL;
			in->yyt3 = NULL;
			goto yy48;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel41;
			}
			goto yy6;
	}
yy51:
	++in->cur;
yyFillLabel42:
	yych = *in->cur;
	switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case '\r':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x7F:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel42;
			}
			goto yy6;
		case '\t':
		case ' ': goto yy51;
		case '\n':
			in->yytm8 = in->yytm7;
			taglist(&in->yytm8, in->tok, in->cur, &in->tlp);
			goto yy52;
		default: goto yy53;
	}
yy52:
	++in->cur;
yyFillLabel43:
	yych = *in->cur;
	switch (yych) {
		case '\t':
		case ' ': goto yy51;
		case '\n':
			in->yytm7 = in->yytm8;
			goto yy47;
		case '!':
		case '#':
		case '$':
		case '%':
		case '&':
		case '\'':
		case '*':
		case '+':
		case '-':
		case '.':
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '^':
		case '_':
		case '`':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z':
		case '|':
		case '~':
			in->yytm7 = in->yytm8;
			taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
			goto yy48;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel43;
			}
			goto yy6;
	}
yy53:
	++in->cur;
yyFillLabel44:
	yych = *in->cur;
	switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case '\r':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x7F:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel44;
			}
			goto yy6;
		case '\t':
			in->yytm8 = in->yytm7;
			taglist(&in->yytm8, in->tok, in->cur, &in->tlp);
			goto yy54;
		case '\n':
			in->yytm8 = in->yytm7;
			taglist(&in->yytm8, in->tok, in->cur, &in->tlp);
			goto yy52;
		case ' ': goto yy55;
		default: goto yy53;
	}
yy54:
	++in->cur;
yyFillLabel45:
	yych = *in->cur;
	switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case '\r':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x7F:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel45;
			}
			goto yy6;
		case '\t': goto yy54;
		case '\n': goto yy56;
		case ' ': goto yy55;
		default: goto yy57;
	}
yy55:
	++in->cur;
yyFillLabel46:
	yych = *in->cur;
	switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case '\r':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x7F:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel46;
			}
			goto yy6;
		case '\t':
			in->yytm8 = in->yytm7;
			taglist(&in->yytm8, in->tok, in->cur, &in->tlp);
			goto yy54;
		case '\n':
			in->yytm8 = in->yytm7;
			taglist(&in->yytm8, in->tok, in->cur, &in->tlp);
			goto yy52;
		case ' ': goto yy55;
		default: goto yy58;
	}
yy56:
	++in->cur;
yyFillLabel47:
	yych = *in->cur;
	switch (yych) {
		case '\n':
			in->yytm7 = in->yytm8;
			goto yy47;
		case '!':
		case '#':
		case '$':
		case '%':
		case '&':
		case '\'':
		case '*':
		case '+':
		case '-':
		case '.':
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '^':
		case '_':
		case '`':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z':
		case '|':
		case '~':
			in->yytm7 = in->yytm8;
			taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
			goto yy48;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel47;
			}
			goto yy6;
	}
yy57:
	++in->cur;
yyFillLabel48:
	yych = *in->cur;
	switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case '\r':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x7F:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel48;
			}
			goto yy6;
		case '\t':
			taglist(&in->yytm7, in->tok, in->cur, &in->tlp);
			goto yy59;
		case '\n':
			in->yytm8 = in->yytm7;
			taglist(&in->yytm8, in->tok, in->cur, &in->tlp);
			goto yy52;
		default: goto yy53;
	}
yy58:
	++in->cur;
yyFillLabel49:
	yych = *in->cur;
	switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case '\r':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x7F:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel49;
			}
			goto yy6;
		case '\t':
			in->yytm8 = in->yytm7;
			taglist(&in->yytm8, in->tok, in->cur, &in->tlp);
			goto yy60;
		case '\n':
			in->yytm8 = in->yytm7;
			taglist(&in->yytm8, in->tok, in->cur, &in->tlp);
			goto yy52;
		default: goto yy53;
	}
yy59:
	++in->cur;
yyFillLabel50:
	yych = *in->cur;
	switch (yych) {
		case '\t':
		case ' ': goto yy59;
		case '\n':
			in->yytm8 = in->yytm7;
			goto yy56;
		default:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel50;
			}
			goto yy6;
	}
yy60:
	++in->cur;
yyFillLabel51:
	yych = *in->cur;
	switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case '\r':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x7F:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel51;
			}
			goto yy6;
		case '\t': goto yy60;
		case '\n': goto yy56;
		case ' ': goto yy61;
		default: goto yy57;
	}
yy61:
	++in->cur;
yyFillLabel52:
	yych = *in->cur;
	switch (yych) {
		case 0x00:
		case 0x01:
		case 0x02:
		case 0x03:
		case 0x04:
		case 0x05:
		case 0x06:
		case 0x07:
		case 0x08:
		case '\v':
		case '\f':
		case '\r':
		case 0x0E:
		case 0x0F:
		case 0x10:
		case 0x11:
		case 0x12:
		case 0x13:
		case 0x14:
		case 0x15:
		case 0x16:
		case 0x17:
		case 0x18:
		case 0x19:
		case 0x1A:
		case 0x1B:
		case 0x1C:
		case 0x1D:
		case 0x1E:
		case 0x7F:
			if (in->lim <= in->cur) {
				if (fill_eofrule(in) == 0) goto yyFillLabel52;
			}
			goto yy6;
		case '\t': goto yy60;
		case '\n': goto yy52;
		case ' ': goto yy61;
		default: goto yy58;
	}
yy62:
#line 73 "../../../benchmarks/c/src/re2c/base.re"
	{ return count; }
#line 2844 "gen/re2c/submatch_01__http_simple.cc"
}
#line 169 "../../../benchmarks/c/src/re2c/base.re"

}

int lex_yyfill_padding(input_t *in) {
    long count = 0;
    
#line 2853 "gen/re2c/submatch_01__http_simple.cc"
const char* m1;const char* m2;const char* rp1;const char* rp2;const char* rt1;const char* rt2;const char* s1;const char* s2;const char* v1;const char* v2;const char* v3;const char* v4;
#line 174 "../../../benchmarks/c/src/re2c/base.re"

    
#line 2858 "gen/re2c/submatch_01__http_simple.cc"
taglist_t* h1;taglist_t* h2;
#line 175 "../../../benchmarks/c/src/re2c/base.re"

loop:
    in->tok = in->cur;
    
#line 2865 "gen/re2c/submatch_01__http_simple.cc"
{
	char yych;
	static const unsigned char yybm[512] = {
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,  88,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,  40,
		152,  46,  40,  40,  46,  46,  46,  46,
		 46,  46,  46,  47,  46,  47,  47,  42,
		 47,  47,  47,  47,  47,  47,  47,  47,
		 47,  47,  46,  46,  40,  46,  40,  42,
		 42,  47,  47,  47,  47,  47,  47,  47,
		 47,  47,  47,  47,  47,  47,  47,  47,
		 47,  47,  47,  47,  47,  47,  47,  47,
		 47,  47,  47,  44,  40,  44,  40,  46,
		 40,  47,  47,  47,  47,  47,  47,  47,
		 47,  47,  47,  47,  47,  47,  47,  47,
		 47,  47,  47,  47,  47,  47,  47,  47,
		 47,  47,  47,  40,  40,  40,  46,   0,
		 40,  40,  40,  40,  40,  40,  40,  40,
		 40,  40,  40,  40,  40,  40,  40,  40,
		 40,  40,  40,  40,  40,  40,  40,  40,
		 40,  40,  40,  40,  40,  40,  40,  40,
		 40,  40,  40,  40,  40,  40,  40,  40,
		 40,  40,  40,  40,  40,  40,  40,  40,
		 40,  40,  40,  40,  40,  40,  40,  40,
		 40,  40,  40,  40,  40,  40,  40,  40,
		 40,  40,  40,  40,  40,  40,  40,  40,
		 40,  40,  40,  40,  40,  40,  40,  40,
		 40,  40,  40,  40,  40,  40,  40,  40,
		 40,  40,  40,  40,  40,  40,  40,  40,
		 40,  40,  40,  40,  40,  40,  40,  40,
		 40,  40,  40,  40,  40,  40,  40,  40,
		 40,  40,  40,  40,  40,  40,  40,  40,
		 40,  40,  40,  40,  40,  40,  40,  40,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0, 192,   0,  64, 192, 192, 192, 192,
		128, 128, 192, 192, 128, 192, 192,   0,
		192, 192, 192, 192, 192, 192, 192, 192,
		192, 192, 128, 128,   0, 128,   0,   0,
		  0, 192, 192, 192, 192, 192, 192, 192,
		192, 192, 192, 192, 192, 192, 192, 192,
		192, 192, 192, 192, 192, 192, 192, 192,
		192, 192, 192,   0,   0,   0,  64, 192,
		 64, 192, 192, 192, 192, 192, 192, 192,
		192, 192, 192, 192, 192, 192, 192, 192,
		192, 192, 192, 192, 192, 192, 192, 192,
		192, 192, 192,   0,  64,   0, 192,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0,
		  0,   0,   0,   0,   0,   0,   0,   0
	};
	if ((in->lim - in->cur) < 15) if (fill_padding(in, 15) != 0) return -2;
	yych = *in->cur;
	if (yych <= '9') {
		if (yych <= '\'') {
			if (yych <= ' ') {
				if (yych >= 0x01) goto yy64;
			} else {
				if (yych == '"') goto yy64;
				in->yyt1 = in->cur;
				goto yy66;
			}
		} else {
			if (yych <= ',') {
				if (yych <= ')') goto yy64;
				if (yych <= '+') {
					in->yyt1 = in->cur;
					goto yy66;
				}
				goto yy64;
			} else {
				if (yych == '/') goto yy64;
				in->yyt1 = in->cur;
				goto yy66;
			}
		}
	} else {
		if (yych <= ']') {
			if (yych <= 'G') {
				if (yych <= '@') goto yy64;
				in->yyt1 = in->cur;
				goto yy66;
			} else {
				if (yych <= 'H') {
					in->yyt1 = in->cur;
					goto yy67;
				}
				if (yych <= 'Z') {
					in->yyt1 = in->cur;
					goto yy66;
				}
				goto yy64;
			}
		} else {
			if (yych <= '|') {
				if (yych == '{') goto yy64;
				in->yyt1 = in->cur;
				goto yy66;
			} else {
				if (yych == '~') {
					in->yyt1 = in->cur;
					goto yy66;
				}
				goto yy64;
			}
		}
	}
	++in->cur;
#line 78 "../../../benchmarks/c/src/re2c/base.re"
	{ return count; }
#line 2993 "gen/re2c/submatch_01__http_simple.cc"
yy64:
	++in->cur;
yy65:
#line 35 "../../../benchmarks/c/src/re2c/submatch_01__http_simple.re"
	{ return -1; }
#line 2999 "gen/re2c/submatch_01__http_simple.cc"
yy66:
	yych = *(in->mar = ++in->cur);
	if (yych <= '/') {
		if (yych <= '\'') {
			if (yych <= 0x1F) goto yy65;
			if (yych == '"') goto yy65;
			goto yy71;
		} else {
			if (yych <= '+') {
				if (yych <= ')') goto yy65;
				goto yy71;
			} else {
				if (yych <= ',') goto yy65;
				if (yych <= '.') goto yy71;
				goto yy65;
			}
		}
	} else {
		if (yych <= 'z') {
			if (yych <= '@') {
				if (yych <= '9') goto yy71;
				goto yy65;
			} else {
				if (yych <= 'Z') goto yy71;
				if (yych <= ']') goto yy65;
				goto yy71;
			}
		} else {
			if (yych <= '|') {
				if (yych <= '{') goto yy65;
				goto yy71;
			} else {
				if (yych == '~') goto yy71;
				goto yy65;
			}
		}
	}
yy67:
	yych = *(in->mar = ++in->cur);
	if (yych <= '9') {
		if (yych <= ')') {
			if (yych <= '!') {
				if (yych <= 0x1F) goto yy65;
				goto yy71;
			} else {
				if (yych <= '"') goto yy65;
				if (yych <= '\'') goto yy71;
				goto yy65;
			}
		} else {
			if (yych <= ',') {
				if (yych <= '+') goto yy71;
				goto yy65;
			} else {
				if (yych == '/') goto yy65;
				goto yy71;
			}
		}
	} else {
		if (yych <= ']') {
			if (yych <= 'S') {
				if (yych <= '@') goto yy65;
				goto yy71;
			} else {
				if (yych <= 'T') goto yy72;
				if (yych <= 'Z') goto yy71;
				goto yy65;
			}
		} else {
			if (yych <= '|') {
				if (yych == '{') goto yy65;
				goto yy71;
			} else {
				if (yych == '~') goto yy71;
				goto yy65;
			}
		}
	}
yy68:
	yych = *++in->cur;
	if (yych <= '=') {
		if (yych <= ',') {
			if (yych <= '#') {
				if (yych == '!') {
					in->yyt2 = in->cur;
					goto yy73;
				}
			} else {
				if (yych == '+') {
					in->yyt2 = in->cur;
					goto yy74;
				}
				in->yyt2 = in->cur;
				goto yy73;
			}
		} else {
			if (yych <= '9') {
				if (yych == '/') {
					in->yyt2 = in->cur;
					goto yy75;
				}
				in->yyt2 = in->cur;
				goto yy74;
			} else {
				if (yych != '<') {
					in->yyt2 = in->cur;
					goto yy73;
				}
			}
		}
	} else {
		if (yych <= '^') {
			if (yych <= '[') {
				if (yych <= '@') goto yy69;
				if (yych <= 'Z') {
					in->yyt2 = in->cur;
					goto yy74;
				}
				in->yyt2 = in->cur;
				goto yy77;
			} else {
				if (yych == ']') {
					in->yyt2 = in->cur;
					goto yy77;
				}
			}
		} else {
			if (yych <= 'z') {
				if (yych <= '_') {
					in->yyt2 = in->cur;
					goto yy73;
				}
				if (yych >= 'a') {
					in->yyt2 = in->cur;
					goto yy74;
				}
			} else {
				if (yych == '~') {
					in->yyt2 = in->cur;
					goto yy73;
				}
			}
		}
	}
yy69:
	in->cur = in->mar;
	goto yy65;
yy70:
	++in->cur;
	if ((in->lim - in->cur) < 2) if (fill_padding(in, 2) != 0) return -2;
	yych = *in->cur;
yy71:
	if (yybm[256+yych] & 64) goto yy70;
	if (yych == ' ') goto yy68;
	goto yy69;
yy72:
	yych = *++in->cur;
	if (yych == 'T') goto yy79;
	goto yy71;
yy73:
	++in->cur;
	if ((in->lim - in->cur) < 11) if (fill_padding(in, 11) != 0) return -2;
	yych = *in->cur;
	if (yybm[256+yych] & 128) goto yy73;
	if (yych <= '@') {
		if (yych == ' ') goto yy80;
		if (yych <= '?') goto yy69;
		goto yy81;
	} else {
		if (yych == '\\') goto yy69;
		if (yych <= ']') goto yy77;
		goto yy69;
	}
yy74:
	++in->cur;
	if ((in->lim - in->cur) < 14) if (fill_padding(in, 14) != 0) return -2;
	yych = *in->cur;
	if (yybm[0+yych] & 1) goto yy74;
	if (yych <= '=') {
		if (yych <= ',') {
			if (yych <= ' ') {
				if (yych <= 0x1F) goto yy69;
				goto yy80;
			} else {
				if (yych <= '!') goto yy73;
				if (yych <= '#') goto yy69;
				goto yy73;
			}
		} else {
			if (yych <= ':') {
				if (yych <= '/') goto yy69;
				goto yy82;
			} else {
				if (yych == '<') goto yy69;
				goto yy73;
			}
		}
	} else {
		if (yych <= ']') {
			if (yych <= '@') {
				if (yych <= '?') goto yy69;
				goto yy81;
			} else {
				if (yych == '\\') goto yy69;
				goto yy77;
			}
		} else {
			if (yych <= '_') {
				if (yych <= '^') goto yy69;
				goto yy73;
			} else {
				if (yych == '~') goto yy73;
				goto yy69;
			}
		}
	}
yy75:
	++in->cur;
	if ((in->lim - in->cur) < 11) if (fill_padding(in, 11) != 0) return -2;
	yych = *in->cur;
yy76:
	if (yybm[0+yych] & 2) goto yy75;
	if (yych == ' ') goto yy80;
	goto yy69;
yy77:
	++in->cur;
	if ((in->lim - in->cur) < 11) if (fill_padding(in, 11) != 0) return -2;
	yych = *in->cur;
yy78:
	if (yybm[0+yych] & 4) goto yy77;
	if (yych == ' ') goto yy80;
	goto yy69;
yy79:
	yych = *++in->cur;
	if (yych == 'P') goto yy83;
	goto yy71;
yy80:
	yych = *++in->cur;
	if (yych == 'H') goto yy84;
	goto yy69;
yy81:
	yych = *++in->cur;
	if (yych == ' ') goto yy69;
	goto yy78;
yy82:
	yych = *++in->cur;
	if (yych == '/') goto yy87;
	goto yy86;
yy83:
	yych = *++in->cur;
	if (yych == '/') goto yy89;
	goto yy71;
yy84:
	yych = *++in->cur;
	if (yych == 'T') goto yy90;
	goto yy69;
yy85:
	++in->cur;
	if ((in->lim - in->cur) < 11) if (fill_padding(in, 11) != 0) return -2;
	yych = *in->cur;
yy86:
	if (yych <= '?') {
		if (yych <= '.') {
			if (yych <= ' ') {
				if (yych <= 0x1F) goto yy69;
				goto yy80;
			} else {
				if (yych <= '!') goto yy85;
				if (yych <= '#') goto yy69;
				goto yy85;
			}
		} else {
			if (yych <= '<') {
				if (yych <= '/') goto yy75;
				if (yych <= ';') goto yy85;
				goto yy69;
			} else {
				if (yych <= '=') goto yy85;
				if (yych <= '>') goto yy69;
				goto yy75;
			}
		}
	} else {
		if (yych <= '^') {
			if (yych <= '[') {
				if (yych <= '@') goto yy88;
				if (yych <= 'Z') goto yy85;
				goto yy77;
			} else {
				if (yych == ']') goto yy77;
				goto yy69;
			}
		} else {
			if (yych <= 'z') {
				if (yych == '`') goto yy69;
				goto yy85;
			} else {
				if (yych == '~') goto yy85;
				goto yy69;
			}
		}
	}
yy87:
	yych = *++in->cur;
	if (yych == '/') goto yy91;
	goto yy76;
yy88:
	++in->cur;
	if ((in->lim - in->cur) < 11) if (fill_padding(in, 11) != 0) return -2;
	yych = *in->cur;
	if (yych <= '@') {
		if (yych <= '.') {
			if (yych <= ' ') {
				if (yych <= 0x1F) goto yy69;
				goto yy80;
			} else {
				if (yych <= '!') goto yy88;
				if (yych <= '#') goto yy69;
				goto yy88;
			}
		} else {
			if (yych <= '<') {
				if (yych <= '/') goto yy75;
				if (yych <= ';') goto yy88;
				goto yy69;
			} else {
				if (yych <= '=') goto yy88;
				if (yych <= '>') goto yy69;
				goto yy75;
			}
		}
	} else {
		if (yych <= '^') {
			if (yych <= '[') {
				if (yych <= 'Z') goto yy88;
				goto yy77;
			} else {
				if (yych == ']') goto yy77;
				goto yy69;
			}
		} else {
			if (yych <= 'z') {
				if (yych == '`') goto yy69;
				goto yy88;
			} else {
				if (yych == '~') goto yy88;
				goto yy69;
			}
		}
	}
yy89:
	yych = *++in->cur;
	if (yych <= '/') goto yy69;
	if (yych <= '9') goto yy92;
	goto yy69;
yy90:
	yych = *++in->cur;
	if (yych == 'T') goto yy93;
	goto yy69;
yy91:
	yych = *++in->cur;
	if (yych == '@') goto yy75;
	goto yy95;
yy92:
	yych = *++in->cur;
	if (yych == '.') goto yy97;
	goto yy69;
yy93:
	yych = *++in->cur;
	if (yych == 'P') goto yy98;
	goto yy69;
yy94:
	++in->cur;
	if ((in->lim - in->cur) < 11) if (fill_padding(in, 11) != 0) return -2;
	yych = *in->cur;
yy95:
	if (yych <= '?') {
		if (yych <= '.') {
			if (yych <= ' ') {
				if (yych <= 0x1F) goto yy69;
				goto yy80;
			} else {
				if (yych <= '!') goto yy94;
				if (yych <= '#') goto yy69;
				goto yy94;
			}
		} else {
			if (yych <= '<') {
				if (yych <= '/') goto yy75;
				if (yych <= ';') goto yy94;
				goto yy69;
			} else {
				if (yych <= '=') goto yy94;
				if (yych <= '>') goto yy69;
				goto yy75;
			}
		}
	} else {
		if (yych <= '^') {
			if (yych <= '[') {
				if (yych <= '@') goto yy96;
				if (yych <= 'Z') goto yy94;
			} else {
				if (yych != ']') goto yy69;
			}
		} else {
			if (yych <= 'z') {
				if (yych == '`') goto yy69;
				goto yy94;
			} else {
				if (yych == '~') goto yy94;
				goto yy69;
			}
		}
	}
yy96:
	++in->cur;
	if ((in->lim - in->cur) < 11) if (fill_padding(in, 11) != 0) return -2;
	yych = *in->cur;
	if (yych <= '>') {
		if (yych <= '.') {
			if (yych <= ' ') {
				if (yych <= 0x1F) goto yy69;
				goto yy80;
			} else {
				if (yych <= '!') goto yy96;
				if (yych <= '#') goto yy69;
				goto yy96;
			}
		} else {
			if (yych <= ';') {
				if (yych <= '/') goto yy75;
				goto yy96;
			} else {
				if (yych == '=') goto yy96;
				goto yy69;
			}
		}
	} else {
		if (yych <= '^') {
			if (yych <= '[') {
				if (yych <= '@') goto yy75;
				goto yy96;
			} else {
				if (yych == ']') goto yy96;
				goto yy69;
			}
		} else {
			if (yych <= 'z') {
				if (yych == '`') goto yy69;
				goto yy96;
			} else {
				if (yych == '~') goto yy96;
				goto yy69;
			}
		}
	}
yy97:
	yych = *++in->cur;
	if (yych <= '/') goto yy69;
	if (yych <= '9') goto yy99;
	goto yy69;
yy98:
	yych = *++in->cur;
	if (yych == '/') goto yy100;
	goto yy69;
yy99:
	yych = *++in->cur;
	if (yych == ' ') goto yy101;
	goto yy69;
yy100:
	yych = *++in->cur;
	if (yych <= '/') goto yy69;
	if (yych <= '9') goto yy102;
	goto yy69;
yy101:
	yych = *++in->cur;
	if (yych <= '/') goto yy69;
	if (yych <= '9') goto yy103;
	goto yy69;
yy102:
	yych = *++in->cur;
	if (yych == '.') goto yy104;
	goto yy69;
yy103:
	yych = *++in->cur;
	if (yych <= '/') goto yy69;
	if (yych <= '9') goto yy105;
	goto yy69;
yy104:
	yych = *++in->cur;
	if (yych <= '/') goto yy69;
	if (yych <= '9') goto yy106;
	goto yy69;
yy105:
	yych = *++in->cur;
	if (yych <= '/') goto yy69;
	if (yych <= '9') goto yy107;
	goto yy69;
yy106:
	yych = *++in->cur;
	if (yych == '\n') {
		in->yyt3 = in->cur;
		goto yy108;
	}
	goto yy69;
yy107:
	yych = *++in->cur;
	if (yych == ' ') goto yy109;
	goto yy69;
yy108:
	yych = *++in->cur;
	if (yych <= '.') {
		if (yych <= '"') {
			if (yych <= '\n') {
				if (yych <= '\t') goto yy69;
				taglist(&in->yytm7, in->tok, in->tok - 1, &in->tlp);
				taglist(&in->yytm6, in->tok, in->tok - 1, &in->tlp);
				in->yyt4 = NULL;
				in->yyt5 = NULL;
				goto yy110;
			} else {
				if (yych == '!') {
					taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
					in->yyt4 = NULL;
					in->yyt5 = NULL;
					goto yy111;
				}
				goto yy69;
			}
		} else {
			if (yych <= ')') {
				if (yych <= '\'') {
					taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
					in->yyt4 = NULL;
					in->yyt5 = NULL;
					goto yy111;
				}
				goto yy69;
			} else {
				if (yych == ',') goto yy69;
				taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
				in->yyt4 = NULL;
				in->yyt5 = NULL;
				goto yy111;
			}
		}
	} else {
		if (yych <= ']') {
			if (yych <= '9') {
				if (yych <= '/') goto yy69;
				taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
				in->yyt4 = NULL;
				in->yyt5 = NULL;
				goto yy111;
			} else {
				if (yych <= '@') goto yy69;
				if (yych <= 'Z') {
					taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
					in->yyt4 = NULL;
					in->yyt5 = NULL;
					goto yy111;
				}
				goto yy69;
			}
		} else {
			if (yych <= '|') {
				if (yych == '{') goto yy69;
				taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
				in->yyt4 = NULL;
				in->yyt5 = NULL;
				goto yy111;
			} else {
				if (yych == '~') {
					taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
					in->yyt4 = NULL;
					in->yyt5 = NULL;
					goto yy111;
				}
				goto yy69;
			}
		}
	}
yy109:
	yych = *++in->cur;
	if (yych <= '\n') {
		if (yych <= 0x08) goto yy69;
		if (yych <= '\t') {
			in->yyt4 = in->cur;
			goto yy112;
		}
		in->yyt4 = in->cur;
		in->yyt5 = in->cur;
		goto yy113;
	} else {
		if (yych <= 0x1E) goto yy69;
		if (yych == 0x7F) goto yy69;
		in->yyt4 = in->cur;
		goto yy112;
	}
yy110:
	++in->cur;
	m1 = in->yyt1;
	rt1 = in->yyt2;
	v4 = in->yyt3;
	rp1 = in->yyt4;
	rp2 = in->yyt5;
	h1 = in->yytm6;
	h2 = in->yytm7;
	m2 = in->yyt2;
	rt2 = in->yyt3;
	v3 = in->yyt3;
	v1 = in->yyt4;
	v2 = in->yyt4;
	s1 = in->yyt4;
	s2 = in->yyt4;
	if (m2 != NULL) m2 -= 1;
	if (rt2 != NULL) rt2 -= 9;
	if (v3 != NULL) v3 -= 8;
	if (v1 != NULL) v1 -= 13;
	if (v2 != NULL) v2 -= 5;
	if (s1 != NULL) s1 -= 4;
	if (s2 != NULL) s2 -= 1;
#line 36 "../../../benchmarks/c/src/re2c/submatch_01__http_simple.re"
	{
        if (s1) {
            OUT("version: ", v1, v2);
            OUT("status: ", s1, s2);
            OUT("reason: ", rp1, rp2);
        }
        if (m1) {
            OUT("method: ", m1, m2);
            OUT("request: ", rt1, rt2);
            OUT("version: ", v3, v4);
        }
        count += print_headers(in->tok, h1, h2);
        OUTC('\n');

        taglistpool_clear(&in->tlp, in);
        goto loop;
    }
#line 3641 "gen/re2c/submatch_01__http_simple.cc"
yy111:
	++in->cur;
	if (in->lim <= in->cur) if (fill_padding(in, 1) != 0) return -2;
	yych = *in->cur;
	if (yych <= '9') {
		if (yych <= ')') {
			if (yych <= '!') {
				if (yych <= ' ') goto yy69;
				goto yy111;
			} else {
				if (yych <= '"') goto yy69;
				if (yych <= '\'') goto yy111;
				goto yy69;
			}
		} else {
			if (yych <= ',') {
				if (yych <= '+') goto yy111;
				goto yy69;
			} else {
				if (yych == '/') goto yy69;
				goto yy111;
			}
		}
	} else {
		if (yych <= 'z') {
			if (yych <= '@') {
				if (yych <= ':') goto yy114;
				goto yy69;
			} else {
				if (yych <= 'Z') goto yy111;
				if (yych <= ']') goto yy69;
				goto yy111;
			}
		} else {
			if (yych <= '|') {
				if (yych <= '{') goto yy69;
				goto yy111;
			} else {
				if (yych == '~') goto yy111;
				goto yy69;
			}
		}
	}
yy112:
	++in->cur;
	if ((in->lim - in->cur) < 2) if (fill_padding(in, 2) != 0) return -2;
	yych = *in->cur;
	if (yybm[0+yych] & 8) goto yy112;
	if (yych <= 0x08) goto yy69;
	if (yych >= '\v') goto yy69;
	in->yyt5 = in->cur;
yy113:
	yych = *++in->cur;
	if (yych <= '.') {
		if (yych <= '"') {
			if (yych <= '\n') {
				if (yych <= '\t') goto yy69;
				taglist(&in->yytm7, in->tok, in->tok - 1, &in->tlp);
				taglist(&in->yytm6, in->tok, in->tok - 1, &in->tlp);
				in->yyt1 = NULL;
				in->yyt2 = NULL;
				in->yyt3 = NULL;
				goto yy110;
			} else {
				if (yych == '!') {
					taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
					in->yyt1 = NULL;
					in->yyt2 = NULL;
					in->yyt3 = NULL;
					goto yy111;
				}
				goto yy69;
			}
		} else {
			if (yych <= ')') {
				if (yych <= '\'') {
					taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
					in->yyt1 = NULL;
					in->yyt2 = NULL;
					in->yyt3 = NULL;
					goto yy111;
				}
				goto yy69;
			} else {
				if (yych == ',') goto yy69;
				taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
				in->yyt1 = NULL;
				in->yyt2 = NULL;
				in->yyt3 = NULL;
				goto yy111;
			}
		}
	} else {
		if (yych <= ']') {
			if (yych <= '9') {
				if (yych <= '/') goto yy69;
				taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
				in->yyt1 = NULL;
				in->yyt2 = NULL;
				in->yyt3 = NULL;
				goto yy111;
			} else {
				if (yych <= '@') goto yy69;
				if (yych <= 'Z') {
					taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
					in->yyt1 = NULL;
					in->yyt2 = NULL;
					in->yyt3 = NULL;
					goto yy111;
				}
				goto yy69;
			}
		} else {
			if (yych <= '|') {
				if (yych == '{') goto yy69;
				taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
				in->yyt1 = NULL;
				in->yyt2 = NULL;
				in->yyt3 = NULL;
				goto yy111;
			} else {
				if (yych == '~') {
					taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
					in->yyt1 = NULL;
					in->yyt2 = NULL;
					in->yyt3 = NULL;
					goto yy111;
				}
				goto yy69;
			}
		}
	}
yy114:
	++in->cur;
	if (in->lim <= in->cur) if (fill_padding(in, 1) != 0) return -2;
	yych = *in->cur;
	if (yybm[0+yych] & 16) goto yy114;
	if (yych <= 0x1E) {
		if (yych <= 0x08) goto yy69;
		if (yych >= '\v') goto yy69;
		in->yytm8 = in->yytm7;
		taglist(&in->yytm8, in->tok, in->cur, &in->tlp);
	} else {
		if (yych == 0x7F) goto yy69;
		goto yy116;
	}
yy115:
	++in->cur;
	if (in->lim <= in->cur) if (fill_padding(in, 1) != 0) return -2;
	yych = *in->cur;
	if (yybm[0+yych] & 16) goto yy114;
	if (yych <= '.') {
		if (yych <= '"') {
			if (yych <= '\n') {
				if (yych <= 0x08) goto yy69;
				in->yytm7 = in->yytm8;
				goto yy110;
			} else {
				if (yych <= 0x1F) goto yy69;
				if (yych <= '!') {
					in->yytm7 = in->yytm8;
					taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
					goto yy111;
				}
				goto yy69;
			}
		} else {
			if (yych <= ')') {
				if (yych <= '\'') {
					in->yytm7 = in->yytm8;
					taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
					goto yy111;
				}
				goto yy69;
			} else {
				if (yych == ',') goto yy69;
				in->yytm7 = in->yytm8;
				taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
				goto yy111;
			}
		}
	} else {
		if (yych <= ']') {
			if (yych <= '9') {
				if (yych <= '/') goto yy69;
				in->yytm7 = in->yytm8;
				taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
				goto yy111;
			} else {
				if (yych <= '@') goto yy69;
				if (yych <= 'Z') {
					in->yytm7 = in->yytm8;
					taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
					goto yy111;
				}
				goto yy69;
			}
		} else {
			if (yych <= '|') {
				if (yych == '{') goto yy69;
				in->yytm7 = in->yytm8;
				taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
				goto yy111;
			} else {
				if (yych == '~') {
					in->yytm7 = in->yytm8;
					taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
					goto yy111;
				}
				goto yy69;
			}
		}
	}
yy116:
	++in->cur;
	if (in->lim <= in->cur) if (fill_padding(in, 1) != 0) return -2;
	yych = *in->cur;
	if (yybm[0+yych] & 32) goto yy116;
	if (yych <= '\n') {
		if (yych <= 0x08) goto yy69;
		if (yych >= '\n') {
			in->yytm8 = in->yytm7;
			taglist(&in->yytm8, in->tok, in->cur, &in->tlp);
			goto yy115;
		}
		in->yytm8 = in->yytm7;
		taglist(&in->yytm8, in->tok, in->cur, &in->tlp);
	} else {
		if (yych <= 0x1E) goto yy69;
		if (yych <= ' ') goto yy118;
		goto yy69;
	}
yy117:
	++in->cur;
	if (in->lim <= in->cur) if (fill_padding(in, 1) != 0) return -2;
	yych = *in->cur;
	if (yybm[0+yych] & 64) goto yy117;
	if (yych <= 0x1F) {
		if (yych <= 0x08) goto yy69;
		if (yych <= '\n') goto yy119;
		if (yych <= 0x1E) goto yy69;
		goto yy120;
	} else {
		if (yych <= ' ') goto yy118;
		if (yych == 0x7F) goto yy69;
		goto yy120;
	}
yy118:
	++in->cur;
	if (in->lim <= in->cur) if (fill_padding(in, 1) != 0) return -2;
	yych = *in->cur;
	if (yybm[0+yych] & 128) goto yy118;
	if (yych <= '\n') {
		if (yych <= 0x08) goto yy69;
		if (yych <= '\t') {
			in->yytm8 = in->yytm7;
			taglist(&in->yytm8, in->tok, in->cur, &in->tlp);
			goto yy117;
		}
		in->yytm8 = in->yytm7;
		taglist(&in->yytm8, in->tok, in->cur, &in->tlp);
		goto yy115;
	} else {
		if (yych <= 0x1E) goto yy69;
		if (yych == 0x7F) goto yy69;
		goto yy121;
	}
yy119:
	++in->cur;
	if (in->lim <= in->cur) if (fill_padding(in, 1) != 0) return -2;
	yych = *in->cur;
	if (yych <= '.') {
		if (yych <= '"') {
			if (yych <= '\n') {
				if (yych <= '\t') goto yy69;
				in->yytm7 = in->yytm8;
				goto yy110;
			} else {
				if (yych == '!') {
					in->yytm7 = in->yytm8;
					taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
					goto yy111;
				}
				goto yy69;
			}
		} else {
			if (yych <= ')') {
				if (yych <= '\'') {
					in->yytm7 = in->yytm8;
					taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
					goto yy111;
				}
				goto yy69;
			} else {
				if (yych == ',') goto yy69;
				in->yytm7 = in->yytm8;
				taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
				goto yy111;
			}
		}
	} else {
		if (yych <= ']') {
			if (yych <= '9') {
				if (yych <= '/') goto yy69;
				in->yytm7 = in->yytm8;
				taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
				goto yy111;
			} else {
				if (yych <= '@') goto yy69;
				if (yych <= 'Z') {
					in->yytm7 = in->yytm8;
					taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
					goto yy111;
				}
				goto yy69;
			}
		} else {
			if (yych <= '|') {
				if (yych == '{') goto yy69;
				in->yytm7 = in->yytm8;
				taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
				goto yy111;
			} else {
				if (yych == '~') {
					in->yytm7 = in->yytm8;
					taglist(&in->yytm6, in->tok, in->cur, &in->tlp);
					goto yy111;
				}
				goto yy69;
			}
		}
	}
yy120:
	++in->cur;
	if (in->lim <= in->cur) if (fill_padding(in, 1) != 0) return -2;
	yych = *in->cur;
	if (yych <= '\n') {
		if (yych <= 0x08) goto yy69;
		if (yych <= '\t') {
			taglist(&in->yytm7, in->tok, in->cur, &in->tlp);
			goto yy122;
		}
		in->yytm8 = in->yytm7;
		taglist(&in->yytm8, in->tok, in->cur, &in->tlp);
		goto yy115;
	} else {
		if (yych <= 0x1E) goto yy69;
		if (yych == 0x7F) goto yy69;
		goto yy116;
	}
yy121:
	++in->cur;
	if (in->lim <= in->cur) if (fill_padding(in, 1) != 0) return -2;
	yych = *in->cur;
	if (yych <= '\n') {
		if (yych <= 0x08) goto yy69;
		if (yych <= '\t') {
			in->yytm8 = in->yytm7;
			taglist(&in->yytm8, in->tok, in->cur, &in->tlp);
			goto yy123;
		}
		in->yytm8 = in->yytm7;
		taglist(&in->yytm8, in->tok, in->cur, &in->tlp);
		goto yy115;
	} else {
		if (yych <= 0x1E) goto yy69;
		if (yych == 0x7F) goto yy69;
		goto yy116;
	}
yy122:
	++in->cur;
	if (in->lim <= in->cur) if (fill_padding(in, 1) != 0) return -2;
	yych = *in->cur;
	if (yych <= '\n') {
		if (yych <= 0x08) goto yy69;
		if (yych <= '\t') goto yy122;
		in->yytm8 = in->yytm7;
		goto yy119;
	} else {
		if (yych == ' ') goto yy122;
		goto yy69;
	}
yy123:
	++in->cur;
	if (in->lim <= in->cur) if (fill_padding(in, 1) != 0) return -2;
	yych = *in->cur;
	if (yych <= 0x1E) {
		if (yych <= 0x08) goto yy69;
		if (yych <= '\t') goto yy123;
		if (yych <= '\n') goto yy119;
		goto yy69;
	} else {
		if (yych <= ' ') {
			if (yych <= 0x1F) goto yy120;
		} else {
			if (yych == 0x7F) goto yy69;
			goto yy120;
		}
	}
yy124:
	++in->cur;
	if (in->lim <= in->cur) if (fill_padding(in, 1) != 0) return -2;
	yych = *in->cur;
	if (yych <= 0x1E) {
		if (yych <= 0x08) goto yy69;
		if (yych <= '\t') goto yy123;
		if (yych <= '\n') goto yy115;
		goto yy69;
	} else {
		if (yych <= ' ') {
			if (yych <= 0x1F) goto yy121;
			goto yy124;
		} else {
			if (yych == 0x7F) goto yy69;
			goto yy121;
		}
	}
}
#line 183 "../../../benchmarks/c/src/re2c/base.re"

}

#define FN_BENCH(suffix) \
void bench_yyfill_##suffix::operator()( \
        benchmark::State &state, const char* input, long expected) const { \
    long count; \
    for (auto _ : state) { \
        input_t in; \
        init_input_##suffix(&in, input); \
        count = lex_yyfill_##suffix(&in); \
        free_input(&in); \
    } \
    if (count != expected) state.SkipWithError("error"); \
}
FN_BENCH(eofrule)
FN_BENCH(padding)
#undef FN_BENCH

#define FN_TEST(suffix) \
bool test_yyfill_##suffix(const char* input, long expected) { \
    input_t in; \
    init_input_##suffix(&in, input); \
    \
    long count = lex_yyfill_##suffix(&in); \
    switch (count) { \
    default: \
        if (count != expected) { \
            fprintf(stderr, "wrong count, expected %ld, got %ld\n", expected, count); \
        } \
        break; \
    case -1: \
        fprintf(stderr, "syntax error\n"); \
        break; \
    case -2: \
        fprintf(stderr, "yyfill error\n"); \
        break; \
    } \
    \
    free_input(&in); \
    return count == expected; \
}
FN_TEST(eofrule)
FN_TEST(padding)
#undef FN_TEST
#line 62 "../../../benchmarks/c/src/re2c/submatch_01__http_simple.re"


} // namespace re2c_submatch_01__http_simple
