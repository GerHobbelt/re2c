/* Generated by re2c 3.0 */
#line 1 "../src/parse/conf_lexer.re"
#include <stdint.h>
#include <string>
#include <vector>

#include "src/encoding/enc.h"
#include "src/msg/msg.h"
#include "src/options/opt.h"
#include "src/parse/ast.h"
#include "src/parse/conf_parser.h"
#include "src/parse/input.h"
#include "src/util/file_utils.h"
#include "src/util/string_utils.h"

namespace re2c {

#line 19 "src/parse/conf_lexer.cc"
size_t LexerState::maxfill_conf() { return 30; }
#line 16 "../src/parse/conf_lexer.re"


#define YYFILL(n) if (!fill(n)) RET_FAIL(error_at_cur("unexpected end of input in configuration"))

// In syntax file mode do not overwrite user-defined options.
#define SETOPT(opt, val) do { \
    if (in_syntax_file) { \
        opts.init_##opt(val); \
    } else { \
        opts.set_##opt(val); \
    } \
} while (0)

#define RET_CONF_BOOL(conf) do { \
    CHECK_RET(lex_conf_bool()); \
    SETOPT(conf, tmp_num != 0); \
    return Ret::OK; \
} while(0)

#define RET_CONF_STR(conf) do { \
    CHECK_RET(lex_conf_string()); \
    SETOPT(conf, tmp_str); \
    return Ret::OK; \
} while(0)

#define RET_CONF_ENC(enc) do { \
    CHECK_RET(lex_conf_bool()); \
    if (in_syntax_file) { \
        opts.init_encoding(enc, tmp_num != 0); \
    } else { \
        opts.set_encoding(enc, tmp_num != 0); \
    } \
    return Ret::OK; \
} while(0)

#define RET_CONF_NUM_NONNEG(conf) do { \
    CHECK_RET(lex_conf_number()); \
    if (tmp_num < 0) RET_FAIL(error_at_cur("expected nonnegative value in configuration")); \
    SETOPT(conf, static_cast<uint32_t>(tmp_num)); \
    return Ret::OK; \
} while(0)

#define RET_CONF_EOF(conf) do { \
    CHECK_RET(lex_conf_number()); \
    SETOPT(conf, tmp_num < 0 ? NOEOF : static_cast<uint32_t>(tmp_num)); \
    return Ret::OK; \
} while(0)

#define RET_TOK(t) do { token = t; return Ret::OK; } while(0)

#define RET_OPT(b) do { token = CONF_OPTION; yylval->opt = (b); return Ret::OK; } while(0)

#line 85 "../src/parse/conf_lexer.re"


Ret Input::lex_conf(Opt& opts) {

#line 79 "src/parse/conf_lexer.cc"
{
	uint8_t yych;
	unsigned int yyaccept = 0;
	static const unsigned char yybm[] = {
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,  64,   0,   0,   0,  64,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		 64,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,  32,   0,   0, 
		160, 160, 160, 160, 160, 160, 160, 160, 
		160, 160,  32,   0,   0,   0,   0,   0, 
		  0,  32,  32,  32,  32,  32,  32,  32, 
		 32,  32,  32,  32,  32,  32,  32,  32, 
		 32,  32,  32,  32,  32,  32,  32,  32, 
		 32,  32,  32,   0,   0,   0,   0,  32, 
		  0,  32,  32,  32,  32,  32,  32,  32, 
		 32,  32,  32,  32,  32,  32,  32,  32, 
		 32,  32,  32,  32,  32,  32,  32,  32, 
		 32,  32,  32,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
	};
	if ((lim - cur) < 28) YYFILL(28);
	yych = *cur;
	switch (yych) {
		case '-':
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case ':':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'g':
		case 'j':
		case 'k':
		case 'm':
		case 'o':
		case 'q':
		case 'r':
		case 'w':
		case 'x':
		case 'z': goto yy2;
		case 'a': goto yy4;
		case 'b': goto yy5;
		case 'c': goto yy6;
		case 'd': goto yy7;
		case 'e': goto yy8;
		case 'f': goto yy9;
		case 'h': goto yy10;
		case 'i': goto yy11;
		case 'l': goto yy12;
		case 'n': goto yy13;
		case 'p': goto yy14;
		case 's': goto yy15;
		case 't': goto yy16;
		case 'u': goto yy17;
		case 'v': goto yy18;
		case 'y': goto yy19;
		default: goto yy1;
	}
yy1:
#line 223 "../src/parse/conf_lexer.re"
	{
        RET_FAIL(error_at_tok(
                "unrecognized configuration '%.*s'", static_cast<int>(cur - tok), tok));
    }
#line 193 "src/parse/conf_lexer.cc"
yy2:
	++cur;
	if (lim <= cur) YYFILL(1);
	yych = *cur;
yy3:
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
	goto yy1;
yy4:
	yych = *++cur;
	if (yych == 'p') goto yy20;
	goto yy3;
yy5:
	yych = *++cur;
	if (yych == 'i') goto yy21;
	goto yy3;
yy6:
	yych = *++cur;
	if (yych <= 'f') {
		if (yych == 'a') goto yy22;
		goto yy3;
	} else {
		if (yych <= 'g') goto yy23;
		if (yych == 'o') goto yy24;
		goto yy3;
	}
yy7:
	yych = *++cur;
	if (yych == 'e') goto yy25;
	goto yy3;
yy8:
	yych = *++cur;
	if (yych <= 'l') goto yy3;
	if (yych <= 'm') goto yy26;
	if (yych <= 'n') goto yy27;
	if (yych <= 'o') goto yy28;
	goto yy3;
yy9:
	yych = *++cur;
	if (yych == 'l') goto yy29;
	goto yy3;
yy10:
	yych = *++cur;
	if (yych == 'e') goto yy30;
	goto yy3;
yy11:
	yych = *++cur;
	if (yych == 'n') goto yy31;
	goto yy3;
yy12:
	yych = *++cur;
	if (yych == 'a') goto yy32;
	if (yych == 'e') goto yy33;
	goto yy3;
yy13:
	yych = *++cur;
	if (yych == 'e') goto yy34;
	goto yy3;
yy14:
	yych = *++cur;
	if (yych == 'o') goto yy35;
	goto yy3;
yy15:
	yych = *++cur;
	if (yych == 'e') goto yy36;
	if (yych == 't') goto yy37;
	goto yy3;
yy16:
	yych = *++cur;
	if (yych == 'a') goto yy38;
	goto yy3;
yy17:
	yych = *++cur;
	if (yych == 'n') goto yy39;
	goto yy3;
yy18:
	yych = *++cur;
	if (yych == 'a') goto yy40;
	goto yy3;
yy19:
	yych = *++cur;
	if (yych == 'y') goto yy41;
	goto yy3;
yy20:
	yych = *++cur;
	if (yych == 'i') goto yy42;
	goto yy3;
yy21:
	yych = *++cur;
	if (yych == 't') goto yy44;
	goto yy3;
yy22:
	yych = *++cur;
	if (yych == 's') goto yy45;
	goto yy3;
yy23:
	yych = *++cur;
	if (yych == 'o') goto yy46;
	goto yy3;
yy24:
	yych = *++cur;
	if (yych <= 'l') goto yy3;
	if (yych <= 'm') goto yy47;
	if (yych <= 'n') goto yy48;
	goto yy3;
yy25:
	yych = *++cur;
	if (yych == 'b') goto yy49;
	if (yych == 'f') goto yy50;
	goto yy3;
yy26:
	yych = *++cur;
	if (yych == 'p') goto yy51;
	goto yy3;
yy27:
	yych = *++cur;
	if (yych == 'c') goto yy52;
	goto yy3;
yy28:
	yych = *++cur;
	if (yych == 'f') goto yy53;
	goto yy3;
yy29:
	yych = *++cur;
	if (yych == 'a') goto yy54;
	goto yy3;
yy30:
	yych = *++cur;
	if (yych == 'a') goto yy55;
	goto yy3;
yy31:
	yych = *++cur;
	if (yych == 'd') goto yy56;
	if (yych == 'v') goto yy57;
	goto yy3;
yy32:
	yych = *++cur;
	if (yych == 'b') goto yy58;
	goto yy3;
yy33:
	yych = *++cur;
	if (yych == 'f') goto yy59;
	goto yy3;
yy34:
	yych = *++cur;
	if (yych == 's') goto yy60;
	goto yy3;
yy35:
	yych = *++cur;
	if (yych == 's') goto yy61;
	goto yy3;
yy36:
	yych = *++cur;
	if (yych == 'n') goto yy62;
	goto yy3;
yy37:
	yych = *++cur;
	if (yych == 'a') goto yy63;
	goto yy3;
yy38:
	yych = *++cur;
	if (yych == 'g') goto yy64;
	goto yy3;
yy39:
	yych = *++cur;
	if (yych == 's') goto yy65;
	goto yy3;
yy40:
	yych = *++cur;
	if (yych == 'r') goto yy66;
	goto yy3;
yy41:
	yych = *++cur;
	if (yych <= 'c') {
		if (yych <= 'a') goto yy3;
		if (yych <= 'b') goto yy67;
		goto yy68;
	} else {
		if (yych == 'f') goto yy69;
		goto yy3;
	}
yy42:
	yych = *++cur;
	if (yych <= '@') {
		if (yych <= '/') {
			if (yych == '-') goto yy2;
		} else {
			if (yych <= '9') goto yy2;
			if (yych <= ':') goto yy70;
		}
	} else {
		if (yych <= '_') {
			if (yych <= 'Z') goto yy2;
			if (yych >= '_') goto yy2;
		} else {
			if (yych <= '`') goto yy43;
			if (yych <= 'z') goto yy2;
		}
	}
yy43:
#line 89 "../src/parse/conf_lexer.re"
	{ goto input; }
#line 397 "src/parse/conf_lexer.cc"
yy44:
	yych = *++cur;
	if (yych == '-') goto yy71;
	goto yy3;
yy45:
	yych = *++cur;
	if (yych == 'e') goto yy72;
	goto yy3;
yy46:
	yych = *++cur;
	if (yych == 't') goto yy73;
	goto yy3;
yy47:
	yych = *++cur;
	if (yych == 'p') goto yy74;
	goto yy3;
yy48:
	yych = *++cur;
	if (yych == 'd') goto yy75;
	goto yy3;
yy49:
	yych = *++cur;
	if (yych == 'u') goto yy76;
	goto yy3;
yy50:
	yych = *++cur;
	if (yych == 'i') goto yy77;
	goto yy3;
yy51:
	yych = *++cur;
	if (yych == 't') goto yy78;
	goto yy3;
yy52:
	yych = *++cur;
	if (yych == 'o') goto yy79;
	goto yy3;
yy53:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 104 "../src/parse/conf_lexer.re"
	{ RET_CONF_EOF(fill_eof); }
#line 441 "src/parse/conf_lexer.cc"
yy54:
	yych = *++cur;
	if (yych == 'g') goto yy80;
	goto yy3;
yy55:
	yych = *++cur;
	if (yych == 'd') goto yy81;
	goto yy3;
yy56:
	yych = *++cur;
	if (yych == 'e') goto yy82;
	goto yy3;
yy57:
	yych = *++cur;
	if (yych == 'e') goto yy83;
	goto yy3;
yy58:
	yych = *++cur;
	if (yych == 'e') goto yy84;
	goto yy3;
yy59:
	yych = *++cur;
	if (yych == 't') goto yy85;
	goto yy3;
yy60:
	yych = *++cur;
	if (yych == 't') goto yy86;
	goto yy3;
yy61:
	yych = *++cur;
	if (yych == 'i') goto yy87;
	goto yy3;
yy62:
	yych = *++cur;
	if (yych == 't') goto yy88;
	goto yy3;
yy63:
	yych = *++cur;
	if (yych == 'r') goto yy89;
	if (yych == 't') goto yy90;
	goto yy3;
yy64:
	yych = *++cur;
	if (yych == 's') goto yy91;
	goto yy3;
yy65:
	yych = *++cur;
	if (yych == 'a') goto yy93;
	goto yy3;
yy66:
	yych = *++cur;
	if (yych == 'i') goto yy94;
	goto yy3;
yy67:
	yych = *++cur;
	if (yych == 'm') goto yy95;
	goto yy3;
yy68:
	yych = *++cur;
	if (yych == 'h') goto yy96;
	goto yy3;
yy69:
	yych = *++cur;
	if (yych == 'i') goto yy97;
	if (yych == 'n') goto yy98;
	goto yy3;
yy70:
	yych = *++cur;
	if (yych == 's') goto yy99;
	goto yy3;
yy71:
	yych = *++cur;
	if (yych == 'v') goto yy100;
	goto yy3;
yy72:
	yych = *++cur;
	if (yych == '-') goto yy101;
	goto yy3;
yy73:
	yych = *++cur;
	if (yych == 'o') goto yy102;
	goto yy3;
yy74:
	yych = *++cur;
	if (yych == 'u') goto yy103;
	goto yy3;
yy75:
	yych = *++cur;
	if (yych <= 'd') {
		if (yych == ':') goto yy104;
		goto yy3;
	} else {
		if (yych <= 'e') goto yy105;
		if (yych == 'p') goto yy106;
		goto yy3;
	}
yy76:
	yych = *++cur;
	if (yych == 'g') goto yy107;
	goto yy3;
yy77:
	yych = *++cur;
	if (yych == 'n') goto yy108;
	goto yy3;
yy78:
	yych = *++cur;
	if (yych == 'y') goto yy109;
	goto yy3;
yy79:
	yych = *++cur;
	if (yych == 'd') goto yy110;
	goto yy3;
yy80:
	yych = *++cur;
	if (yych == 's') goto yy111;
	goto yy3;
yy81:
	yych = *++cur;
	if (yych == 'e') goto yy112;
	goto yy3;
yy82:
	yych = *++cur;
	if (yych == 'n') goto yy113;
	goto yy3;
yy83:
	yych = *++cur;
	if (yych == 'r') goto yy114;
	goto yy3;
yy84:
	yych = *++cur;
	if (yych == 'l') goto yy115;
	goto yy3;
yy85:
	yych = *++cur;
	if (yych == 'm') goto yy116;
	goto yy3;
yy86:
	yych = *++cur;
	if (yych == 'e') goto yy117;
	goto yy3;
yy87:
	yych = *++cur;
	if (yych == 'x') goto yy118;
	goto yy3;
yy88:
	yych = *++cur;
	if (yych == 'i') goto yy119;
	goto yy3;
yy89:
	yych = *++cur;
	if (yych == 't') goto yy120;
	goto yy3;
yy90:
	yych = *++cur;
	if (yych == 'e') goto yy121;
	goto yy3;
yy91:
	yych = *++cur;
	if (yych <= '@') {
		if (yych <= '/') {
			if (yych == '-') goto yy2;
		} else {
			if (yych <= '9') goto yy2;
			if (yych <= ':') goto yy122;
		}
	} else {
		if (yych <= '_') {
			if (yych <= 'Z') goto yy2;
			if (yych >= '_') goto yy2;
		} else {
			if (yych <= '`') goto yy92;
			if (yych <= 'z') goto yy2;
		}
	}
yy92:
#line 113 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(tags); }
#line 619 "src/parse/conf_lexer.cc"
yy93:
	yych = *++cur;
	if (yych == 'f') goto yy123;
	goto yy3;
yy94:
	yych = *++cur;
	if (yych == 'a') goto yy124;
	goto yy3;
yy95:
	yych = *++cur;
	if (yych == ':') goto yy125;
	goto yy3;
yy96:
	yych = *++cur;
	if (yych == ':') goto yy126;
	goto yy3;
yy97:
	yych = *++cur;
	if (yych == 'l') goto yy127;
	goto yy3;
yy98:
	yych = *++cur;
	if (yych == ':') goto yy128;
	goto yy3;
yy99:
	yych = *++cur;
	if (yych == 'i') goto yy129;
	if (yych == 't') goto yy130;
	goto yy3;
yy100:
	yych = *++cur;
	if (yych == 'e') goto yy131;
	goto yy3;
yy101:
	yych = *++cur;
	if (yych == 'i') goto yy132;
	if (yych == 'r') goto yy133;
	goto yy3;
yy102:
	yych = *++cur;
	if (yych == ':') goto yy134;
	goto yy3;
yy103:
	yych = *++cur;
	if (yych == 't') goto yy135;
	goto yy3;
yy104:
	yych = *++cur;
	switch (yych) {
		case 'a': goto yy136;
		case 'd': goto yy137;
		case 'e': goto yy105;
		case 'g': goto yy138;
		case 'p': goto yy106;
		default: goto yy3;
	}
yy105:
	yych = *++cur;
	if (yych == 'n') goto yy139;
	goto yy3;
yy106:
	yych = *++cur;
	if (yych == 'r') goto yy140;
	goto yy3;
yy107:
	yych = *++cur;
	if (yych == '-') goto yy141;
	goto yy3;
yy108:
	yych = *++cur;
	if (yych == 'e') goto yy142;
	goto yy3;
yy109:
	yych = *++cur;
	if (yych == '-') goto yy143;
	goto yy3;
yy110:
	yych = *++cur;
	if (yych == 'i') goto yy144;
	goto yy3;
yy111:
	yych = *++cur;
	if (yych == ':') goto yy145;
	goto yy3;
yy112:
	yych = *++cur;
	if (yych == 'r') goto yy146;
	goto yy3;
yy113:
	yych = *++cur;
	if (yych == 't') goto yy148;
	goto yy3;
yy114:
	yych = *++cur;
	if (yych == 't') goto yy149;
	goto yy3;
yy115:
	yych = *++cur;
	if (yych == ':') goto yy150;
	if (yych == 'p') goto yy151;
	goto yy3;
yy116:
	yych = *++cur;
	if (yych == 'o') goto yy152;
	goto yy3;
yy117:
	yych = *++cur;
	if (yych == 'd') goto yy153;
	goto yy3;
yy118:
	yych = *++cur;
	if (yych == '-') goto yy154;
	goto yy3;
yy119:
	yych = *++cur;
	if (yych == 'n') goto yy155;
	goto yy3;
yy120:
	yych = *++cur;
	if (yych == 'l') goto yy156;
	goto yy3;
yy121:
	yych = *++cur;
	if (yych == ':') goto yy157;
	goto yy3;
yy122:
	yych = *++cur;
	if (yych == 'e') goto yy158;
	if (yych == 'p') goto yy159;
	goto yy3;
yy123:
	yych = *++cur;
	if (yych == 'e') goto yy160;
	goto yy3;
yy124:
	yych = *++cur;
	if (yych == 'b') goto yy161;
	goto yy3;
yy125:
	yych = *++cur;
	if (yych == 'h') goto yy162;
	goto yy3;
yy126:
	yych = *++cur;
	if (yych <= 'd') {
		if (yych == 'c') goto yy163;
		goto yy3;
	} else {
		if (yych <= 'e') goto yy164;
		if (yych == 'l') goto yy165;
		goto yy3;
	}
yy127:
	yych = *++cur;
	if (yych == 'l') goto yy166;
	goto yy3;
yy128:
	yych = *++cur;
	if (yych == 's') goto yy167;
	goto yy3;
yy129:
	yych = *++cur;
	if (yych == 'g') goto yy168;
	goto yy3;
yy130:
	yych = *++cur;
	if (yych == 'y') goto yy169;
	goto yy3;
yy131:
	yych = *++cur;
	if (yych == 'c') goto yy170;
	goto yy3;
yy132:
	yych = *++cur;
	if (yych == 'n') goto yy171;
	goto yy3;
yy133:
	yych = *++cur;
	if (yych == 'a') goto yy172;
	goto yy3;
yy134:
	yych = *++cur;
	if (yych == 't') goto yy173;
	goto yy3;
yy135:
	yych = *++cur;
	if (yych == 'e') goto yy174;
	goto yy3;
yy136:
	yych = *++cur;
	if (yych == 'b') goto yy175;
	goto yy3;
yy137:
	yych = *++cur;
	if (yych == 'i') goto yy176;
	goto yy3;
yy138:
	yych = *++cur;
	if (yych == 'o') goto yy177;
	goto yy3;
yy139:
	yych = *++cur;
	if (yych == 'u') goto yy178;
	goto yy3;
yy140:
	yych = *++cur;
	if (yych == 'e') goto yy179;
	goto yy3;
yy141:
	yych = *++cur;
	if (yych == 'o') goto yy180;
	goto yy3;
yy142:
	yych = *++cur;
	if (yych == ':') goto yy181;
	goto yy3;
yy143:
	yych = *++cur;
	if (yych == 'c') goto yy182;
	goto yy3;
yy144:
	yych = *++cur;
	if (yych == 'n') goto yy183;
	goto yy3;
yy145:
	yych = *++cur;
	switch (yych) {
		case '8': goto yy184;
		case 'P': goto yy185;
		case 'T': goto yy186;
		case 'b': goto yy187;
		case 'c': goto yy189;
		case 'd': goto yy190;
		case 'e': goto yy192;
		case 'g': goto yy194;
		case 'i': goto yy196;
		case 'l': goto yy197;
		case 'n': goto yy13;
		case 'p': goto yy14;
		case 's': goto yy198;
		case 't': goto yy199;
		case 'u': goto yy200;
		case 'w': goto yy202;
		case 'x': goto yy204;
		default: goto yy3;
	}
yy146:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
yy147:
#line 94 "../src/parse/conf_lexer.re"
	{
        CHECK_RET(lex_conf_string());
        if (!tmp_str.empty()) {
            std::string path(opts.glob.output_file);
            get_dir(path);
            SETOPT(header_file, path + tmp_str);
        }
        return Ret::OK;
    }
#line 882 "src/parse/conf_lexer.cc"
yy148:
	yych = *++cur;
	if (yych == ':') goto yy205;
	goto yy3;
yy149:
	yych = *++cur;
	if (yych == '-') goto yy206;
	goto yy3;
yy150:
	yych = *++cur;
	if (yych <= 'r') {
		if (yych != 'p') goto yy3;
	} else {
		if (yych <= 's') goto yy207;
		if (yych == 'y') goto yy208;
		goto yy3;
	}
yy151:
	yych = *++cur;
	if (yych == 'r') goto yy209;
	goto yy3;
yy152:
	yych = *++cur;
	if (yych == 's') goto yy210;
	goto yy3;
yy153:
	yych = *++cur;
	if (yych == '-') goto yy211;
	goto yy3;
yy154:
	yych = *++cur;
	if (yych == 'c') goto yy212;
	goto yy3;
yy155:
	yych = *++cur;
	if (yych == 'e') goto yy213;
	goto yy3;
yy156:
	yych = *++cur;
	if (yych == 'a') goto yy214;
	goto yy3;
yy157:
	yych = *++cur;
	if (yych == 'a') goto yy215;
	if (yych == 'n') goto yy216;
	goto yy3;
yy158:
	yych = *++cur;
	if (yych == 'x') goto yy217;
	goto yy3;
yy159:
	yych = *++cur;
	if (yych == 'r') goto yy218;
	goto yy3;
yy160:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 202 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(unsafe); }
#line 944 "src/parse/conf_lexer.cc"
yy161:
	yych = *++cur;
	if (yych == 'l') goto yy219;
	goto yy3;
yy162:
	yych = *++cur;
	if (yych == 'e') goto yy220;
	goto yy3;
yy163:
	yych = *++cur;
	if (yych == 'o') goto yy221;
	goto yy3;
yy164:
	yych = *++cur;
	if (yych == 'm') goto yy222;
	goto yy3;
yy165:
	yych = *++cur;
	if (yych == 'i') goto yy223;
	goto yy3;
yy166:
	yych = *++cur;
	if (yych == ':') goto yy224;
	goto yy3;
yy167:
	yych = *++cur;
	if (yych == 'e') goto yy225;
	goto yy3;
yy168:
	yych = *++cur;
	if (yych == 'i') goto yy226;
	goto yy3;
yy169:
	yych = *++cur;
	if (yych == 'l') goto yy227;
	goto yy3;
yy170:
	yych = *++cur;
	if (yych == 't') goto yy228;
	goto yy3;
yy171:
	yych = *++cur;
	if (yych == 's') goto yy229;
	if (yych == 'v') goto yy230;
	goto yy3;
yy172:
	yych = *++cur;
	if (yych == 'n') goto yy231;
	goto yy3;
yy173:
	yych = *++cur;
	if (yych == 'h') goto yy232;
	goto yy3;
yy174:
	yych = *++cur;
	if (yych == 'd') goto yy233;
	goto yy3;
yy175:
	yych = *++cur;
	if (yych == 'o') goto yy234;
	goto yy3;
yy176:
	yych = *++cur;
	if (yych == 'v') goto yy235;
	goto yy3;
yy177:
	yych = *++cur;
	if (yych == 't') goto yy236;
	goto yy3;
yy178:
	yych = *++cur;
	if (yych == 'm') goto yy237;
	goto yy3;
yy179:
	yych = *++cur;
	if (yych == 'f') goto yy238;
	goto yy3;
yy180:
	yych = *++cur;
	if (yych == 'u') goto yy239;
	goto yy3;
yy181:
	yych = *++cur;
	if (yych == 'Y') goto yy240;
	goto yy3;
yy182:
	yych = *++cur;
	if (yych == 'l') goto yy241;
	goto yy3;
yy183:
	yych = *++cur;
	if (yych == 'g') goto yy242;
	goto yy3;
yy184:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 208 "../src/parse/conf_lexer.re"
	{ RET_CONF_ENC(Enc::Type::UTF8); }
#line 1045 "src/parse/conf_lexer.cc"
yy185:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 115 "../src/parse/conf_lexer.re"
	{
        CHECK_RET(lex_conf_bool());
        SETOPT(tags_posix_syntax, tmp_num != 0);
        SETOPT(tags_posix_semantics, tmp_num != 0);
        return Ret::OK;
    }
#line 1058 "src/parse/conf_lexer.cc"
yy186:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
	goto yy92;
yy187:
	yych = *++cur;
	if (yych <= 'Z') {
		if (yych <= '/') {
			if (yych == '-') goto yy2;
		} else {
			if (yych <= ':') goto yy2;
			if (yych >= 'A') goto yy2;
		}
	} else {
		if (yych <= '`') {
			if (yych == '_') goto yy2;
		} else {
			if (yych == 'i') goto yy21;
			if (yych <= 'z') goto yy2;
		}
	}
yy188:
#line 194 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(bitmaps); }
#line 1085 "src/parse/conf_lexer.cc"
yy189:
	yych = *++cur;
	if (yych == 'a') goto yy22;
	if (yych == 'o') goto yy243;
	goto yy3;
yy190:
	yych = *++cur;
	if (yych <= 'Z') {
		if (yych <= '/') {
			if (yych == '-') goto yy2;
		} else {
			if (yych <= ':') goto yy2;
			if (yych >= 'A') goto yy2;
		}
	} else {
		if (yych <= '`') {
			if (yych == '_') goto yy2;
		} else {
			if (yych == 'e') goto yy244;
			if (yych <= 'z') goto yy2;
		}
	}
yy191:
#line 195 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(debug); }
#line 1111 "src/parse/conf_lexer.cc"
yy192:
	yych = *++cur;
	if (yych <= '_') {
		if (yych <= ':') {
			if (yych == '-') goto yy2;
			if (yych >= '0') goto yy2;
		} else {
			if (yych <= '@') goto yy193;
			if (yych <= 'Z') goto yy2;
			if (yych >= '_') goto yy2;
		}
	} else {
		if (yych <= 'l') {
			if (yych <= '`') goto yy193;
			if (yych == 'c') goto yy245;
			goto yy2;
		} else {
			if (yych <= 'm') goto yy26;
			if (yych <= 'n') goto yy246;
			if (yych <= 'z') goto yy2;
		}
	}
yy193:
#line 204 "../src/parse/conf_lexer.re"
	{ RET_CONF_ENC(Enc::Type::EBCDIC); }
#line 1137 "src/parse/conf_lexer.cc"
yy194:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
yy195:
#line 196 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(cgoto); }
#line 1146 "src/parse/conf_lexer.cc"
yy196:
	yych = *++cur;
	if (yych == 'n') goto yy247;
	goto yy3;
yy197:
	yych = *++cur;
	if (yych == 'e') goto yy33;
	goto yy3;
yy198:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 198 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(nested_ifs); }
#line 1162 "src/parse/conf_lexer.cc"
yy199:
	yych = *++cur;
	if (yych <= '^') {
		if (yych <= '/') {
			if (yych == '-') goto yy2;
			goto yy147;
		} else {
			if (yych <= ':') goto yy2;
			if (yych <= '@') goto yy147;
			if (yych <= 'Z') goto yy2;
			goto yy147;
		}
	} else {
		if (yych <= 'a') {
			if (yych <= '_') goto yy2;
			if (yych <= '`') goto yy147;
			goto yy248;
		} else {
			if (yych == 'y') goto yy249;
			if (yych <= 'z') goto yy2;
			goto yy147;
		}
	}
yy200:
	yych = *++cur;
	if (yych <= '^') {
		if (yych <= '/') {
			if (yych == '-') goto yy2;
		} else {
			if (yych <= ':') goto yy2;
			if (yych <= '@') goto yy201;
			if (yych <= 'Z') goto yy2;
		}
	} else {
		if (yych <= 'n') {
			if (yych == '`') goto yy201;
			if (yych <= 'm') goto yy2;
			goto yy250;
		} else {
			if (yych == 't') goto yy251;
			if (yych <= 'z') goto yy2;
		}
	}
yy201:
#line 205 "../src/parse/conf_lexer.re"
	{ RET_CONF_ENC(Enc::Type::UTF32); }
#line 1209 "src/parse/conf_lexer.cc"
yy202:
	yych = *++cur;
	if (yych <= 'Z') {
		if (yych <= '/') {
			if (yych == '-') goto yy2;
		} else {
			if (yych <= ':') goto yy2;
			if (yych >= 'A') goto yy2;
		}
	} else {
		if (yych <= '`') {
			if (yych == '_') goto yy2;
		} else {
			if (yych == 'i') goto yy252;
			if (yych <= 'z') goto yy2;
		}
	}
yy203:
#line 206 "../src/parse/conf_lexer.re"
	{ RET_CONF_ENC(Enc::Type::UCS2); }
#line 1230 "src/parse/conf_lexer.cc"
yy204:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 207 "../src/parse/conf_lexer.re"
	{ RET_CONF_ENC(Enc::Type::UTF16); }
#line 1238 "src/parse/conf_lexer.cc"
yy205:
	yych = *++cur;
	if (yych <= 'r') goto yy3;
	if (yych <= 's') goto yy253;
	if (yych <= 't') goto yy254;
	goto yy3;
yy206:
	yych = *++cur;
	if (yych == 'c') goto yy255;
	goto yy3;
yy207:
	yych = *++cur;
	if (yych == 't') goto yy256;
	goto yy3;
yy208:
	yych = *++cur;
	if (yych == 'y') goto yy257;
	goto yy3;
yy209:
	yych = *++cur;
	if (yych == 'e') goto yy258;
	goto yy3;
yy210:
	yych = *++cur;
	if (yych == 't') goto yy259;
	goto yy3;
yy211:
	yych = *++cur;
	if (yych == 'i') goto yy260;
	goto yy3;
yy212:
	yych = *++cur;
	if (yych == 'a') goto yy261;
	goto yy3;
yy213:
	yych = *++cur;
	if (yych == 'l') goto yy262;
	goto yy3;
yy214:
	yych = *++cur;
	if (yych == 'b') goto yy263;
	goto yy3;
yy215:
	yych = *++cur;
	if (yych == 'b') goto yy264;
	goto yy3;
yy216:
	yych = *++cur;
	if (yych == 'e') goto yy265;
	goto yy3;
yy217:
	yych = *++cur;
	if (yych == 'p') goto yy266;
	goto yy3;
yy218:
	yych = *++cur;
	if (yych == 'e') goto yy267;
	goto yy3;
yy219:
	yych = *++cur;
	if (yych == 'e') goto yy268;
	goto yy3;
yy220:
	yych = *++cur;
	if (yych == 'x') goto yy269;
	goto yy3;
yy221:
	yych = *++cur;
	if (yych == 'n') goto yy270;
	goto yy3;
yy222:
	yych = *++cur;
	if (yych == 'i') goto yy271;
	goto yy3;
yy223:
	yych = *++cur;
	if (yych == 't') goto yy272;
	goto yy3;
yy224:
	yych = *++cur;
	if (yych <= 'd') {
		if (yych == 'c') goto yy273;
		goto yy3;
	} else {
		if (yych <= 'e') goto yy274;
		if (yych == 'p') goto yy275;
		goto yy3;
	}
yy225:
	yych = *++cur;
	if (yych == 'p') goto yy276;
	goto yy3;
yy226:
	yych = *++cur;
	if (yych == 'l') goto yy277;
	goto yy3;
yy227:
	yych = *++cur;
	if (yych == 'e') goto yy278;
	goto yy3;
yy228:
	yych = *++cur;
	if (yych == 'o') goto yy279;
	goto yy3;
yy229:
	yych = *++cur;
	if (yych == 'e') goto yy280;
	goto yy3;
yy230:
	yych = *++cur;
	if (yych == 'e') goto yy281;
	goto yy3;
yy231:
	yych = *++cur;
	if (yych == 'g') goto yy282;
	goto yy3;
yy232:
	yych = *++cur;
	if (yych == 'r') goto yy283;
	goto yy3;
yy233:
	yych = *++cur;
	if (yych == '-') goto yy284;
	goto yy3;
yy234:
	yych = *++cur;
	if (yych == 'r') goto yy285;
	goto yy3;
yy235:
	yych = *++cur;
	if (yych == 'i') goto yy286;
	goto yy3;
yy236:
	yych = *++cur;
	if (yych == 'o') goto yy287;
	goto yy3;
yy237:
	yych = *++cur;
	if (yych == 'p') goto yy289;
	goto yy3;
yy238:
	yych = *++cur;
	if (yych == 'i') goto yy290;
	goto yy3;
yy239:
	yych = *++cur;
	if (yych == 't') goto yy291;
	goto yy3;
yy240:
	yych = *++cur;
	if (yych == 'Y') goto yy292;
	goto yy3;
yy241:
	yych = *++cur;
	if (yych == 'a') goto yy293;
	goto yy3;
yy242:
	yych = *++cur;
	if (yych == '-') goto yy294;
	if (yych == ':') goto yy295;
	goto yy3;
yy243:
	yych = *++cur;
	if (yych == 'm') goto yy296;
	goto yy3;
yy244:
	yych = *++cur;
	if (yych == 'b') goto yy49;
	goto yy3;
yy245:
	yych = *++cur;
	if (yych == 'b') goto yy297;
	goto yy3;
yy246:
	yych = *++cur;
	if (yych == 'c') goto yy298;
	goto yy3;
yy247:
	yych = *++cur;
	if (yych == 'p') goto yy299;
	goto yy3;
yy248:
	yych = *++cur;
	if (yych == 'g') goto yy300;
	goto yy3;
yy249:
	yych = *++cur;
	if (yych == 'p') goto yy301;
	goto yy3;
yy250:
	yych = *++cur;
	if (yych == 'i') goto yy302;
	if (yych == 's') goto yy65;
	goto yy3;
yy251:
	yych = *++cur;
	if (yych == 'f') goto yy303;
	goto yy3;
yy252:
	yych = *++cur;
	if (yych == 'd') goto yy304;
	goto yy3;
yy253:
	yych = *++cur;
	if (yych == 't') goto yy305;
	goto yy3;
yy254:
	yych = *++cur;
	if (yych == 'o') goto yy306;
	goto yy3;
yy255:
	yych = *++cur;
	if (yych == 'a') goto yy307;
	goto yy3;
yy256:
	yych = *++cur;
	if (yych == 'a') goto yy308;
	goto yy3;
yy257:
	yych = *++cur;
	if (yych <= 'N') {
		if (yych == 'F') goto yy309;
		if (yych <= 'M') goto yy3;
		goto yy310;
	} else {
		if (yych <= 'f') {
			if (yych <= 'e') goto yy3;
			goto yy311;
		} else {
			if (yych == 'l') goto yy312;
			goto yy3;
		}
	}
yy258:
	yych = *++cur;
	if (yych == 'f') goto yy313;
	goto yy3;
yy259:
	yych = *++cur;
	if (yych == '-') goto yy314;
	goto yy3;
yy260:
	yych = *++cur;
	if (yych == 'f') goto yy315;
	goto yy3;
yy261:
	yych = *++cur;
	if (yych == 'p') goto yy316;
	goto yy3;
yy262:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 105 "../src/parse/conf_lexer.re"
	{ RET_CONF_EOF(fill_sentinel); }
#line 1495 "src/parse/conf_lexer.cc"
yy263:
	yych = *++cur;
	if (yych == 'e') goto yy317;
	goto yy3;
yy264:
	yych = *++cur;
	if (yych == 'o') goto yy318;
	goto yy3;
yy265:
	yych = *++cur;
	if (yych == 'x') goto yy319;
	goto yy3;
yy266:
	yych = *++cur;
	if (yych == 'r') goto yy320;
	goto yy3;
yy267:
	yych = *++cur;
	if (yych == 'f') goto yy321;
	goto yy3;
yy268:
	yych = *++cur;
	if (yych == ':') goto yy322;
	goto yy3;
yy269:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 180 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(bitmaps_hex); }
#line 1527 "src/parse/conf_lexer.cc"
yy270:
	yych = *++cur;
	if (yych == 'v') goto yy323;
	goto yy3;
yy271:
	yych = *++cur;
	if (yych == 't') goto yy324;
	goto yy3;
yy272:
	yych = *++cur;
	if (yych == 'e') goto yy325;
	goto yy3;
yy273:
	yych = *++cur;
	if (yych == 'h') goto yy326;
	goto yy3;
yy274:
	yych = *++cur;
	if (yych == 'n') goto yy327;
	goto yy3;
yy275:
	yych = *++cur;
	if (yych == 'a') goto yy328;
	goto yy3;
yy276:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 111 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(fn_sep); }
#line 1559 "src/parse/conf_lexer.cc"
yy277:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 91 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_sigil); }
#line 1567 "src/parse/conf_lexer.cc"
yy278:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 90 "../src/parse/conf_lexer.re"
	{ goto api_style; }
#line 1575 "src/parse/conf_lexer.cc"
yy279:
	yych = *++cur;
	if (yych == 'r') goto yy329;
	goto yy3;
yy280:
	yych = *++cur;
	if (yych == 'n') goto yy330;
	goto yy3;
yy281:
	yych = *++cur;
	if (yych == 'r') goto yy331;
	goto yy3;
yy282:
	yych = *++cur;
	if (yych == 'e') goto yy332;
	goto yy3;
yy283:
	yych = *++cur;
	if (yych == 'e') goto yy333;
	goto yy3;
yy284:
	yych = *++cur;
	if (yych == 'g') goto yy334;
	goto yy3;
yy285:
	yych = *++cur;
	if (yych == 't') goto yy335;
	goto yy3;
yy286:
	yych = *++cur;
	if (yych == 'd') goto yy336;
	goto yy3;
yy287:
	yyaccept = 0;
	yych = *(mar = ++cur);
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
	if (yych == '@') goto yy337;
yy288:
#line 188 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(cond_goto); }
#line 1618 "src/parse/conf_lexer.cc"
yy289:
	yych = *++cur;
	if (yych == 'r') goto yy339;
	goto yy3;
yy290:
	yych = *++cur;
	if (yych == 'x') goto yy340;
	goto yy3;
yy291:
	yych = *++cur;
	if (yych == 'p') goto yy341;
	goto yy3;
yy292:
	yych = *++cur;
	switch (yych) {
		case 'B': goto yy342;
		case 'C': goto yy343;
		case 'D': goto yy344;
		case 'F': goto yy345;
		case 'G': goto yy346;
		case 'L': goto yy347;
		case 'M': goto yy348;
		case 'P': goto yy349;
		case 'R': goto yy350;
		case 'S': goto yy351;
		default: goto yy3;
	}
yy293:
	yych = *++cur;
	if (yych == 's') goto yy352;
	goto yy3;
yy294:
	yych = *++cur;
	if (yych == 'p') goto yy353;
	goto yy3;
yy295:
	yych = *++cur;
	if (yych == 'e') goto yy354;
	if (yych == 'u') goto yy355;
	goto yy3;
yy296:
	yych = *++cur;
	if (yych == 'p') goto yy356;
	goto yy3;
yy297:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
	goto yy193;
yy298:
	yych = *++cur;
	if (yych == 'o') goto yy357;
	goto yy3;
yy299:
	yych = *++cur;
	if (yych == 'u') goto yy358;
	goto yy3;
yy300:
	yych = *++cur;
	if (yych == 's') goto yy186;
	goto yy3;
yy301:
	yych = *++cur;
	if (yych == 'e') goto yy359;
	goto yy3;
yy302:
	yych = *++cur;
	if (yych == 'c') goto yy360;
	goto yy3;
yy303:
	yych = *++cur;
	if (yych == '-') goto yy361;
	goto yy3;
yy304:
	yych = *++cur;
	if (yych == 'e') goto yy362;
	goto yy3;
yy305:
	yych = *++cur;
	if (yych == 'r') goto yy363;
	goto yy3;
yy306:
	yych = *++cur;
	if (yych == 'p') goto yy364;
	goto yy3;
yy307:
	yych = *++cur;
	if (yych == 'p') goto yy365;
	goto yy3;
yy308:
	yych = *++cur;
	if (yych == 'r') goto yy366;
	goto yy3;
yy309:
	yych = *++cur;
	if (yych == 'i') goto yy367;
	goto yy3;
yy310:
	yych = *++cur;
	if (yych == 'e') goto yy368;
	goto yy3;
yy311:
	yych = *++cur;
	if (yych == 'i') goto yy369;
	goto yy3;
yy312:
	yych = *++cur;
	if (yych == 'o') goto yy370;
	goto yy3;
yy313:
	yych = *++cur;
	if (yych == 'i') goto yy371;
	goto yy3;
yy314:
	yych = *++cur;
	if (yych == 'c') goto yy372;
	goto yy3;
yy315:
	yych = *++cur;
	if (yych == 's') goto yy198;
	goto yy3;
yy316:
	yych = *++cur;
	if (yych == 't') goto yy373;
	goto yy3;
yy317:
	yych = *++cur;
	if (yych == 'l') goto yy374;
	goto yy3;
yy318:
	yych = *++cur;
	if (yych == 'r') goto yy376;
	goto yy3;
yy319:
	yych = *++cur;
	if (yych == 't') goto yy377;
	goto yy3;
yy320:
	yych = *++cur;
	if (yych == 'e') goto yy378;
	goto yy3;
yy321:
	yych = *++cur;
	if (yych == 'i') goto yy379;
	goto yy3;
yy322:
	yych = *++cur;
	if (yych == 'y') goto yy380;
	goto yy3;
yy323:
	yych = *++cur;
	if (yych == 'e') goto yy381;
	goto yy3;
yy324:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 178 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(char_emit); }
#line 1780 "src/parse/conf_lexer.cc"
yy325:
	yych = *++cur;
	if (yych == 'r') goto yy382;
	goto yy3;
yy326:
	yych = *++cur;
	if (yych == 'e') goto yy383;
	goto yy3;
yy327:
	yych = *++cur;
	if (yych == 'a') goto yy384;
	goto yy3;
yy328:
	yych = *++cur;
	if (yych == 'r') goto yy385;
	goto yy3;
yy329:
	yych = *++cur;
	if (yych == 's') goto yy386;
	goto yy3;
yy330:
	yych = *++cur;
	if (yych == 's') goto yy387;
	goto yy3;
yy331:
	yych = *++cur;
	if (yych == 't') goto yy388;
	goto yy3;
yy332:
	yych = *++cur;
	if (yych == 's') goto yy389;
	goto yy3;
yy333:
	yych = *++cur;
	if (yych == 's') goto yy390;
	goto yy3;
yy334:
	yych = *++cur;
	if (yych == 'o') goto yy391;
	goto yy3;
yy335:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 183 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(cond_abort); }
#line 1828 "src/parse/conf_lexer.cc"
yy336:
	yych = *++cur;
	if (yych == 'e') goto yy392;
	goto yy3;
yy337:
	yych = *++cur;
	if (yych == 'c') goto yy393;
yy338:
	cur = mar;
	if (yyaccept <= 2) {
		if (yyaccept <= 1) {
			if (yyaccept == 0) {
				goto yy288;
			} else {
				goto yy375;
			}
		} else {
			goto yy452;
		}
	} else {
		if (yyaccept <= 4) {
			if (yyaccept == 3) {
				goto yy521;
			} else {
				goto yy687;
			}
		} else {
			goto yy728;
		}
	}
yy339:
	yych = *++cur;
	if (yych == 'e') goto yy394;
	goto yy3;
yy340:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 184 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(cond_label_prefix); }
#line 1870 "src/parse/conf_lexer.cc"
yy341:
	yych = *++cur;
	if (yych == 'u') goto yy395;
	goto yy3;
yy342:
	yych = *++cur;
	if (yych == 'A') goto yy396;
	goto yy3;
yy343:
	yych = *++cur;
	if (yych <= 'S') {
		if (yych == 'O') goto yy397;
		goto yy3;
	} else {
		if (yych <= 'T') goto yy398;
		if (yych <= 'U') goto yy399;
		goto yy3;
	}
yy344:
	yych = *++cur;
	if (yych == 'E') goto yy400;
	goto yy3;
yy345:
	yych = *++cur;
	if (yych == 'I') goto yy401;
	if (yych == 'N') goto yy402;
	goto yy3;
yy346:
	yych = *++cur;
	if (yych == 'E') goto yy403;
	goto yy3;
yy347:
	yych = *++cur;
	if (yych == 'E') goto yy404;
	if (yych == 'I') goto yy405;
	goto yy3;
yy348:
	yych = *++cur;
	if (yych == 'A') goto yy406;
	if (yych == 'T') goto yy407;
	goto yy3;
yy349:
	yych = *++cur;
	if (yych == 'E') goto yy408;
	goto yy3;
yy350:
	yych = *++cur;
	if (yych == 'E') goto yy409;
	goto yy3;
yy351:
	yych = *++cur;
	switch (yych) {
		case 'E': goto yy410;
		case 'H': goto yy411;
		case 'K': goto yy412;
		case 'T': goto yy413;
		default: goto yy3;
	}
yy352:
	yych = *++cur;
	if (yych == 's') goto yy414;
	goto yy3;
yy353:
	yych = *++cur;
	if (yych == 'o') goto yy415;
	goto yy3;
yy354:
	yych = *++cur;
	if (yych == 'b') goto yy416;
	goto yy3;
yy355:
	yych = *++cur;
	if (yych == 'c') goto yy417;
	if (yych == 't') goto yy418;
	goto yy3;
yy356:
	yych = *++cur;
	if (yych == 'u') goto yy419;
	goto yy3;
yy357:
	yych = *++cur;
	if (yych == 'd') goto yy420;
	goto yy3;
yy358:
	yych = *++cur;
	if (yych == 't') goto yy421;
	goto yy3;
yy359:
	yych = *++cur;
	if (yych == '-') goto yy422;
	goto yy3;
yy360:
	yych = *++cur;
	if (yych == 'o') goto yy423;
	goto yy3;
yy361:
	yych = *++cur;
	if (yych == '1') goto yy424;
	if (yych == '8') goto yy184;
	goto yy3;
yy362:
	yych = *++cur;
	if (yych == '-') goto yy425;
	goto yy3;
yy363:
	yych = *++cur;
	if (yych == 'i') goto yy426;
	goto yy3;
yy364:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 214 "../src/parse/conf_lexer.re"
	{ RET_CONF_NUM_NONNEG(indent_top); }
#line 1986 "src/parse/conf_lexer.cc"
yy365:
	yych = *++cur;
	if (yych == 't') goto yy427;
	goto yy3;
yy366:
	yych = *++cur;
	if (yych == 't') goto yy374;
	goto yy3;
yy367:
	yych = *++cur;
	if (yych == 'l') goto yy428;
	goto yy3;
yy368:
	yych = *++cur;
	if (yych == 'x') goto yy429;
	goto yy3;
yy369:
	yych = *++cur;
	if (yych == 'l') goto yy430;
	goto yy3;
yy370:
	yych = *++cur;
	if (yych == 'o') goto yy431;
	goto yy3;
yy371:
	yych = *++cur;
	if (yych == 'x') goto yy432;
	goto yy3;
yy372:
	yych = *++cur;
	if (yych == 'a') goto yy433;
	goto yy3;
yy373:
	yych = *++cur;
	if (yych == 'u') goto yy434;
	goto yy3;
yy374:
	yyaccept = 1;
	yych = *(mar = ++cur);
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
	if (yych <= '\r') {
		if (yych == '\t') {
			ctx = cur;
			goto yy435;
		}
		if (yych >= '\r') {
			ctx = cur;
			goto yy435;
		}
	} else {
		if (yych <= ' ') {
			if (yych >= ' ') {
				ctx = cur;
				goto yy435;
			}
		} else {
			if (yych == '=') {
				ctx = cur;
				goto yy436;
			}
		}
	}
yy375:
#line 221 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(label_start); }
#line 2054 "src/parse/conf_lexer.cc"
yy376:
	yych = *++cur;
	if (yych == 't') goto yy437;
	goto yy3;
yy377:
	yych = *++cur;
	if (yych == 'l') goto yy438;
	goto yy3;
yy378:
	yych = *++cur;
	if (yych == 's') goto yy439;
	goto yy3;
yy379:
	yych = *++cur;
	if (yych == 'x') goto yy440;
	goto yy3;
yy380:
	yych = *++cur;
	if (yych == 'y') goto yy441;
	goto yy3;
yy381:
	yych = *++cur;
	if (yych == 'r') goto yy442;
	goto yy3;
yy382:
	yych = *++cur;
	if (yych == 'a') goto yy443;
	goto yy3;
yy383:
	yych = *++cur;
	if (yych == 'c') goto yy444;
	goto yy3;
yy384:
	yych = *++cur;
	if (yych == 'b') goto yy445;
	goto yy3;
yy385:
	yych = *++cur;
	if (yych == 'a') goto yy446;
	goto yy3;
yy386:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
	goto yy188;
yy387:
	yych = *++cur;
	if (yych == 'i') goto yy447;
	goto yy3;
yy388:
	yych = *++cur;
	if (yych == 'e') goto yy448;
	goto yy3;
yy389:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 201 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(case_ranges); }
#line 2116 "src/parse/conf_lexer.cc"
yy390:
	yych = *++cur;
	if (yych == 'h') goto yy449;
	goto yy3;
yy391:
	yych = *++cur;
	if (yych == 't') goto yy450;
	goto yy3;
yy392:
	yych = *++cur;
	if (yych == 'r') goto yy451;
	goto yy3;
yy393:
	yych = *++cur;
	if (yych == 'o') goto yy453;
	goto yy338;
yy394:
	yych = *++cur;
	if (yych == 'f') goto yy454;
	goto yy3;
yy395:
	yych = *++cur;
	if (yych == 't') goto yy455;
	goto yy3;
yy396:
	yych = *++cur;
	if (yych == 'C') goto yy456;
	goto yy3;
yy397:
	yych = *++cur;
	if (yych == 'N') goto yy457;
	goto yy3;
yy398:
	yych = *++cur;
	if (yych <= 'W') goto yy3;
	if (yych <= 'X') goto yy458;
	if (yych <= 'Y') goto yy459;
	goto yy3;
yy399:
	yych = *++cur;
	if (yych == 'R') goto yy460;
	goto yy3;
yy400:
	yych = *++cur;
	if (yych == 'B') goto yy461;
	goto yy3;
yy401:
	yych = *++cur;
	if (yych == 'L') goto yy462;
	goto yy3;
yy402:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 162 "../src/parse/conf_lexer.re"
	{
        CHECK_RET(lex_conf_list());
        if (tmp_list.size() < 1) {
            RET_FAIL(error_at_tok("`re2c:define:YYFN` value should be a nonempty list of strings"));
        }
        SETOPT(api_fn, tmp_list);
        return Ret::OK;
    }
#line 2181 "src/parse/conf_lexer.cc"
yy403:
	yych = *++cur;
	if (yych == 'T') goto yy463;
	goto yy3;
yy404:
	yych = *++cur;
	if (yych == 'S') goto yy464;
	goto yy3;
yy405:
	yych = *++cur;
	if (yych == 'M') goto yy465;
	goto yy3;
yy406:
	yych = *++cur;
	if (yych == 'R') goto yy466;
	if (yych == 'X') goto yy467;
	goto yy3;
yy407:
	yych = *++cur;
	if (yych == 'A') goto yy468;
	goto yy3;
yy408:
	yych = *++cur;
	if (yych == 'E') goto yy469;
	goto yy3;
yy409:
	yych = *++cur;
	if (yych == 'S') goto yy470;
	goto yy3;
yy410:
	yych = *++cur;
	if (yych == 'T') goto yy471;
	goto yy3;
yy411:
	yych = *++cur;
	if (yych == 'I') goto yy472;
	goto yy3;
yy412:
	yych = *++cur;
	if (yych == 'I') goto yy473;
	goto yy3;
yy413:
	yych = *++cur;
	if (yych == 'A') goto yy474;
	goto yy3;
yy414:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 211 "../src/parse/conf_lexer.re"
	{ goto empty_class; }
#line 2234 "src/parse/conf_lexer.cc"
yy415:
	yych = *++cur;
	if (yych == 'l') goto yy475;
	goto yy3;
yy416:
	yych = *++cur;
	if (yych == 'c') goto yy476;
	goto yy3;
yy417:
	yych = *++cur;
	if (yych == 's') goto yy477;
	goto yy3;
yy418:
	yych = *++cur;
	if (yych == 'f') goto yy478;
	goto yy3;
yy419:
	yych = *++cur;
	if (yych == 't') goto yy479;
	goto yy3;
yy420:
	yych = *++cur;
	if (yych == 'i') goto yy480;
	goto yy3;
yy421:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
	goto yy43;
yy422:
	yych = *++cur;
	if (yych == 'h') goto yy10;
	goto yy3;
yy423:
	yych = *++cur;
	if (yych == 'd') goto yy481;
	goto yy3;
yy424:
	yych = *++cur;
	if (yych == '6') goto yy204;
	goto yy3;
yy425:
	yych = *++cur;
	if (yych == 'c') goto yy482;
	goto yy3;
yy426:
	yych = *++cur;
	if (yych == 'n') goto yy483;
	goto yy3;
yy427:
	yych = *++cur;
	if (yych == 'u') goto yy484;
	goto yy3;
yy428:
	yych = *++cur;
	if (yych == 'l') goto yy485;
	goto yy3;
yy429:
	yych = *++cur;
	if (yych == 't') goto yy486;
	goto yy3;
yy430:
	yych = *++cur;
	if (yych == 'l') goto yy487;
	goto yy3;
yy431:
	yych = *++cur;
	if (yych == 'p') goto yy488;
	goto yy3;
yy432:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 216 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(label_prefix); }
#line 2312 "src/parse/conf_lexer.cc"
yy433:
	yych = *++cur;
	if (yych == 'p') goto yy489;
	goto yy3;
yy434:
	yych = *++cur;
	if (yych == 'r') goto yy490;
	goto yy3;
yy435:
	++cur;
	if (lim <= cur) YYFILL(1);
	yych = *cur;
	if (yybm[0+yych] & 64) {
		goto yy435;
	}
	if (yych != '=') goto yy338;
yy436:
	++cur;
	if ((lim - cur) < 2) YYFILL(2);
	yych = *cur;
	if (yych <= ' ') {
		if (yych <= '\f') {
			if (yych == '\t') goto yy436;
			goto yy338;
		} else {
			if (yych <= '\r') goto yy436;
			if (yych <= 0x1F) goto yy338;
			goto yy436;
		}
	} else {
		if (yych <= '/') {
			if (yych == '-') goto yy491;
			goto yy338;
		} else {
			if (yych <= '0') goto yy492;
			if (yych <= '9') goto yy494;
			goto yy338;
		}
	}
yy437:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 191 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(state_abort); }
#line 2359 "src/parse/conf_lexer.cc"
yy438:
	yych = *++cur;
	if (yych == 'a') goto yy495;
	goto yy3;
yy439:
	yych = *++cur;
	if (yych == 's') goto yy496;
	goto yy3;
yy440:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 121 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(tags_prefix); }
#line 2375 "src/parse/conf_lexer.cc"
yy441:
	yych = *++cur;
	if (yych <= 'c') {
		if (yych <= '`') goto yy3;
		if (yych <= 'a') goto yy497;
		if (yych <= 'b') goto yy498;
		goto yy499;
	} else {
		if (yych <= 'r') goto yy3;
		if (yych <= 's') goto yy500;
		if (yych <= 't') goto yy501;
		goto yy3;
	}
yy442:
	yych = *++cur;
	if (yych == 's') goto yy502;
	goto yy3;
yy443:
	yych = *++cur;
	if (yych == 'l') goto yy503;
	goto yy3;
yy444:
	yych = *++cur;
	if (yych == 'k') goto yy504;
	goto yy3;
yy445:
	yych = *++cur;
	if (yych == 'l') goto yy505;
	goto yy3;
yy446:
	yych = *++cur;
	if (yych == 'm') goto yy506;
	goto yy3;
yy447:
	yych = *++cur;
	if (yych == 't') goto yy507;
	goto yy3;
yy448:
	yych = *++cur;
	if (yych == 'd') goto yy508;
	goto yy3;
yy449:
	yych = *++cur;
	if (yych == 'o') goto yy509;
	goto yy3;
yy450:
	yych = *++cur;
	if (yych == 'o') goto yy510;
	goto yy3;
yy451:
	yyaccept = 2;
	yych = *(mar = ++cur);
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
	if (yych == '@') goto yy511;
yy452:
#line 186 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(cond_div); }
#line 2435 "src/parse/conf_lexer.cc"
yy453:
	yych = *++cur;
	if (yych == 'n') goto yy512;
	goto yy338;
yy454:
	yych = *++cur;
	if (yych == 'i') goto yy513;
	goto yy3;
yy455:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
	goto yy191;
yy456:
	yych = *++cur;
	if (yych == 'K') goto yy514;
	goto yy3;
yy457:
	yych = *++cur;
	if (yych == 'D') goto yy515;
	goto yy3;
yy458:
	yych = *++cur;
	if (yych == 'M') goto yy516;
	goto yy3;
yy459:
	yych = *++cur;
	if (yych == 'P') goto yy517;
	goto yy3;
yy460:
	yych = *++cur;
	if (yych == 'S') goto yy518;
	goto yy3;
yy461:
	yych = *++cur;
	if (yych == 'U') goto yy519;
	goto yy3;
yy462:
	yych = *++cur;
	if (yych == 'L') goto yy520;
	goto yy3;
yy463:
	yych = *++cur;
	if (yych == 'C') goto yy522;
	if (yych == 'S') goto yy523;
	goto yy3;
yy464:
	yych = *++cur;
	if (yych == 'S') goto yy524;
	goto yy3;
yy465:
	yych = *++cur;
	if (yych == 'I') goto yy525;
	goto yy3;
yy466:
	yych = *++cur;
	if (yych == 'K') goto yy526;
	goto yy3;
yy467:
	yych = *++cur;
	if (yych == 'F') goto yy527;
	if (yych == 'N') goto yy528;
	goto yy3;
yy468:
	yych = *++cur;
	if (yych == 'G') goto yy529;
	goto yy3;
yy469:
	yych = *++cur;
	if (yych == 'K') goto yy530;
	goto yy3;
yy470:
	yych = *++cur;
	if (yych == 'T') goto yy531;
	goto yy3;
yy471:
	yych = *++cur;
	if (yych == 'C') goto yy532;
	if (yych == 'S') goto yy533;
	goto yy3;
yy472:
	yych = *++cur;
	if (yych == 'F') goto yy534;
	goto yy3;
yy473:
	yych = *++cur;
	if (yych == 'P') goto yy535;
	goto yy3;
yy474:
	yych = *++cur;
	if (yych == 'G') goto yy536;
	goto yy3;
yy475:
	yych = *++cur;
	if (yych == 'i') goto yy537;
	goto yy3;
yy476:
	yych = *++cur;
	if (yych == 'd') goto yy538;
	goto yy3;
yy477:
	yych = *++cur;
	if (yych == '2') goto yy539;
	goto yy3;
yy478:
	yych = *++cur;
	if (yych <= '2') {
		if (yych == '1') goto yy424;
		goto yy3;
	} else {
		if (yych <= '3') goto yy540;
		if (yych == '8') goto yy184;
		goto yy3;
	}
yy479:
	yych = *++cur;
	if (yych == 'e') goto yy541;
	goto yy3;
yy480:
	yych = *++cur;
	if (yych == 'n') goto yy542;
	goto yy3;
yy481:
	yych = *++cur;
	if (yych == 'e') goto yy543;
	goto yy3;
yy482:
	yych = *++cur;
	if (yych == 'h') goto yy544;
	goto yy3;
yy483:
	yych = *++cur;
	if (yych == 'g') goto yy545;
	goto yy3;
yy484:
	yych = *++cur;
	if (yych == 'r') goto yy546;
	goto yy3;
yy485:
	yych = *++cur;
	if (yych == 'L') goto yy547;
	goto yy3;
yy486:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 219 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(label_next); }
#line 2586 "src/parse/conf_lexer.cc"
yy487:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 217 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(label_fill); }
#line 2594 "src/parse/conf_lexer.cc"
yy488:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 218 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(label_loop); }
#line 2602 "src/parse/conf_lexer.cc"
yy489:
	yych = *++cur;
	if (yych == 't') goto yy548;
	goto yy3;
yy490:
	yych = *++cur;
	if (yych == 'e') goto yy549;
	goto yy3;
yy491:
	yych = *++cur;
	if (yych <= '0') goto yy338;
	if (yych <= '9') goto yy494;
	goto yy338;
yy492:
	++cur;
yy493:
	cur = ctx;
#line 220 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(label_start_force); }
#line 2622 "src/parse/conf_lexer.cc"
yy494:
	++cur;
	if (lim <= cur) YYFILL(1);
	yych = *cur;
	if (yybm[0+yych] & 128) {
		goto yy494;
	}
	goto yy493;
yy495:
	yych = *++cur;
	if (yych == 'b') goto yy550;
	goto yy3;
yy496:
	yych = *++cur;
	if (yych == 'i') goto yy551;
	goto yy3;
yy497:
	yych = *++cur;
	if (yych == 'c') goto yy552;
	goto yy3;
yy498:
	yych = *++cur;
	if (yych == 'm') goto yy553;
	goto yy3;
yy499:
	yych = *++cur;
	if (yych == 'h') goto yy555;
	if (yych == 't') goto yy557;
	goto yy3;
yy500:
	yych = *++cur;
	if (yych == 't') goto yy558;
	goto yy3;
yy501:
	yych = *++cur;
	if (yych == 'a') goto yy559;
	goto yy3;
yy502:
	yych = *++cur;
	if (yych == 'i') goto yy560;
	goto yy3;
yy503:
	yych = *++cur;
	if (yych == 's') goto yy561;
	goto yy3;
yy504:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 109 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(fill_check); }
#line 2675 "src/parse/conf_lexer.cc"
yy505:
	yych = *++cur;
	if (yych == 'e') goto yy562;
	goto yy3;
yy506:
	yych = *++cur;
	if (yych == 'e') goto yy563;
	goto yy3;
yy507:
	yych = *++cur;
	if (yych == 'i') goto yy564;
	goto yy3;
yy508:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 200 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(case_inverted); }
#line 2695 "src/parse/conf_lexer.cc"
yy509:
	yych = *++cur;
	if (yych == 'l') goto yy565;
	goto yy3;
yy510:
	yych = *++cur;
	if (yych == 's') goto yy566;
	goto yy3;
yy511:
	yych = *++cur;
	if (yych == 'c') goto yy567;
	goto yy338;
yy512:
	yych = *++cur;
	if (yych == 'd') goto yy568;
	goto yy338;
yy513:
	yych = *++cur;
	if (yych == 'x') goto yy569;
	goto yy3;
yy514:
	yych = *++cur;
	if (yych == 'U') goto yy570;
	goto yy3;
yy515:
	yych = *++cur;
	if (yych == 'T') goto yy571;
	goto yy3;
yy516:
	yych = *++cur;
	if (yych == 'A') goto yy572;
	goto yy3;
yy517:
	yych = *++cur;
	if (yych == 'E') goto yy573;
	goto yy3;
yy518:
	yych = *++cur;
	if (yych == 'O') goto yy574;
	goto yy3;
yy519:
	yych = *++cur;
	if (yych == 'G') goto yy575;
	goto yy3;
yy520:
	yyaccept = 3;
	yych = *(mar = ++cur);
	if (yych <= '?') {
		if (yych <= '/') {
			if (yych == '-') goto yy2;
		} else {
			if (yych <= '9') goto yy2;
			if (yych <= ':') goto yy576;
		}
	} else {
		if (yych <= '^') {
			if (yych <= '@') goto yy577;
			if (yych <= 'Z') goto yy2;
		} else {
			if (yych == '`') goto yy521;
			if (yych <= 'z') goto yy2;
		}
	}
yy521:
#line 132 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_fill); }
#line 2762 "src/parse/conf_lexer.cc"
yy522:
	yych = *++cur;
	if (yych == 'O') goto yy578;
	goto yy3;
yy523:
	yych = *++cur;
	if (yych == 'T') goto yy579;
	goto yy3;
yy524:
	yych = *++cur;
	if (yych == 'T') goto yy580;
	goto yy3;
yy525:
	yych = *++cur;
	if (yych == 'T') goto yy581;
	goto yy3;
yy526:
	yych = *++cur;
	if (yych == 'E') goto yy582;
	goto yy3;
yy527:
	yych = *++cur;
	if (yych == 'I') goto yy583;
	goto yy3;
yy528:
	yych = *++cur;
	if (yych == 'M') goto yy584;
	goto yy3;
yy529:
	yych = *++cur;
	if (yych == 'N') goto yy585;
	if (yych == 'P') goto yy586;
	goto yy3;
yy530:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 146 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_peek); }
#line 2803 "src/parse/conf_lexer.cc"
yy531:
	yych = *++cur;
	if (yych == 'O') goto yy587;
	goto yy3;
yy532:
	yych = *++cur;
	if (yych == 'O') goto yy588;
	goto yy3;
yy533:
	yych = *++cur;
	if (yych == 'T') goto yy589;
	goto yy3;
yy534:
	yych = *++cur;
	if (yych == 'T') goto yy590;
	goto yy3;
yy535:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 159 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_skip); }
#line 2827 "src/parse/conf_lexer.cc"
yy536:
	yych = *++cur;
	if (yych == 'N') goto yy592;
	if (yych == 'P') goto yy593;
	goto yy3;
yy537:
	yych = *++cur;
	if (yych == 'c') goto yy594;
	goto yy3;
yy538:
	yych = *++cur;
	if (yych == 'i') goto yy595;
	goto yy3;
yy539:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
	goto yy203;
yy540:
	yych = *++cur;
	if (yych == '2') goto yy543;
	goto yy3;
yy541:
	yych = *++cur;
	if (yych == 'd') goto yy596;
	goto yy3;
yy542:
	yych = *++cur;
	if (yych == 'g') goto yy597;
	goto yy3;
yy543:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
	goto yy201;
yy544:
	yych = *++cur;
	if (yych == 'a') goto yy598;
	goto yy3;
yy545:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 213 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(indent_str); }
#line 2876 "src/parse/conf_lexer.cc"
yy546:
	yych = *++cur;
	if (yych == 'e') goto yy599;
	goto yy3;
yy547:
	yych = *++cur;
	if (yych == 'a') goto yy600;
	goto yy3;
yy548:
	yych = *++cur;
	if (yych == 'u') goto yy601;
	goto yy3;
yy549:
	yych = *++cur;
	if (yych == 's') goto yy185;
	goto yy3;
yy550:
	yych = *++cur;
	if (yych == 'e') goto yy602;
	goto yy3;
yy551:
	yych = *++cur;
	if (yych == 'o') goto yy603;
	goto yy3;
yy552:
	yych = *++cur;
	if (yych == 'c') goto yy604;
	goto yy3;
yy553:
	yych = *++cur;
	if (yych <= '@') {
		if (yych <= '/') {
			if (yych == '-') goto yy2;
		} else {
			if (yych <= '9') goto yy2;
			if (yych <= ':') goto yy125;
		}
	} else {
		if (yych <= '_') {
			if (yych <= 'Z') goto yy2;
			if (yych >= '_') goto yy2;
		} else {
			if (yych <= '`') goto yy554;
			if (yych <= 'z') goto yy2;
		}
	}
yy554:
#line 179 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(var_bitmaps); }
#line 2926 "src/parse/conf_lexer.cc"
yy555:
	yych = *++cur;
	if (yych <= '@') {
		if (yych <= '/') {
			if (yych == '-') goto yy2;
		} else {
			if (yych <= '9') goto yy2;
			if (yych <= ':') goto yy126;
		}
	} else {
		if (yych <= '_') {
			if (yych <= 'Z') goto yy2;
			if (yych >= '_') goto yy2;
		} else {
			if (yych <= '`') goto yy556;
			if (yych <= 'z') goto yy2;
		}
	}
yy556:
#line 175 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(var_char); }
#line 2948 "src/parse/conf_lexer.cc"
yy557:
	yych = *++cur;
	if (yych == 'a') goto yy605;
	goto yy3;
yy558:
	yych = *++cur;
	if (yych == 'a') goto yy606;
	goto yy3;
yy559:
	yych = *++cur;
	if (yych == 'r') goto yy607;
	goto yy3;
yy560:
	yych = *++cur;
	if (yych == 'o') goto yy608;
	goto yy3;
yy561:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 177 "../src/parse/conf_lexer.re"
	{ goto char_lit; }
#line 2972 "src/parse/conf_lexer.cc"
yy562:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 107 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(fill_enable); }
#line 2980 "src/parse/conf_lexer.cc"
yy563:
	yych = *++cur;
	if (yych == 't') goto yy609;
	goto yy3;
yy564:
	yych = *++cur;
	if (yych == 'v') goto yy610;
	goto yy3;
yy565:
	yych = *++cur;
	if (yych == 'd') goto yy611;
	goto yy3;
yy566:
	yych = *++cur;
	if (yych <= '@') {
		if (yych <= '/') {
			if (yych == '-') goto yy2;
			goto yy195;
		} else {
			if (yych <= '9') goto yy2;
			if (yych <= ':') goto yy134;
			goto yy195;
		}
	} else {
		if (yych <= '_') {
			if (yych <= 'Z') goto yy2;
			if (yych <= '^') goto yy195;
			goto yy2;
		} else {
			if (yych <= '`') goto yy195;
			if (yych <= 'z') goto yy2;
			goto yy195;
		}
	}
yy567:
	yych = *++cur;
	if (yych == 'o') goto yy612;
	goto yy338;
yy568:
	++cur;
#line 189 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(cond_goto_param); }
#line 3023 "src/parse/conf_lexer.cc"
yy569:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 185 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(cond_enum_prefix); }
#line 3031 "src/parse/conf_lexer.cc"
yy570:
	yych = *++cur;
	if (yych == 'P') goto yy613;
	goto yy3;
yy571:
	yych = *++cur;
	if (yych == 'Y') goto yy615;
	goto yy3;
yy572:
	yych = *++cur;
	if (yych == 'R') goto yy616;
	goto yy3;
yy573:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 128 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_char_type); }
#line 3051 "src/parse/conf_lexer.cc"
yy574:
	yych = *++cur;
	if (yych == 'R') goto yy617;
	goto yy3;
yy575:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 131 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_debug); }
#line 3063 "src/parse/conf_lexer.cc"
yy576:
	yych = *++cur;
	if (yych == 'n') goto yy618;
	goto yy3;
yy577:
	yych = *++cur;
	if (yych == 'l') goto yy619;
	goto yy338;
yy578:
	yych = *++cur;
	if (yych == 'N') goto yy620;
	goto yy3;
yy579:
	yych = *++cur;
	if (yych == 'A') goto yy621;
	goto yy3;
yy580:
	yych = *++cur;
	if (yych == 'H') goto yy622;
	goto yy3;
yy581:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 140 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_limit); }
#line 3091 "src/parse/conf_lexer.cc"
yy582:
	yych = *++cur;
	if (yych == 'R') goto yy623;
	goto yy3;
yy583:
	yych = *++cur;
	if (yych == 'L') goto yy624;
	goto yy3;
yy584:
	yych = *++cur;
	if (yych == 'A') goto yy625;
	goto yy3;
yy585:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 144 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_mtag_neg); }
#line 3111 "src/parse/conf_lexer.cc"
yy586:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 145 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_mtag_pos); }
#line 3119 "src/parse/conf_lexer.cc"
yy587:
	yych = *++cur;
	if (yych == 'R') goto yy626;
	goto yy3;
yy588:
	yych = *++cur;
	if (yych == 'N') goto yy627;
	goto yy3;
yy589:
	yych = *++cur;
	if (yych == 'A') goto yy628;
	goto yy3;
yy590:
	yych = *++cur;
	if (yych <= 'M') {
		if (yych <= '/') {
			if (yych == '-') goto yy2;
		} else {
			if (yych <= ':') goto yy2;
			if (yych <= '@') goto yy591;
			if (yych <= 'L') goto yy2;
			goto yy629;
		}
	} else {
		if (yych <= '^') {
			if (yych == 'S') goto yy630;
			if (yych <= 'Z') goto yy2;
		} else {
			if (yych == '`') goto yy591;
			if (yych <= 'z') goto yy2;
		}
	}
yy591:
#line 156 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_shift); }
#line 3155 "src/parse/conf_lexer.cc"
yy592:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 160 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_stag_neg); }
#line 3163 "src/parse/conf_lexer.cc"
yy593:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 161 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_stag_pos); }
#line 3171 "src/parse/conf_lexer.cc"
yy594:
	yych = *++cur;
	if (yych == 'y') goto yy631;
	goto yy3;
yy595:
	yych = *++cur;
	if (yych == 'c') goto yy297;
	goto yy3;
yy596:
	yych = *++cur;
	if (yych == '-') goto yy632;
	goto yy3;
yy597:
	yych = *++cur;
	if (yych == '-') goto yy294;
	goto yy3;
yy598:
	yych = *++cur;
	if (yych == 'r') goto yy633;
	goto yy3;
yy599:
	yych = *++cur;
	if (yych == 's') goto yy634;
	goto yy3;
yy600:
	yych = *++cur;
	if (yych == 'b') goto yy635;
	goto yy3;
yy601:
	yych = *++cur;
	if (yych == 'r') goto yy636;
	goto yy3;
yy602:
	yych = *++cur;
	if (yych == 'l') goto yy637;
	goto yy3;
yy603:
	yych = *++cur;
	if (yych == 'n') goto yy638;
	goto yy3;
yy604:
	yych = *++cur;
	if (yych == 'e') goto yy639;
	goto yy3;
yy605:
	yych = *++cur;
	if (yych == 'b') goto yy640;
	goto yy3;
yy606:
	yych = *++cur;
	if (yych == 'b') goto yy641;
	if (yych == 't') goto yy642;
	goto yy3;
yy607:
	yych = *++cur;
	if (yych == 'g') goto yy643;
	goto yy3;
yy608:
	yych = *++cur;
	if (yych == 'n') goto yy644;
	goto yy3;
yy609:
	yych = *++cur;
	if (yych == 'e') goto yy645;
	goto yy3;
yy610:
	yych = *++cur;
	if (yych == 'e') goto yy646;
	goto yy3;
yy611:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 197 "../src/parse/conf_lexer.re"
	{ RET_CONF_NUM_NONNEG(cgoto_threshold); }
#line 3248 "src/parse/conf_lexer.cc"
yy612:
	yych = *++cur;
	if (yych == 'n') goto yy647;
	goto yy338;
yy613:
	yych = *++cur;
	if (yych <= 'B') {
		if (yych <= '/') {
			if (yych == '-') goto yy2;
		} else {
			if (yych <= ':') goto yy2;
			if (yych >= 'A') goto yy2;
		}
	} else {
		if (yych <= '^') {
			if (yych <= 'C') goto yy648;
			if (yych <= 'Z') goto yy2;
		} else {
			if (yych == '`') goto yy614;
			if (yych <= 'z') goto yy2;
		}
	}
yy614:
#line 125 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_backup); }
#line 3274 "src/parse/conf_lexer.cc"
yy615:
	yych = *++cur;
	if (yych == 'P') goto yy649;
	goto yy3;
yy616:
	yych = *++cur;
	if (yych == 'K') goto yy650;
	goto yy3;
yy617:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 130 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_cursor); }
#line 3290 "src/parse/conf_lexer.cc"
yy618:
	yych = *++cur;
	if (yych == 'a') goto yy651;
	goto yy3;
yy619:
	yych = *++cur;
	if (yych == 'e') goto yy652;
	goto yy338;
yy620:
	yych = *++cur;
	if (yych == 'D') goto yy653;
	goto yy3;
yy621:
	yych = *++cur;
	if (yych == 'T') goto yy654;
	goto yy3;
yy622:
	yych = *++cur;
	if (yych == 'A') goto yy655;
	goto yy3;
yy623:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 141 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_marker); }
#line 3318 "src/parse/conf_lexer.cc"
yy624:
	yych = *++cur;
	if (yych == 'L') goto yy656;
	goto yy3;
yy625:
	yych = *++cur;
	if (yych == 'T') goto yy657;
	goto yy3;
yy626:
	yych = *++cur;
	if (yych == 'E') goto yy658;
	goto yy3;
yy627:
	yych = *++cur;
	if (yych == 'D') goto yy660;
	goto yy3;
yy628:
	yych = *++cur;
	if (yych == 'T') goto yy661;
	goto yy3;
yy629:
	yych = *++cur;
	if (yych == 'T') goto yy662;
	goto yy3;
yy630:
	yych = *++cur;
	if (yych == 'T') goto yy663;
	goto yy3;
yy631:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 210 "../src/parse/conf_lexer.re"
	{ goto encoding_policy; }
#line 3354 "src/parse/conf_lexer.cc"
yy632:
	yych = *++cur;
	if (yych == 'g') goto yy664;
	goto yy3;
yy633:
	yych = *++cur;
	if (yych == 's') goto yy539;
	goto yy3;
yy634:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 123 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(invert_captures); }
#line 3370 "src/parse/conf_lexer.cc"
yy635:
	yych = *++cur;
	if (yych == 'e') goto yy430;
	goto yy3;
yy636:
	yych = *++cur;
	if (yych == 'e') goto yy665;
	goto yy3;
yy637:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 192 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(state_next); }
#line 3386 "src/parse/conf_lexer.cc"
yy638:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 122 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(tags_expression); }
#line 3394 "src/parse/conf_lexer.cc"
yy639:
	yych = *++cur;
	if (yych == 'p') goto yy666;
	goto yy3;
yy640:
	yych = *++cur;
	if (yych == 'l') goto yy667;
	goto yy3;
yy641:
	yych = *++cur;
	if (yych == 'l') goto yy668;
	goto yy3;
yy642:
	yych = *++cur;
	if (yych == 'e') goto yy669;
	goto yy3;
yy643:
	yych = *++cur;
	if (yych == 'e') goto yy670;
	goto yy3;
yy644:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 176 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(char_conv); }
#line 3422 "src/parse/conf_lexer.cc"
yy645:
	yych = *++cur;
	if (yych == 'r') goto yy671;
	goto yy3;
yy646:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 199 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(case_insensitive); }
#line 3434 "src/parse/conf_lexer.cc"
yy647:
	yych = *++cur;
	if (yych == 'd') goto yy672;
	goto yy338;
yy648:
	yych = *++cur;
	if (yych == 'T') goto yy673;
	goto yy3;
yy649:
	yych = *++cur;
	if (yych == 'E') goto yy674;
	goto yy3;
yy650:
	yych = *++cur;
	if (yych == 'E') goto yy675;
	goto yy3;
yy651:
	yych = *++cur;
	if (yych == 'k') goto yy676;
	goto yy3;
yy652:
	yych = *++cur;
	if (yych == 'n') goto yy677;
	goto yy338;
yy653:
	yych = *++cur;
	if (yych == 'I') goto yy678;
	goto yy3;
yy654:
	yych = *++cur;
	if (yych == 'E') goto yy679;
	goto yy3;
yy655:
	yych = *++cur;
	if (yych == 'N') goto yy681;
	goto yy3;
yy656:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 142 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_maxfill); }
#line 3478 "src/parse/conf_lexer.cc"
yy657:
	yych = *++cur;
	if (yych == 'C') goto yy682;
	goto yy3;
yy658:
	yych = *++cur;
	if (yych <= 'C') {
		if (yych <= '/') {
			if (yych == '-') goto yy2;
		} else {
			if (yych <= ':') goto yy2;
			if (yych <= '@') goto yy659;
			if (yych <= 'B') goto yy2;
			goto yy683;
		}
	} else {
		if (yych <= '^') {
			if (yych == 'T') goto yy684;
			if (yych <= 'Z') goto yy2;
		} else {
			if (yych == '`') goto yy659;
			if (yych <= 'z') goto yy2;
		}
	}
yy659:
#line 147 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_restore); }
#line 3506 "src/parse/conf_lexer.cc"
yy660:
	yych = *++cur;
	if (yych == 'I') goto yy685;
	goto yy3;
yy661:
	yych = *++cur;
	if (yych == 'E') goto yy686;
	goto yy3;
yy662:
	yych = *++cur;
	if (yych == 'A') goto yy688;
	goto yy3;
yy663:
	yych = *++cur;
	if (yych == 'A') goto yy689;
	goto yy3;
yy664:
	yych = *++cur;
	if (yych == 'o') goto yy690;
	goto yy3;
yy665:
	yych = *++cur;
	if (yych == 's') goto yy691;
	goto yy3;
yy666:
	yych = *++cur;
	if (yych == 't') goto yy692;
	goto yy3;
yy667:
	yych = *++cur;
	if (yych == 'e') goto yy693;
	goto yy3;
yy668:
	yych = *++cur;
	if (yych == 'e') goto yy694;
	goto yy3;
yy669:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 174 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(var_state); }
#line 3550 "src/parse/conf_lexer.cc"
yy670:
	yych = *++cur;
	if (yych == 't') goto yy695;
	goto yy3;
yy671:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 108 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(fill_param_enable); }
#line 3562 "src/parse/conf_lexer.cc"
yy672:
	++cur;
#line 187 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(cond_div_param); }
#line 3567 "src/parse/conf_lexer.cc"
yy673:
	yych = *++cur;
	if (yych == 'X') goto yy696;
	goto yy3;
yy674:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 127 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_cond_type); }
#line 3579 "src/parse/conf_lexer.cc"
yy675:
	yych = *++cur;
	if (yych == 'R') goto yy697;
	goto yy3;
yy676:
	yych = *++cur;
	if (yych == 'e') goto yy698;
	goto yy3;
yy677:
	++cur;
#line 133 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(fill_param); }
#line 3592 "src/parse/conf_lexer.cc"
yy678:
	yych = *++cur;
	if (yych == 'T') goto yy699;
	goto yy3;
yy679:
	yych = *++cur;
	if (yych <= '@') {
		if (yych <= '/') {
			if (yych == '-') goto yy2;
		} else {
			if (yych <= '9') goto yy2;
			if (yych <= ':') goto yy700;
		}
	} else {
		if (yych <= '_') {
			if (yych <= 'Z') goto yy2;
			if (yych >= '_') goto yy2;
		} else {
			if (yych <= '`') goto yy680;
			if (yych <= 'z') goto yy2;
		}
	}
yy680:
#line 137 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_state_get); }
#line 3618 "src/parse/conf_lexer.cc"
yy681:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 139 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_less_than); }
#line 3626 "src/parse/conf_lexer.cc"
yy682:
	yych = *++cur;
	if (yych == 'H') goto yy701;
	goto yy3;
yy683:
	yych = *++cur;
	if (yych == 'T') goto yy702;
	goto yy3;
yy684:
	yych = *++cur;
	if (yych == 'A') goto yy703;
	goto yy3;
yy685:
	yych = *++cur;
	if (yych == 'T') goto yy704;
	goto yy3;
yy686:
	yyaccept = 4;
	yych = *(mar = ++cur);
	if (yych <= '?') {
		if (yych <= '/') {
			if (yych == '-') goto yy2;
		} else {
			if (yych <= '9') goto yy2;
			if (yych <= ':') goto yy705;
		}
	} else {
		if (yych <= '^') {
			if (yych <= '@') goto yy706;
			if (yych <= 'Z') goto yy2;
		} else {
			if (yych == '`') goto yy687;
			if (yych <= 'z') goto yy2;
		}
	}
yy687:
#line 153 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_state_set); }
#line 3665 "src/parse/conf_lexer.cc"
yy688:
	yych = *++cur;
	if (yych == 'G') goto yy707;
	goto yy3;
yy689:
	yych = *++cur;
	if (yych == 'G') goto yy708;
	goto yy3;
yy690:
	yych = *++cur;
	if (yych == 't') goto yy709;
	goto yy3;
yy691:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 114 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(tags_posix_syntax); }
#line 3685 "src/parse/conf_lexer.cc"
yy692:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 172 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(var_accept); }
#line 3693 "src/parse/conf_lexer.cc"
yy693:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 171 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(var_cond_table); }
#line 3701 "src/parse/conf_lexer.cc"
yy694:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 181 "../src/parse/conf_lexer.re"
	{ return lex_conf_string(); }
#line 3709 "src/parse/conf_lexer.cc"
yy695:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 173 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(var_cgoto_table); }
#line 3717 "src/parse/conf_lexer.cc"
yy696:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 126 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_backup_ctx); }
#line 3725 "src/parse/conf_lexer.cc"
yy697:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 129 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_ctxmarker); }
#line 3733 "src/parse/conf_lexer.cc"
yy698:
	yych = *++cur;
	if (yych == 'd') goto yy710;
	goto yy3;
yy699:
	yych = *++cur;
	if (yych == 'I') goto yy711;
	goto yy3;
yy700:
	yych = *++cur;
	if (yych == 'n') goto yy712;
	goto yy3;
yy701:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 143 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_maxnmatch); }
#line 3753 "src/parse/conf_lexer.cc"
yy702:
	yych = *++cur;
	if (yych == 'X') goto yy713;
	goto yy3;
yy703:
	yych = *++cur;
	if (yych == 'G') goto yy714;
	goto yy3;
yy704:
	yych = *++cur;
	if (yych == 'I') goto yy715;
	goto yy3;
yy705:
	yych = *++cur;
	if (yych == 'n') goto yy716;
	goto yy3;
yy706:
	yych = *++cur;
	if (yych == 's') goto yy717;
	goto yy338;
yy707:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 158 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_shift_mtag); }
#line 3781 "src/parse/conf_lexer.cc"
yy708:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 157 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_shift_stag); }
#line 3789 "src/parse/conf_lexer.cc"
yy709:
	yych = *++cur;
	if (yych == 'o') goto yy718;
	goto yy3;
yy710:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 134 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(fill_naked); }
#line 3801 "src/parse/conf_lexer.cc"
yy711:
	yych = *++cur;
	if (yych == 'O') goto yy719;
	goto yy3;
yy712:
	yych = *++cur;
	if (yych == 'a') goto yy720;
	goto yy3;
yy713:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 148 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_restore_ctx); }
#line 3817 "src/parse/conf_lexer.cc"
yy714:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 149 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_restore_tag); }
#line 3825 "src/parse/conf_lexer.cc"
yy715:
	yych = *++cur;
	if (yych == 'O') goto yy721;
	goto yy3;
yy716:
	yych = *++cur;
	if (yych == 'a') goto yy722;
	goto yy3;
yy717:
	yych = *++cur;
	if (yych == 't') goto yy723;
	goto yy338;
yy718:
	yych = *++cur;
	if (yych == 's') goto yy194;
	goto yy3;
yy719:
	yych = *++cur;
	if (yych == 'N') goto yy724;
	goto yy3;
yy720:
	yych = *++cur;
	if (yych == 'k') goto yy726;
	goto yy3;
yy721:
	yych = *++cur;
	if (yych == 'N') goto yy727;
	goto yy3;
yy722:
	yych = *++cur;
	if (yych == 'k') goto yy729;
	goto yy3;
yy723:
	yych = *++cur;
	if (yych == 'a') goto yy730;
	goto yy338;
yy724:
	yych = *++cur;
	if (yych <= '@') {
		if (yych <= '/') {
			if (yych == '-') goto yy2;
		} else {
			if (yych <= '9') goto yy2;
			if (yych <= ':') goto yy731;
		}
	} else {
		if (yych <= '_') {
			if (yych <= 'Z') goto yy2;
			if (yych >= '_') goto yy2;
		} else {
			if (yych <= '`') goto yy725;
			if (yych <= 'z') goto yy2;
		}
	}
yy725:
#line 135 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_cond_get); }
#line 3883 "src/parse/conf_lexer.cc"
yy726:
	yych = *++cur;
	if (yych == 'e') goto yy732;
	goto yy3;
yy727:
	yyaccept = 5;
	yych = *(mar = ++cur);
	if (yych <= '?') {
		if (yych <= '/') {
			if (yych == '-') goto yy2;
		} else {
			if (yych <= '9') goto yy2;
			if (yych <= ':') goto yy733;
		}
	} else {
		if (yych <= '^') {
			if (yych <= '@') goto yy734;
			if (yych <= 'Z') goto yy2;
		} else {
			if (yych == '`') goto yy728;
			if (yych <= 'z') goto yy2;
		}
	}
yy728:
#line 150 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(api_cond_set); }
#line 3910 "src/parse/conf_lexer.cc"
yy729:
	yych = *++cur;
	if (yych == 'e') goto yy735;
	goto yy3;
yy730:
	yych = *++cur;
	if (yych == 't') goto yy736;
	goto yy338;
yy731:
	yych = *++cur;
	if (yych == 'n') goto yy737;
	goto yy3;
yy732:
	yych = *++cur;
	if (yych == 'd') goto yy738;
	goto yy3;
yy733:
	yych = *++cur;
	if (yych == 'n') goto yy739;
	goto yy3;
yy734:
	yych = *++cur;
	if (yych == 'c') goto yy740;
	goto yy338;
yy735:
	yych = *++cur;
	if (yych == 'd') goto yy741;
	goto yy3;
yy736:
	yych = *++cur;
	if (yych == 'e') goto yy742;
	goto yy338;
yy737:
	yych = *++cur;
	if (yych == 'a') goto yy743;
	goto yy3;
yy738:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 138 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(state_get_naked); }
#line 3954 "src/parse/conf_lexer.cc"
yy739:
	yych = *++cur;
	if (yych == 'a') goto yy744;
	goto yy3;
yy740:
	yych = *++cur;
	if (yych == 'o') goto yy745;
	goto yy338;
yy741:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 154 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(state_set_naked); }
#line 3970 "src/parse/conf_lexer.cc"
yy742:
	++cur;
#line 155 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(state_set_param); }
#line 3975 "src/parse/conf_lexer.cc"
yy743:
	yych = *++cur;
	if (yych == 'k') goto yy746;
	goto yy3;
yy744:
	yych = *++cur;
	if (yych == 'k') goto yy747;
	goto yy3;
yy745:
	yych = *++cur;
	if (yych == 'n') goto yy748;
	goto yy338;
yy746:
	yych = *++cur;
	if (yych == 'e') goto yy749;
	goto yy3;
yy747:
	yych = *++cur;
	if (yych == 'e') goto yy750;
	goto yy3;
yy748:
	yych = *++cur;
	if (yych == 'd') goto yy751;
	goto yy338;
yy749:
	yych = *++cur;
	if (yych == 'd') goto yy752;
	goto yy3;
yy750:
	yych = *++cur;
	if (yych == 'd') goto yy753;
	goto yy3;
yy751:
	++cur;
#line 151 "../src/parse/conf_lexer.re"
	{ RET_CONF_STR(cond_set_param); }
#line 4012 "src/parse/conf_lexer.cc"
yy752:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 136 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(cond_get_naked); }
#line 4020 "src/parse/conf_lexer.cc"
yy753:
	yych = *++cur;
	if (yybm[0+yych] & 32) {
		goto yy2;
	}
#line 152 "../src/parse/conf_lexer.re"
	{ RET_CONF_BOOL(cond_set_naked); }
#line 4028 "src/parse/conf_lexer.cc"
}
#line 227 "../src/parse/conf_lexer.re"


input:
    CHECK_RET(lex_conf_assign());

#line 4036 "src/parse/conf_lexer.cc"
{
	uint8_t yych;
	if ((lim - cur) < 7) YYFILL(7);
	yych = *cur;
	if (yych <= 'b') goto yy755;
	if (yych <= 'c') goto yy757;
	if (yych <= 'd') goto yy758;
yy755:
	++cur;
yy756:
#line 232 "../src/parse/conf_lexer.re"
	{
        RET_FAIL(error_at_cur("bad configuration value (expected: 'default', 'custom')"));
    }
#line 4051 "src/parse/conf_lexer.cc"
yy757:
	yych = *(mar = ++cur);
	if (yych == 'u') goto yy759;
	goto yy756;
yy758:
	yych = *(mar = ++cur);
	if (yych == 'e') goto yy761;
	goto yy756;
yy759:
	yych = *++cur;
	if (yych == 's') goto yy762;
yy760:
	cur = mar;
	goto yy756;
yy761:
	yych = *++cur;
	if (yych == 'f') goto yy763;
	goto yy760;
yy762:
	yych = *++cur;
	if (yych == 't') goto yy764;
	goto yy760;
yy763:
	yych = *++cur;
	if (yych == 'a') goto yy765;
	goto yy760;
yy764:
	yych = *++cur;
	if (yych == 'o') goto yy766;
	goto yy760;
yy765:
	yych = *++cur;
	if (yych == 'u') goto yy767;
	goto yy760;
yy766:
	yych = *++cur;
	if (yych == 'm') goto yy768;
	goto yy760;
yy767:
	yych = *++cur;
	if (yych == 'l') goto yy769;
	goto yy760;
yy768:
	++cur;
#line 236 "../src/parse/conf_lexer.re"
	{ SETOPT(api, Api::CUSTOM);  goto end; }
#line 4098 "src/parse/conf_lexer.cc"
yy769:
	yych = *++cur;
	if (yych != 't') goto yy760;
	++cur;
#line 235 "../src/parse/conf_lexer.re"
	{ SETOPT(api, Api::DEFAULT); goto end; }
#line 4105 "src/parse/conf_lexer.cc"
}
#line 237 "../src/parse/conf_lexer.re"


api_style:
    CHECK_RET(lex_conf_assign());

#line 4113 "src/parse/conf_lexer.cc"
{
	uint8_t yych;
	if ((lim - cur) < 9) YYFILL(9);
	yych = *cur;
	if (yych == 'f') goto yy772;
	++cur;
yy771:
#line 242 "../src/parse/conf_lexer.re"
	{
        RET_FAIL(error_at_cur("bad configuration value (expected: 'functions', 'free-form')"));
    }
#line 4125 "src/parse/conf_lexer.cc"
yy772:
	yych = *(mar = ++cur);
	if (yych == 'r') goto yy773;
	if (yych == 'u') goto yy775;
	goto yy771;
yy773:
	yych = *++cur;
	if (yych == 'e') goto yy776;
yy774:
	cur = mar;
	goto yy771;
yy775:
	yych = *++cur;
	if (yych == 'n') goto yy777;
	goto yy774;
yy776:
	yych = *++cur;
	if (yych == 'e') goto yy778;
	goto yy774;
yy777:
	yych = *++cur;
	if (yych == 'c') goto yy779;
	goto yy774;
yy778:
	yych = *++cur;
	if (yych == '-') goto yy780;
	goto yy774;
yy779:
	yych = *++cur;
	if (yych == 't') goto yy781;
	goto yy774;
yy780:
	yych = *++cur;
	if (yych == 'f') goto yy782;
	goto yy774;
yy781:
	yych = *++cur;
	if (yych == 'i') goto yy783;
	goto yy774;
yy782:
	yych = *++cur;
	if (yych == 'o') goto yy784;
	goto yy774;
yy783:
	yych = *++cur;
	if (yych == 'o') goto yy785;
	goto yy774;
yy784:
	yych = *++cur;
	if (yych == 'r') goto yy786;
	goto yy774;
yy785:
	yych = *++cur;
	if (yych == 'n') goto yy787;
	goto yy774;
yy786:
	yych = *++cur;
	if (yych == 'm') goto yy788;
	goto yy774;
yy787:
	yych = *++cur;
	if (yych == 's') goto yy789;
	goto yy774;
yy788:
	++cur;
#line 246 "../src/parse/conf_lexer.re"
	{ SETOPT(api_style, ApiStyle::FREEFORM);  goto end; }
#line 4193 "src/parse/conf_lexer.cc"
yy789:
	++cur;
#line 245 "../src/parse/conf_lexer.re"
	{ SETOPT(api_style, ApiStyle::FUNCTIONS); goto end; }
#line 4198 "src/parse/conf_lexer.cc"
}
#line 247 "../src/parse/conf_lexer.re"


encoding_policy:
    CHECK_RET(lex_conf_assign());

#line 4206 "src/parse/conf_lexer.cc"
{
	uint8_t yych;
	if ((lim - cur) < 10) YYFILL(10);
	yych = *cur;
	if (yych <= 'h') {
		if (yych == 'f') goto yy792;
	} else {
		if (yych <= 'i') goto yy793;
		if (yych == 's') goto yy794;
	}
	++cur;
yy791:
#line 252 "../src/parse/conf_lexer.re"
	{
        RET_FAIL(error_at_cur(
                "bad configuration value (expected: 'ignore', 'substitute', 'fail')"));
    }
#line 4224 "src/parse/conf_lexer.cc"
yy792:
	yych = *(mar = ++cur);
	if (yych == 'a') goto yy795;
	goto yy791;
yy793:
	yych = *(mar = ++cur);
	if (yych == 'g') goto yy797;
	goto yy791;
yy794:
	yych = *(mar = ++cur);
	if (yych == 'u') goto yy798;
	goto yy791;
yy795:
	yych = *++cur;
	if (yych == 'i') goto yy799;
yy796:
	cur = mar;
	goto yy791;
yy797:
	yych = *++cur;
	if (yych == 'n') goto yy800;
	goto yy796;
yy798:
	yych = *++cur;
	if (yych == 'b') goto yy801;
	goto yy796;
yy799:
	yych = *++cur;
	if (yych == 'l') goto yy802;
	goto yy796;
yy800:
	yych = *++cur;
	if (yych == 'o') goto yy803;
	goto yy796;
yy801:
	yych = *++cur;
	if (yych == 's') goto yy804;
	goto yy796;
yy802:
	++cur;
#line 258 "../src/parse/conf_lexer.re"
	{ SETOPT(encoding_policy, Enc::Policy::FAIL);       goto end; }
#line 4267 "src/parse/conf_lexer.cc"
yy803:
	yych = *++cur;
	if (yych == 'r') goto yy805;
	goto yy796;
yy804:
	yych = *++cur;
	if (yych == 't') goto yy806;
	goto yy796;
yy805:
	yych = *++cur;
	if (yych == 'e') goto yy807;
	goto yy796;
yy806:
	yych = *++cur;
	if (yych == 'i') goto yy808;
	goto yy796;
yy807:
	++cur;
#line 256 "../src/parse/conf_lexer.re"
	{ SETOPT(encoding_policy, Enc::Policy::IGNORE);     goto end; }
#line 4288 "src/parse/conf_lexer.cc"
yy808:
	yych = *++cur;
	if (yych != 't') goto yy796;
	yych = *++cur;
	if (yych != 'u') goto yy796;
	yych = *++cur;
	if (yych != 't') goto yy796;
	yych = *++cur;
	if (yych != 'e') goto yy796;
	++cur;
#line 257 "../src/parse/conf_lexer.re"
	{ SETOPT(encoding_policy, Enc::Policy::SUBSTITUTE); goto end; }
#line 4301 "src/parse/conf_lexer.cc"
}
#line 259 "../src/parse/conf_lexer.re"


empty_class:
    CHECK_RET(lex_conf_assign());

#line 4309 "src/parse/conf_lexer.cc"
{
	uint8_t yych;
	if ((lim - cur) < 11) YYFILL(11);
	yych = *cur;
	if (yych == 'e') goto yy811;
	if (yych == 'm') goto yy812;
	++cur;
yy810:
#line 264 "../src/parse/conf_lexer.re"
	{
        RET_FAIL(error_at_cur(
                "bad configuration value (expected: 'match-empty', 'match-none', 'error')"));
    }
#line 4323 "src/parse/conf_lexer.cc"
yy811:
	yych = *(mar = ++cur);
	if (yych == 'r') goto yy813;
	goto yy810;
yy812:
	yych = *(mar = ++cur);
	if (yych == 'a') goto yy815;
	goto yy810;
yy813:
	yych = *++cur;
	if (yych == 'r') goto yy816;
yy814:
	cur = mar;
	goto yy810;
yy815:
	yych = *++cur;
	if (yych == 't') goto yy817;
	goto yy814;
yy816:
	yych = *++cur;
	if (yych == 'o') goto yy818;
	goto yy814;
yy817:
	yych = *++cur;
	if (yych == 'c') goto yy819;
	goto yy814;
yy818:
	yych = *++cur;
	if (yych == 'r') goto yy820;
	goto yy814;
yy819:
	yych = *++cur;
	if (yych == 'h') goto yy821;
	goto yy814;
yy820:
	++cur;
#line 270 "../src/parse/conf_lexer.re"
	{ SETOPT(empty_class, EmptyClass::ERROR);       goto end; }
#line 4362 "src/parse/conf_lexer.cc"
yy821:
	yych = *++cur;
	if (yych != '-') goto yy814;
	yych = *++cur;
	if (yych == 'e') goto yy822;
	if (yych == 'n') goto yy823;
	goto yy814;
yy822:
	yych = *++cur;
	if (yych == 'm') goto yy824;
	goto yy814;
yy823:
	yych = *++cur;
	if (yych == 'o') goto yy825;
	goto yy814;
yy824:
	yych = *++cur;
	if (yych == 'p') goto yy826;
	goto yy814;
yy825:
	yych = *++cur;
	if (yych == 'n') goto yy827;
	goto yy814;
yy826:
	yych = *++cur;
	if (yych == 't') goto yy828;
	goto yy814;
yy827:
	yych = *++cur;
	if (yych == 'e') goto yy829;
	goto yy814;
yy828:
	yych = *++cur;
	if (yych == 'y') goto yy830;
	goto yy814;
yy829:
	++cur;
#line 269 "../src/parse/conf_lexer.re"
	{ SETOPT(empty_class, EmptyClass::MATCH_NONE);  goto end; }
#line 4402 "src/parse/conf_lexer.cc"
yy830:
	++cur;
#line 268 "../src/parse/conf_lexer.re"
	{ SETOPT(empty_class, EmptyClass::MATCH_EMPTY); goto end; }
#line 4407 "src/parse/conf_lexer.cc"
}
#line 271 "../src/parse/conf_lexer.re"


char_lit:
    CHECK_RET(lex_conf_assign());

#line 4415 "src/parse/conf_lexer.cc"
{
	uint8_t yych;
	unsigned int yyaccept = 0;
	if ((lim - cur) < 11) YYFILL(11);
	yych = *cur;
	if (yych == 'c') goto yy833;
	if (yych == 'h') goto yy834;
	++cur;
yy832:
#line 276 "../src/parse/conf_lexer.re"
	{
        RET_FAIL(error_at_cur("bad configuration value (expected: 'char', 'hex', 'char_or_hex')"));
    }
#line 4429 "src/parse/conf_lexer.cc"
yy833:
	yyaccept = 0;
	yych = *(mar = ++cur);
	if (yych == 'h') goto yy835;
	goto yy832;
yy834:
	yyaccept = 0;
	yych = *(mar = ++cur);
	if (yych == 'e') goto yy837;
	goto yy832;
yy835:
	yych = *++cur;
	if (yych == 'a') goto yy838;
yy836:
	cur = mar;
	if (yyaccept == 0) {
		goto yy832;
	} else {
		goto yy841;
	}
yy837:
	yych = *++cur;
	if (yych == 'x') goto yy839;
	goto yy836;
yy838:
	yych = *++cur;
	if (yych == 'r') goto yy840;
	goto yy836;
yy839:
	++cur;
#line 280 "../src/parse/conf_lexer.re"
	{ SETOPT(char_literals, CharLit::HEX);         goto end; }
#line 4462 "src/parse/conf_lexer.cc"
yy840:
	yyaccept = 1;
	yych = *(mar = ++cur);
	if (yych == '_') goto yy842;
yy841:
#line 279 "../src/parse/conf_lexer.re"
	{ SETOPT(char_literals, CharLit::CHAR);        goto end; }
#line 4470 "src/parse/conf_lexer.cc"
yy842:
	yych = *++cur;
	if (yych != 'o') goto yy836;
	yych = *++cur;
	if (yych != 'r') goto yy836;
	yych = *++cur;
	if (yych != '_') goto yy836;
	yych = *++cur;
	if (yych != 'h') goto yy836;
	yych = *++cur;
	if (yych != 'e') goto yy836;
	yych = *++cur;
	if (yych != 'x') goto yy836;
	++cur;
#line 281 "../src/parse/conf_lexer.re"
	{ SETOPT(char_literals, CharLit::CHAR_OR_HEX); goto end; }
#line 4487 "src/parse/conf_lexer.cc"
}
#line 282 "../src/parse/conf_lexer.re"


end:
    return lex_conf_semicolon();
}

Ret Input::lex_conf_assign() {

#line 4498 "src/parse/conf_lexer.cc"
{
	uint8_t yych;
	static const unsigned char yybm[] = {
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0, 128,   0,   0,   0, 128,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		128,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
	};
	if ((lim - cur) < 2) YYFILL(2);
	yych = *cur;
	if (yych <= '\r') {
		if (yych == '\t') goto yy845;
		if (yych >= '\r') goto yy845;
	} else {
		if (yych <= ' ') {
			if (yych >= ' ') goto yy845;
		} else {
			if (yych == '=') goto yy846;
		}
	}
	++cur;
yy844:
#line 290 "../src/parse/conf_lexer.re"
	{ RET_FAIL(error_at_cur("missing '=' in configuration")); }
#line 4551 "src/parse/conf_lexer.cc"
yy845:
	yych = *(mar = ++cur);
	if (yych <= '\r') {
		if (yych == '\t') goto yy847;
		if (yych <= '\f') goto yy844;
		goto yy847;
	} else {
		if (yych <= ' ') {
			if (yych <= 0x1F) goto yy844;
			goto yy847;
		} else {
			if (yych != '=') goto yy844;
		}
	}
yy846:
	++cur;
	if (lim <= cur) YYFILL(1);
	yych = *cur;
	if (yybm[0+yych] & 128) {
		goto yy846;
	}
#line 291 "../src/parse/conf_lexer.re"
	{ return Ret::OK; }
#line 4575 "src/parse/conf_lexer.cc"
yy847:
	++cur;
	if (lim <= cur) YYFILL(1);
	yych = *cur;
	if (yych <= '\r') {
		if (yych == '\t') goto yy847;
		if (yych >= '\r') goto yy847;
	} else {
		if (yych <= ' ') {
			if (yych >= ' ') goto yy847;
		} else {
			if (yych == '=') goto yy846;
		}
	}
	cur = mar;
	goto yy844;
}
#line 292 "../src/parse/conf_lexer.re"

}

Ret Input::lex_conf_semicolon() {

#line 4599 "src/parse/conf_lexer.cc"
{
	uint8_t yych;
	static const unsigned char yybm[] = {
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0, 128,   0,   0,   0, 128,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		128,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
	};
	if ((lim - cur) < 2) YYFILL(2);
	yych = *cur;
	if (yych <= '\r') {
		if (yych == '\t') goto yy850;
		if (yych >= '\r') goto yy850;
	} else {
		if (yych <= ' ') {
			if (yych >= ' ') goto yy850;
		} else {
			if (yych == ';') goto yy851;
		}
	}
	++cur;
yy849:
#line 297 "../src/parse/conf_lexer.re"
	{ RET_FAIL(error_at_cur("missing ending ';' in configuration")); }
#line 4652 "src/parse/conf_lexer.cc"
yy850:
	yych = *(mar = ++cur);
	if (yybm[0+yych] & 128) {
		goto yy852;
	}
	if (yych != ';') goto yy849;
yy851:
	++cur;
#line 298 "../src/parse/conf_lexer.re"
	{ return Ret::OK; }
#line 4663 "src/parse/conf_lexer.cc"
yy852:
	++cur;
	if (lim <= cur) YYFILL(1);
	yych = *cur;
	if (yybm[0+yych] & 128) {
		goto yy852;
	}
	if (yych == ';') goto yy851;
	cur = mar;
	goto yy849;
}
#line 299 "../src/parse/conf_lexer.re"

}

Ret Input::lex_conf_number() {
    CHECK_RET(parse_conf());
    if (conf_kind != ConfKind::NUM) {
        RET_FAIL(error_at_tok("configuration value should be a number"));
    }
    return Ret::OK;
}

inline Ret Input::lex_conf_bool() {
    CHECK_RET(parse_conf());
    if (conf_kind != ConfKind::NUM) {
        RET_FAIL(error_at_tok("configuration value should be a boolean value 0 or 1"));
    }
    return Ret::OK;
}

// Historically re2c allowed raw (unquoted) strings containing special symbols as configuration
// values in source files. In syntax files this is not allowed, as it would conflict with other
// parts of grammar (e.g. parentheses and question mark are used for conditionals). Therefore we
// have a legacy method for string configurations in source files.
Ret Input::lex_conf_string_legacy() {
    CHECK_RET(lex_conf_assign());
    tok = cur;

#line 4703 "src/parse/conf_lexer.cc"
{
	uint8_t yych;
	static const unsigned char yybm[] = {
		  0, 128, 128, 128, 128, 128, 128, 128, 
		128,   0,   0, 128, 128,   0, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		  0, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128,   0, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128, 128, 128, 128, 128, 128, 128, 
	};
	if (lim <= cur) YYFILL(1);
	yych = *cur;
	if (yych <= ' ') {
		if (yych <= '\n') {
			if (yych <= 0x00) goto yy854;
			if (yych <= 0x08) goto yy855;
		} else {
			if (yych == '\r') goto yy854;
			if (yych <= 0x1F) goto yy855;
		}
	} else {
		if (yych <= '&') {
			if (yych == '"') goto yy856;
			goto yy855;
		} else {
			if (yych <= '\'') goto yy856;
			if (yych != ';') goto yy855;
		}
	}
yy854:
#line 328 "../src/parse/conf_lexer.re"
	{ tmp_str.clear(); goto end; }
#line 4762 "src/parse/conf_lexer.cc"
yy855:
	++cur;
	if (lim <= cur) YYFILL(1);
	yych = *cur;
	if (yybm[0+yych] & 128) {
		goto yy855;
	}
#line 327 "../src/parse/conf_lexer.re"
	{ tmp_str.assign(tok, cur); goto end; }
#line 4772 "src/parse/conf_lexer.cc"
yy856:
	++cur;
#line 326 "../src/parse/conf_lexer.re"
	{ CHECK_RET(lex_conf_string_quoted(tok[0])); goto end; }
#line 4777 "src/parse/conf_lexer.cc"
}
#line 329 "../src/parse/conf_lexer.re"

end:
    return lex_conf_semicolon();
}

Ret Input::lex_conf_string() {
    if (!in_syntax_file) {
        return lex_conf_string_legacy();
    }

    CHECK_RET(parse_conf());
    if (conf_kind != ConfKind::STR) {
        RET_FAIL(error_at_tok("configuration value should be a string"));
    }
    return Ret::OK;
}

Ret Input::lex_conf_list() {
    CHECK_RET(parse_conf());
    if (conf_kind != ConfKind::LIST) {
        RET_FAIL(error_at_tok("configuration value should be a list"));
    }
    return Ret::OK;
}

Ret Input::lex_conf_string_quoted(uint8_t quote) {
    AstChar c;
    bool stop;
    tmp_str.clear();
    for (;;) {
        CHECK_RET(lex_str_chr(quote, c, stop));
        if (stop) return Ret::OK;
        if (c.chr > 0xFF) {
            RET_FAIL(error_at(c.loc, "multibyte character in configuration string: 0x%X", c.chr));
        }
        tmp_str += static_cast<char>(c.chr);
    }
}

Ret Input::lex_conf_token(CONF_STYPE* yylval, int& token) {
start:
    tok = cur;

#line 4823 "src/parse/conf_lexer.cc"
{
	uint8_t yych;
	static const unsigned char yybm[] = {
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,  64,   0,   0,   0,  64,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		 64,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		128, 128, 128, 128, 128, 128, 128, 128, 
		128, 128,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
		  0,   0,   0,   0,   0,   0,   0,   0, 
	};
	if ((lim - cur) < 2) YYFILL(2);
	yych = *cur;
	if (yybm[0+yych] & 64) {
		goto yy861;
	}
	if (yych <= '0') {
		if (yych <= '&') {
			if (yych <= '\n') {
				if (yych <= 0x00) goto yy858;
				if (yych <= 0x08) goto yy859;
				goto yy862;
			} else {
				if (yych == '"') goto yy863;
				goto yy859;
			}
		} else {
			if (yych <= '+') {
				if (yych <= '\'') goto yy863;
				if (yych <= ')') goto yy864;
				goto yy859;
			} else {
				if (yych <= ',') goto yy864;
				if (yych <= '-') goto yy865;
				if (yych <= '/') goto yy859;
				goto yy866;
			}
		}
	} else {
		if (yych <= '?') {
			if (yych <= ';') {
				if (yych <= '9') goto yy868;
				if (yych <= ':') goto yy864;
				goto yy869;
			} else {
				if (yych == '=') goto yy864;
				if (yych <= '>') goto yy859;
				goto yy864;
			}
		} else {
			if (yych <= '\\') {
				if (yych == '[') goto yy864;
				goto yy859;
			} else {
				if (yych <= ']') goto yy864;
				if (yych <= '`') goto yy859;
				if (yych <= 'z') goto yy870;
				goto yy859;
			}
		}
	}
yy858:
	++cur;
#line 375 "../src/parse/conf_lexer.re"
	{
        RET_FAIL(error_at_cur("unexpected end of input in configuration"));
    }
#line 4916 "src/parse/conf_lexer.cc"
yy859:
	++cur;
yy860:
#line 402 "../src/parse/conf_lexer.re"
	{
        RET_FAIL(error_at_cur("unexpected character: '%c'", cur[-1]));
    }
#line 4924 "src/parse/conf_lexer.cc"
yy861:
	++cur;
	if (lim <= cur) YYFILL(1);
	yych = *cur;
	if (yybm[0+yych] & 64) {
		goto yy861;
	}
#line 385 "../src/parse/conf_lexer.re"
	{
        goto start;
    }
#line 4936 "src/parse/conf_lexer.cc"
yy862:
	++cur;
#line 378 "../src/parse/conf_lexer.re"
	{
        next_line();
        goto start;
    }
#line 4944 "src/parse/conf_lexer.cc"
yy863:
	++cur;
#line 394 "../src/parse/conf_lexer.re"
	{
        CHECK_RET(lex_conf_string_quoted(cur[-1]));
        yylval->str = copystr(tmp_str, alc);
        RET_TOK(CONF_STRING);
    }
#line 4953 "src/parse/conf_lexer.cc"
yy864:
	++cur;
#line 382 "../src/parse/conf_lexer.re"
	{
        RET_TOK(cur[-1]);
    }
#line 4960 "src/parse/conf_lexer.cc"
yy865:
	yych = *++cur;
	if (yych <= '0') goto yy860;
	if (yych <= '9') goto yy868;
	goto yy860;
yy866:
	++cur;
yy867:
#line 388 "../src/parse/conf_lexer.re"
	{
        if (!s_to_i32_unsafe(tok, cur, yylval->num)) {
            RET_FAIL(error_at_cur("configuration value overflow"));
        }
        RET_TOK(CONF_NUMBER);
    }
#line 4976 "src/parse/conf_lexer.cc"
yy868:
	++cur;
	if (lim <= cur) YYFILL(1);
	yych = *cur;
	if (yybm[0+yych] & 128) {
		goto yy868;
	}
	goto yy867;
yy869:
	++cur;
#line 372 "../src/parse/conf_lexer.re"
	{
        RET_TOK(CONF_EOF);
    }
#line 4991 "src/parse/conf_lexer.cc"
yy870:
	++cur;
	cur -= 1;
#line 399 "../src/parse/conf_lexer.re"
	{
        goto opt;
    }
#line 4999 "src/parse/conf_lexer.cc"
}
#line 405 "../src/parse/conf_lexer.re"


opt:
    tok = cur;
    // A subset of options is exported for use in `conf:*` configurations in syntax files.
    // Only constant options should be allowed here, as they will be used before the input file is
    // parsed and mutable options (block-level configurations) are known.
    //
    // These options are part of the syntax file API and should not be removed or changed.

#line 5012 "src/parse/conf_lexer.cc"
{
	uint8_t yych;
	if ((lim - cur) < 30) YYFILL(30);
	yych = *cur;
	if (yych == 'c') goto yy873;
	++cur;
yy872:
#line 419 "../src/parse/conf_lexer.re"
	{ RET_FAIL(error_at_cur("unknown option")); }
#line 5022 "src/parse/conf_lexer.cc"
yy873:
	yych = *(mar = ++cur);
	if (yych != 'o') goto yy872;
	yych = *++cur;
	if (yych == 'd') goto yy875;
yy874:
	cur = mar;
	goto yy872;
yy875:
	yych = *++cur;
	if (yych != 'e') goto yy874;
	yych = *++cur;
	if (yych != '_') goto yy874;
	yych = *++cur;
	if (yych != 'm') goto yy874;
	yych = *++cur;
	if (yych != 'o') goto yy874;
	yych = *++cur;
	if (yych != 'd') goto yy874;
	yych = *++cur;
	if (yych != 'e') goto yy874;
	yych = *++cur;
	if (yych != 'l') goto yy874;
	yych = *++cur;
	if (yych != '.') goto yy874;
	yych = *++cur;
	if (yych <= 'k') {
		if (yych != 'g') goto yy874;
	} else {
		if (yych <= 'l') goto yy876;
		if (yych == 'r') goto yy877;
		goto yy874;
	}
	yych = *++cur;
	if (yych == 'o') goto yy878;
	goto yy874;
yy876:
	yych = *++cur;
	if (yych == 'o') goto yy879;
	goto yy874;
yy877:
	yych = *++cur;
	if (yych == 'e') goto yy880;
	goto yy874;
yy878:
	yych = *++cur;
	if (yych == 't') goto yy881;
	goto yy874;
yy879:
	yych = *++cur;
	if (yych == 'o') goto yy882;
	goto yy874;
yy880:
	yych = *++cur;
	if (yych == 'c') goto yy883;
	goto yy874;
yy881:
	yych = *++cur;
	if (yych == 'o') goto yy884;
	goto yy874;
yy882:
	yych = *++cur;
	if (yych == 'p') goto yy885;
	goto yy874;
yy883:
	yych = *++cur;
	if (yych == 'u') goto yy886;
	goto yy874;
yy884:
	yych = *++cur;
	if (yych == '_') goto yy887;
	goto yy874;
yy885:
	yych = *++cur;
	if (yych == '_') goto yy888;
	goto yy874;
yy886:
	yych = *++cur;
	if (yych == 'r') goto yy889;
	goto yy874;
yy887:
	yych = *++cur;
	if (yych == 'l') goto yy890;
	goto yy874;
yy888:
	yych = *++cur;
	if (yych == 's') goto yy891;
	goto yy874;
yy889:
	yych = *++cur;
	if (yych == 's') goto yy892;
	goto yy874;
yy890:
	yych = *++cur;
	if (yych == 'a') goto yy893;
	goto yy874;
yy891:
	yych = *++cur;
	if (yych == 'w') goto yy894;
	goto yy874;
yy892:
	yych = *++cur;
	if (yych == 'i') goto yy895;
	goto yy874;
yy893:
	yych = *++cur;
	if (yych == 'b') goto yy896;
	goto yy874;
yy894:
	yych = *++cur;
	if (yych == 'i') goto yy897;
	goto yy874;
yy895:
	yych = *++cur;
	if (yych == 'v') goto yy898;
	goto yy874;
yy896:
	yych = *++cur;
	if (yych == 'e') goto yy899;
	goto yy874;
yy897:
	yych = *++cur;
	if (yych == 't') goto yy900;
	goto yy874;
yy898:
	yych = *++cur;
	if (yych == 'e') goto yy901;
	goto yy874;
yy899:
	yych = *++cur;
	if (yych == 'l') goto yy902;
	goto yy874;
yy900:
	yych = *++cur;
	if (yych == 'c') goto yy903;
	goto yy874;
yy901:
	yych = *++cur;
	if (yych == '_') goto yy904;
	goto yy874;
yy902:
	++cur;
#line 415 "../src/parse/conf_lexer.re"
	{ RET_OPT(globopts->code_model == CodeModel::GOTO_LABEL); }
#line 5167 "src/parse/conf_lexer.cc"
yy903:
	yych = *++cur;
	if (yych == 'h') goto yy905;
	goto yy874;
yy904:
	yych = *++cur;
	if (yych == 'f') goto yy906;
	goto yy874;
yy905:
	++cur;
#line 416 "../src/parse/conf_lexer.re"
	{ RET_OPT(globopts->code_model == CodeModel::LOOP_SWITCH); }
#line 5180 "src/parse/conf_lexer.cc"
yy906:
	yych = *++cur;
	if (yych != 'u') goto yy874;
	yych = *++cur;
	if (yych != 'n') goto yy874;
	yych = *++cur;
	if (yych != 'c') goto yy874;
	yych = *++cur;
	if (yych != 't') goto yy874;
	yych = *++cur;
	if (yych != 'i') goto yy874;
	yych = *++cur;
	if (yych != 'o') goto yy874;
	yych = *++cur;
	if (yych != 'n') goto yy874;
	yych = *++cur;
	if (yych != 's') goto yy874;
	++cur;
#line 417 "../src/parse/conf_lexer.re"
	{ RET_OPT(globopts->code_model == CodeModel::REC_FUNC); }
#line 5201 "src/parse/conf_lexer.cc"
}
#line 420 "../src/parse/conf_lexer.re"


    UNREACHABLE();
    return Ret::FAIL; // unreachable
}

#undef YYFILL
#undef RET_CONF_BOOL
#undef RET_CONF_STR
#undef RET_CONF_ENC
#undef RET_CONF_NUM_NONNEG
#undef RET_TOK
#undef RET_OPT

} // end namespace re2c
